#----------------------------------------------------------------------------*
#     D E V I C E    D O C U M E N T                                         *
#----------------------------------------------------------------------------*

document DeviceDocument root DeviceRoot {
#--- Selected Page
  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.selectedPageIndex ;
  outlet NSView mMasterView ;
  outlet CanariViewWithKeyView mDescriptionPageView ;
  outlet CanariViewWithKeyView mSymbolPageView ;
  outlet CanariViewWithKeyView mPackagePageView ;
  outlet CanariViewWithKeyView mAssignmentPageView ;
  outlet CanariViewWithKeyView mLibraryPageView ;
  outlet CanariViewWithKeyView mInfosPageView ;

#--- Signature
  outlet CanariSignatureField mSignatureTextField $signature signature ;

#--- Version
  outlet CanariVersionField mVersionField $version version $versionShouldChange versionShouldChange ;

#--- Issues
  outlet EBImageObserverView mStatusImageViewInToolbar $image self.mStatusImage $tooltip self.mStatusMessage ;
  transient NSImage mStatusImage dependsFrom root.issues ;
  transient String mStatusMessage dependsFrom root.issues ;
  transient MetadataStatus mMetadataStatus dependsFrom root.issues ;

  outlet EBTextObserverView mIssueTextView $valueObserver self.mStatusMessage ;

#-------------------------- Page : Description
  outlet EBTextField mTitleTextField $value root.title {sendContinously: yes} ;

  outlet DeviceDroppableImageView mRepresentationImageView $imageData root.representationImageData ;
  
  action pasteImageAction ;
  outlet EBButton mPasteImageButton $run self.pasteImageAction ;
  
  action copyImageAction ;
  outlet EBButton mCopyImageButton $run self.copyImageAction $enabled root.imageIsValid ;
  
  action removeImageAction ;
  outlet EBButton mRemoveImageButton $run self.removeImageAction $enabled root.imageIsValid ;

  tableViewController mDocumentationController {allowsEmptySelection:no, allowsMultipleSelection:no} root.mDocs {
     column "name" EBTextObserverField $valueObserver self.mFileName
     column "size" EBIntObserverField $valueObserver self.fileSize {autoFormatter : yes}
  }


  outlet DeviceDocumentationTableView mDocumentationTableView $tableValue mDocumentationController ;

  outlet EBButton mRemoveSelectedDocButton
    $run mDocumentationController.remove
    $enabled mDocumentationController.selectedArray.count > 0
  ;

  action showDocAction ;
  outlet EBButton mShowDocButton
    $run self.showDocAction
    $enabled mDocumentationController.selectedArray.count > 0
  ;

  action saveDocAction ;
  outlet EBButton mSaveDocButton
    $run self.saveDocAction
    $enabled mDocumentationController.selectedArray.count > 0
  ;


#-------------------------- Page : Symbols
  action addSymbolFromLibraryAction ;
  outlet EBButton mAddSymbolFromLibraryButton $run self.addSymbolFromLibraryAction ;

  arrayController mSymbolDisplayController : root.mSymbolInstances ;
  selectionController SymbolInstanceInDevice mSymbolInstanceSelection : self.mSymbolDisplayController.selectedArray ;

  outlet EBView mComposedSymbolView
    $horizontalFlip root.mSymbolDisplayHorizontalFlip
    $verticalFlip root.mSymbolDisplayVerticalFlip
    $graphicController self.mSymbolDisplayController
    $zoom root.mSymbolDisplayZoom
  ;

  outlet EBSwitch mSymbolDisplayHorizontalFlipSwitch $value root.mSymbolDisplayHorizontalFlip ;
  outlet EBSwitch mSymbolDisplayVerticalFlipSwitch $value root.mSymbolDisplayVerticalFlip ;

  outlet AddSymbolInstancePullDownButton mAddSymbolInstancePullDownButton
    $enabled root.mSymbolTypes.count > 0
    $symbolTypeNames root.symbolTypeNames
  ;

  outlet EBTextObserverView mInconsistentSymbolNameMessageTextView
    $valueObserver root.inconsistentSymbolNameSetMessage
  ;

  outlet NSScrollView mInconsistentSymbolNameMessageScrollView
    $hidden root.symbolNameAreConsistent
  ;

  outlet EBTextField mSymbolNameTextField $value mSymbolInstanceSelection.mInstanceName  {sendContinously : yes} ;
 
#-------------------------- Page : Packages
  action addPackageFromLibraryAction ;
  outlet EBButton mAddPackageFromLibraryButton $run self.addPackageFromLibraryAction ;

  arrayController mPackageDisplayController : root.mPackages ;

  outlet EBView mComposedPackageView
    $horizontalFlip root.mPackageDisplayHorizontalFlip
    $verticalFlip root.mPackageDisplayVerticalFlip
    $graphicController self.mPackageDisplayController
    $zoom root.mPackageDisplayZoom
  ;

  outlet EBSwitch mPackageDisplayHorizontalFlipSwitch $value root.mPackageDisplayHorizontalFlip ;
  outlet EBSwitch mPackageDisplayVerticalFlipSwitch $value root.mPackageDisplayVerticalFlip ;

  outlet EBSwitch mShowPackagesSwitch $value root.mShowPackages ;
  outlet EBColorWell mPackagesColorWell $color prefs.packageColor {sendContinously:no} ;

  outlet EBSwitch mShowPackagePadNumbersSwitch $value root.mShowPackagePadNumbers ;
  outlet EBColorWell mPackageNumbersColorWell $color prefs.padNumberColor {sendContinously:no} ;

  outlet EBSwitch mShowPackageFrontPadsSwitch $value root.mShowPackageFrontPads ;
  outlet EBColorWell mPackageFrontPadsColorWell $color prefs.frontSidePadColor {sendContinously:no} ;

  outlet EBSwitch mShowPackageBackPadsSwitch $value root.mShowPackageBackPads ;
  outlet EBColorWell mPackageBackPadsColorWell $color prefs.backSidePadColor {sendContinously:no} ;

  outlet EBTextObserverView mInconsistentPackagePadNameSetsMessageTextView
    $valueObserver root.inconsistentPackagePadNameSetsMessage
  ;

  outlet NSScrollView mInconsistentPackagePadNameSetsMessageScrollView
    $hidden root.packagePadNameSetsAreConsistent
  ;

#-------------------------- Page : Library

#--- Symbols
  tableViewController mSymbolController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mSymbolTypes {
     column "symbol" EBTextObserverField $valueObserver self.mTypeName
     column "version" EBTextObserverField $valueObserver self.versionString
     column "count" EBIntObserverField $valueObserver self.instanceCount {autoFormatter : yes}
  }
  outlet EBTableView mSymbolTableView $tableValue mSymbolController ;

  action resetSelectedSymbolVersion ;
  outlet EBButton mResetSelectedSymbolVersionButton
    $run self.resetSelectedSymbolVersion
    $enabled mSymbolController.selectedArray.count > 0
  ;

  action editSelectedSymbols ;
  outlet EBButton mEditSelectedSymbolsButton
    $run self.editSelectedSymbols
    $enabled mSymbolController.selectedArray.count > 0
  ;

  action exportSelectedSymbols ;
  outlet EBButton mExportSelectedSymbolsButton
    $run self.exportSelectedSymbols
    $enabled mSymbolController.selectedArray.count > 0
  ;

  action updateSelectedSymbols ;
  outlet EBButton mUpdateSelectedSymbolsButton
    $run self.updateSelectedSymbols
    $enabled mSymbolController.selectedArray.count > 0
  ;

#--- Packages
  tableViewController mPackageController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mPackages {
     column "package" EBTextObserverField $valueObserver self.mName
     column "version" EBTextObserverField $valueObserver self.versionString
  }
  outlet EBTableView mPackageTableView $tableValue mPackageController ;
  
  action resetSelectedPackageVersion ;
  outlet EBButton mResetSelectedPackageVersionButton
    $run self.resetSelectedPackageVersion
    $enabled mPackageController.selectedArray.count > 0
  ;

  action editSelectedPackages ;
  outlet EBButton mEditSelectedPackagesButton
    $run self.editSelectedPackages
    $enabled mPackageController.selectedArray.count > 0
  ;

  action exportSelectedPackages ;
  outlet EBButton mExportSelectedPackagesButton
    $run self.exportSelectedPackages
    $enabled mPackageController.selectedArray.count > 0
  ;

  action updateSelectedPackages ;
  outlet EBButton mUpdateSelectedPackagesButton
    $run self.updateSelectedPackages
    $enabled mPackageController.selectedArray.count > 0
  ;

#--------------- Page : assignments

  transient String assignmentInhibitionMessage
    dependsFrom root.inconsistentPackagePadNameSetsMessage, root.inconsistentSymbolNameSetMessage
  ;

  outlet EBTextObserverField mInconsistentPadNameSetTextField
    $valueObserver self.assignmentInhibitionMessage
    $hidden root.packagePadNameSetsAreConsistent & root.symbolNameAreConsistent
  ;

  outlet NSSplitView mAssignmentSplitView
    $hidden !root.packagePadNameSetsAreConsistent | !root.symbolNameAreConsistent
  ;

#--------------- Page : Infos
#--- Prefix
  outlet EBTextField mPrefixTextField $value root.prefix {sendContinously : yes} ;

#--- Prefix
  outlet EBTextView mCommentTextView $value root.comments ;

#--- Reset
  action resetVersionAction ;
  outlet EBButton mResetVersionButton $run self.resetVersionAction ;
}

#----------------------------------------------------------------------------*
