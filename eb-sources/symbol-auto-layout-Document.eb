//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

autoLayoutDocument AutoLayoutSymbolDocument : AutoLayoutSymbolDocumentSuperClass root SymbolRoot stackView mDocumentMainView {

//----------------------------------------------------------------------------------------------------------------------
//   MAIN VIEW
//----------------------------------------------------------------------------------------------------------------------
 
  stackView mPageMasterView vStack { }
 
  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, small: no) {
          addPage (title: "Symbol", pageView: stackView mSymbolPage)
          addPage (title: "Infos", pageView: stackView mInfosPage)
          $selectedPage root.selectedPageIndex
        }
        hStack { space StaticLabel (title: "Page", bold: no, small: yes) space }
      }
      vStack {
        SignatureField { $signature signature }
        StaticLabel (title: "Signature", bold: no, small: yes) { setCenterAlignment ()  makeWidthExpandable () }
      }
      vStack {
        VersionField { $version version $versionShouldChange versionShouldChange }
        StaticLabel (title: "Version", bold: no, small: yes) { setCenterAlignment () makeWidthExpandable () }
      }
      space
      vStack {
        hStack { space ImageObserverView (small: no) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, small: yes) {  setCenterAlignment () }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom root.issues ;
  transient String statusMessage dependsFrom root.issues ;
  transient MetadataStatus metadataStatus dependsFrom root.issues ;

//----------------------------------------------------------------------------------------------------------------------
//   PAGE   SYMBOL
//----------------------------------------------------------------------------------------------------------------------

  arrayController #mSymbolObjectsController : root.symbolObjects ;

  transient NSImage addSegmentButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addBezierButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addOvalButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addSolidOvalButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addSolidRectButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addTextButtonImage dependsFrom prefs.symbolColor ;
  transient NSImage addPinButtonImage dependsFrom prefs.symbolColor ;

  stackView mSymbolPageInspectorMasterView : vStack ;

  stackView mSymbolPage hStack set (margins: 0) set (spacing: 0) {
    vStack set (width: 250) {
      vStack set (leftMargin: 20) set (rightMargin: 20) set (topMargin: 8) set (spacing: 12) {
        hStack set (spacing: 0) {
          DragSourceButton (tooltip: "Add Segment") [configurator addSymbolSegment] { $image self.addSegmentButtonImage }
          space
          DragSourceButton (tooltip: "Add Bezier") [configurator addSymbolBezier] { $image self.addBezierButtonImage }
          space
          DragSourceButton (tooltip: "Add Solid Oval") [configurator addSymbolSolidOval] { $image self.addSolidOvalButtonImage }
          space
          DragSourceButton (tooltip: "Add Oval") [configurator addSymbolOval] { $image self.addOvalButtonImage }
          space
          DragSourceButton (tooltip: "Add Solid Rect") [configurator addSymbolSolidRect] { $image self.addSolidRectButtonImage }
          space
          DragSourceButton (tooltip: "Add Text") [configurator addSymbolText] { $image self.addTextButtonImage }
          space
          DragSourceButton (tooltip: "Add Pin") [configurator addSymbolPin] { $image self.addPinButtonImage }
        }
     }
     separator
     vStack set (leftMargin: 20) set (rightMargin: 20) {
       SegmentedControlWithPages (documentView: stackView mSymbolPageInspectorMasterView, equalWidth: yes, small: yes)
          [outlet mSymbolInspectorSegmentedControl configurator symbolPageSegmentedControl] {
          makeWidthExpandable ()
          addPage (title: "", pageView: stackView mSelectedObjectsInspectorView)
          addPage (title: "", pageView: stackView mGridZoomInspectorView)
          addPage (title: "", pageView: stackView mDisplayInspectorView)
          addPage (title: "", pageView: stackView mIssuesInspectorView)
          $selectedPage root.selectedInspector
          $segmentImage root.segmentedControlSegmentIssueImage (segmentIndex : 3)
          $segmentTitle root.segmentedControlSegmentIssueString (segmentIndex : 3)
         }
      }
      vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (spacing: 12) {
        view mSymbolPageInspectorMasterView
      }
    }
    separator
    GraphicView (minZoom: 10, maxZoom: 4000) [outlet mSymbolGraphicView configurator symbolGraphicView] {
      $horizontalFlip root.horizontalFlip
      $verticalFlip root.verticalFlip
      $graphicController #mSymbolObjectsController
      $gridStyle root.gridStyle
      $gridDisplayFactor root.gridDisplay
      $gridLineColor prefs.lineColorOfSymbolGrid
      $gridCrossColor prefs.crossColorOfSymbolGrid
      $zoom root.zoom
      $backColor prefs.symbolBackgroundColor
      $xPlacardUnit root.xPlacardUnit
      $yPlacardUnit root.yPlacardUnit
    }
  }
  
//----------------------------------------------------------------------------------------------------------------------
//   Selected objects inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mSelectedObjectsInspectorView vStack {
    ObjectInspectorView {
      addObjectInspector (forEntity: entity SymbolText, inspectorView: stackView mSymbolTextInspectorView)
      addObjectInspector (forEntity: entity SymbolPin, inspectorView: stackView mSymbolPinInspectorView)
      $graphicController #mSymbolObjectsController
    }
    space
  }

//--- Symbol Text inspector
  selectionController SymbolText #mSymbolTextSelectionController : #mSymbolObjectsController.selectedArray ;

  stackView mSymbolTextInspectorView vStack {
    hStack { space StaticLabel (title: "Text Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Pin Name", bold: no, small: yes),
        right: TextField (small: yes) { makeWidthExpandable () $value #mSymbolTextSelectionController.text (sendContinously : yes) }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Alignment", bold: no, small: yes),
        right: CanariHorizontalAlignmentSegmentedControl (small: yes) { makeWidthExpandable () $alignment #mSymbolTextSelectionController.horizontalAlignment}
      )
    }
  }


//--- Symbol Pin inspector
  selectionController SymbolPin #mSymbolPinSelectionController : #mSymbolObjectsController.selectedArray ;

  stackView mSymbolPinInspectorView vStack {
    hStack { space StaticLabel (title: "Pin Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Value", bold: no, small: yes),
        right: TextField (small: yes) { makeWidthExpandable () $value #mSymbolPinSelectionController.name (sendContinously : yes) }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Name Alignment", bold: no, small: yes),
        right: CanariHorizontalAlignmentSegmentedControl (small: yes) { makeWidthExpandable () $alignment #mSymbolPinSelectionController.nameHorizontalAlignment}
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Number Alignment", bold: no, small: yes),
        right: CanariHorizontalAlignmentSegmentedControl (small: yes) { makeWidthExpandable () $alignment #mSymbolPinSelectionController.numberHorizontalAlignment}
      )
      add (single: hStack {
        Switch (title : "Pin is visible in schematics", small: yes) { $value #mSymbolPinSelectionController.pinNameIsDisplayedInSchematics}
        space
      })
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   Zoom and flip inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mGridZoomInspectorView vStack {
    TwoColumnsGridView {
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Style", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum GridStyle.popupTitles) { $selectedIndex root.gridStyle}
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Display", bold: no, small: yes),
        right:  TaggedPopUpButton {
          add (title: "1 Step", withTag: 1)
          add (title: "2 Steps", withTag: 2)
          add (title: "4 Steps", withTag: 4)
          add (title: "5 Steps", withTag: 5)
          add (title: "8 Steps", withTag: 8)
          add (title: "10 Steps", withTag: 10)
          $selectedTag root.gridDisplay
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Step", bold: no, small: yes),
        right: StaticLabel (title: "25 mils", bold: yes, small: yes) { setLeftAlignment () }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Flip", bold: no, small: yes),
        right: Switch (title: "Horizontal", small: yes) { $value root.horizontalFlip }
      )
      addFirstBaseLineAligned (
        left: FlexibleSpace,
        right: Switch (title: "Vertical", small: yes) { $value root.verticalFlip }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Placard", right: "X", bold: no, small: yes),
        right: CanariUnitPopUpButton (small: yes) { $unit root.xPlacardUnit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariUnitPopUpButton(small: yes) { $unit root.yPlacardUnit }
      )
    }
    space
  }

//----------------------------------------------------------------------------------------------------------------------
//   Display inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mDisplayInspectorView vStack {
    TwoColumnsGridView {
//      add (single: hStack { StaticLabel (title: "Stored in Preferences", bold: no, small: yes) space } )
      addCenterYAligned (
        left: StaticLabel (title: "Symbol", bold: no, small: yes),
        right: hStack { ColorWell { $color prefs.symbolColor (sendContinously:no) } space }
      )
      addCenterYAligned (
        left: StaticLabel (title: "Background", bold: no, small: yes),
        right: hStack { ColorWell { $color prefs.symbolBackgroundColor (sendContinously:no) } space }
      )
      addCenterYAligned (
        left: StaticLabel (title: "Cross Grid", bold: no, small: yes),
        right: hStack { ColorWell { $color prefs.crossColorOfSymbolGrid (sendContinously:no) } space }
      )
      addCenterYAligned (
        left: StaticLabel (title: "Line Grid", bold: no, small: yes),
        right: hStack { ColorWell { $color prefs.lineColorOfSymbolGrid (sendContinously:no) } space }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Line Width", bold: no, small: yes),
        right: TaggedPopUpButton {
          add (title: "0.5 Point", withTag: 5)
          add (title: "1.0 Point", withTag: 10)
          add (title: "1.5 Point", withTag: 15)
          add (title: "2.0 Points", withTag: 20)
          add (title: "2.5 Points", withTag: 25)
          $selectedTag prefs.symbolDrawingWidthMultipliedByTen
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Pin Font", bold: no, small: yes),
        right: FontButton (small: yes) {$fontValue prefs.pinNameFont}
      )
    }
    space
  }

//----------------------------------------------------------------------------------------------------------------------
//   Issue inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mIssuesInspectorView vStack {
   hStack { space TextObserverField (bold: no, small: yes) { $observedValue self.statusMessage } space }
   CanariIssueTableView [outlet mSymbolIssueTableView] { $issues root.issues }
  }

  linker issueTableViewToGraphicView (mSymbolIssueTableView, mSymbolGraphicView)

//----------------------------------------------------------------------------------------------------------------------
//   PAGE   INFOS
//----------------------------------------------------------------------------------------------------------------------

 stackView mInfosPage vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (topMargin: 8) {
    hStack {
      Button (title: "Reset Version and Signature", small: yes) { $run resetVersionAction }
      space
    }
    hStack {
      vStack { StaticLabel (title: "Comments", bold: yes, small: no) space }
      TextView (editable: yes) { $value root.comments }
    }
  }

  action resetVersionAction ;

}

//----------------------------------------------------------------------------*
