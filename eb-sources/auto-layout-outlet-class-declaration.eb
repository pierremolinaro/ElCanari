//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Canari Auto Layout classes
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//extern autolayout class AutoLayoutVerticalStackView {
//  func set (margins: Int)
//  func set (leftMargin: Int)
//  func set (rightMargin: Int)
//  func set (topMargin: Int)
//  func set (bottomMargin: Int)
//  func set (width: Int)
//  func separator ()
//  func separator (withTitle : String)
//  func add (item : view)
//  func flexibleSpace ()
//}
//
//extern autolayout class AutoLayoutHorizontalStackView {
//  func set (margins: Int)
//  func set (leftMargin: Int)
//  func set (rightMargin: Int)
//  func set (topMargin: Int)
//  func set (bottomMargin: Int)
//  func set (height: Int)
//  func separator ()
//  func separator (withTitle : String)
//  func add (item : view)
//  func flexibleSpace ()
//}

vStack func set (spacing: Int) ;
vStack func set (margins: Int) ;
vStack func set (leftMargin: Int) ;
vStack func set (rightMargin: Int) ;
vStack func set (topMargin: Int) ;
vStack func set (bottomMargin: Int) ;
vStack func set (width: Int) ;

hStack func set (spacing: Int) ;
hStack func equalSpacing () ;
hStack func set (margins: Int) ;
hStack func set (leftMargin: Int) ;
hStack func set (rightMargin: Int) ;
hStack func set (topMargin: Int) ;
hStack func set (bottomMargin: Int) ;
hStack func set (height: Int) ;

func enum GridStyle.popupTitles {
  cross : "Cross Grid" ;
  noGrid : "No Grid" ;
  line : "Line Grid" ;
}

extern autolayout class TwoColumnsGridView {
  func set (spacing: Int)
  func set (margins: Int)
  func set (leftMargin: Int)
  func set (rightMargin: Int)
  func set (topMargin: Int)
  func set (bottomMargin: Int)
  func set (width: Int)
  func separator ()
  func separator (withTitle : String)
  func add (left : view, right: view)
  func add (single : view)
  func flexibleSpace ()
}

extern autolayout class StaticLabel (title : String, bold: Bool, small: Bool) $enabled {
}

extern autolayout class StaticLabels (left : String, right : String, bold: Bool, small: Bool) {
}

extern autolayout class Separator {
}

extern autolayout class Label (small: Bool) {
  $title transient String
}

extern autolayout class SegmentedControlWithPages (documentView: view, equalWidth: Bool) {
  func makeWidthExpandable ()
  func addPage (title: String, pageView : view)
  $selectedPage property Int
  $segmentImage transient NSImage (segmentIndex : Int)
  $segmentTitle transient String (segmentIndex : Int)
}

extern autolayout class SignatureField {
  $signature transient Int
}

extern autolayout class VersionField {
  $version transient Int
  $versionShouldChange transient Bool
}

extern autolayout class ImageObserverView (small: Bool) {
  $image transient NSImage
  $tooltip transient String
}

extern autolayout class FlexibleSpace {
}

extern autolayout class EnumPopUpButton (titles: StringArray) {
  $selectedIndex property enum
}

extern autolayout class TaggedPopUpButton {
  $selectedTag property Int
  func add (title: String, withTag: Int)
}

extern autolayout class CanariUnitPopUpButton {
  $unit property Int
}

extern autolayout class CanariDimensionField {
  $dimensionAndUnit property Int, property Int
}

extern autolayout class CanariDimensionAndPopUp {
  $dimensionAndUnit property Int, property Int
}

extern autolayout class CanariObservedDimensionAndPopUp {
  $dimensionAndUnit transient Int, property Int
}

extern autolayout class Switch (title: String) {
  $value property Bool
}

extern autolayout class Slider (min: Int, max: Int, ticks: Int) $enabled {
  $intValue property Int (sendContinously : Bool)
  $doubleValue property Double (sendContinously : Bool)
}

extern autolayout class Button (title: String, small: Bool) $enabled $run {
  func makeWidthExpandable ()
}

extern autolayout class PullDownButton (title: String, small: Bool) {
  func add (item: menuItem)
}

extern autolayout class GraphicView (minZoom : Int, maxZoom : Int) $graphicController {
  $underObjectsDisplay transient EBShape
  $overObjectsDisplay transient EBShape
  $arrowKeyMagnitude transient Int
  $shiftArrowKeyMagnitude transient Int
  $backColor transient NSColor
  $mouseGrid transient Int
  $gridStep transient Int
  $gridStyle transient GridStyle
  $gridDisplayFactor transient Int
  $gridLineColor transient NSColor
  $gridCrossColor transient NSColor
  $zoom property Int
  $horizontalFlip transient Bool
  $verticalFlip transient Bool
  $xPlacardUnit transient Int
  $yPlacardUnit transient Int
  $backgroundImageData transient Data
  $backgroundImageOpacity transient Double
  $foregroundImageData transient Data
  $foregroundImageOpacity transient Double
}

extern autolayout class DragSourceButton (tooltip: String) $enabled {
  $image transient NSImage
}

extern autolayout class IntField (width: Int) $enabled {
  $value property Int (sendContinously: Bool)
}

extern autolayout class  ColorWell {
  $color property NSColor (sendContinously: Bool)
}

extern autolayout class FontButton {
  $fontValue property NSFont
}

extern autolayout class CanariPackageIssueTableView {
  $issues transient CanariIssueArray
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
