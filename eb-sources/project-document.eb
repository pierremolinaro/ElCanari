#----------------------------------------------------------------------------*
#     P R O J E C T    D O C U M E N T                                       *
#----------------------------------------------------------------------------*

document ProjectDocument root RootEntity {
#--- Selected Page
  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.mSelectedPageIndex ;
  outlet NSView mMasterView ;
  outlet CanariViewWithKeyView mComponentsPageView ;
  outlet CanariViewWithKeyView mLibraryPageView ;
  outlet CanariViewWithKeyView mSchematicsPageView ;
  outlet CanariViewWithKeyView mNetClassesPageView ;
  outlet CanariViewWithKeyView mNetListPageView ;
  outlet CanariViewWithKeyView mBoardPageView ;
  outlet CanariViewWithKeyView mProductPageView ;


#--- Schematics Internal Error Panel
#  outlet schematicsInternalErrorPanel : NSPanel ;
#  outlet schematicsInternalErrorTextView : NSTextView ;

#--- Selected Tab
#  outlet selectedTabSegmentedControl : PMSegmentedControl $selectedIndex root.selectedTab ;

#--- Progress indicator
#  outlet progressText : NSTextField ;
#  outlet progressIndicator : NSProgressIndicator ;
  
#---------------------- Components Tab
#  controller componentController : NSArrayController ComponentInProjectEntity
#    $contentSet root.components { NSDeletesObjectsOnRemove:yes} ;

#  outlet componentsTableView : NSTableView $tableValue .componentController {
#    NSTableColumn "name" NSTextFieldCell $value *.componentName ;
#    NSTableColumn "device" NSTextFieldCell $value *.deviceName ;
#    NSTableColumn "package" NSTextFieldCell $value *.selectedPackageName ;
#    NSTableColumn "inboard" NSTextFieldCell $value *.isInBoardString ;
#    NSTableColumn "symbolsplaced" NSTextFieldCell $value *.symbolsInSchematicsString ;
#    NSTableColumn "value" NSTextFieldCell $value *.componentValue ;
#  } ;
#
#  outlet componentCountTextField : NSTextField $value root.componentCountString ;
#
#  action updateAddComponentButtonMenu observe root.devicesInLibrary ;
#
#  action addComponentAction ;
#  outlet addComponentButton : NSButton $run .addComponentAction ;
#
#  action addComponentFromEmbeddedLibraryAction ;
#  outlet addComponentFromEmbeddedLibraryButton : NSPopUpButton ;
#
#  action duplicateComponentAction ;
#  outlet duplicationComponentButton : NSButton $run .duplicateComponentAction $enabled .componentController.canRemove ;
#
#  action removeComponentAction ;
#  outlet removeComponentButton : NSButton $run .removeComponentAction $enabled .componentController.canRemove ;
#
#  action renameComponentFromDeviceTabAction ;
#  outlet renameComponentFromDeviceTabButton : NSButton
#    $run .renameComponentFromDeviceTabAction
#    $enabled .componentController.canRemove
#  ;
#
#  action changeComponentValueAction ;
#  outlet changeComponentValueButton : NSButton $run .changeComponentValueAction $enabled .componentController.canRemove ;
#  outlet changeComponentValuePanel : NSPanel ;
#  outlet changeComponentValueComponentNameTextField : NSTextField 
#    $value . componentController.selection.componentName
#  ;
#  outlet changeComponentValueTextField : NSTextField ; # Bound in Source Text
#
#  action revealComponentInBoardAction ;
#  outlet revealComponentInBoardButton : NSButton
#    $run .revealComponentInBoardAction
#    $enabled ! .componentController.selection.isNotPlacedOnBoard
#  ;
#
##--- Add Component Panel
#  outlet addComponentPanel : NSPanel ;
#  controller deviceForAddedComponentController : NSObjectController DeviceInProjectEntity ;
#  outlet addedComponentDeviceNameTextField : NSTextField $value .deviceForAddedComponentController.selection.deviceName ;
#  outlet addedComponentValueTextField : NSTextField $value .deviceForAddedComponentController.selection.defaultValueForComponent {NSContinuouslyUpdatesValue:yes} ;
#  outlet addedComponentValueVisibilityInBoardCheckBox : NSButton $value .deviceForAddedComponentController.selection.defaultVisibilityForValueInBoard ;
#  outlet addedComponentNameVisibilityInBoardCheckBox : NSButton $value .deviceForAddedComponentController.selection.defaultVisibilityForNameInBoard ;
#  outlet addedComponentValueVisibilityInSchematicsCheckBox : NSButton $value .deviceForAddedComponentController.selection.defaultVisibilityForValueInSchematics ;
#
#  #--- Package rotation
#  outlet addedComponentPackageRotationTextField : NSTextField $value .deviceForAddedComponentController.selection.defaultRotationForPackageInBoard {NSContinuouslyUpdatesValue:yes} ;
#  controller defaultPackageInBoardRotationController : AngleForSliderController $angle .deviceForAddedComponentController.selection.defaultRotationForPackageInBoard ;
#  outlet defaultPackageRotationSlider : PMSlider $value .defaultPackageInBoardRotationController.angleForSlider ;
#  #--- Package Selection PopUp
#  controller availableDefaultPackagesController : NSArrayController PackageTypeInProjectEntity $contentSet .deviceForAddedComponentController.selection.availablePackages ;
#  outlet availableDefaultPackagesPopup : NSPopUpButton PackageTypeInProjectEntity
#    $contentValuesAndContent .availableDefaultPackagesController.arrangedObjects.packageTypeName
#    $selectedObject .deviceForAddedComponentController.selection.defaultPackage ;
#
##--- Change Package
#  action changeComponentPackageAction ;
#  outlet changeComponentPackageButton : NSButton $run .changeComponentPackageAction $enabled .componentController.canRemove ;
#  outlet changeComponentPackagePanel : NSPanel ;
#  outlet actualComponentNameForChangePackagePanel : NSTextField ;
#  controller currentComponentDeviceController : NSObjectController DeviceInProjectEntity $contentObject .componentController.selection.device ;
#  controller availablePackagesForCurrentComponentController : NSArrayController PackageTypeInProjectEntity
#    $contentSet .currentComponentDeviceController.selection.availablePackages ;
#  outlet availablePackagesPopUpMenu : NSPopUpButton PackageTypeInProjectEntity
#    $contentValuesAndContent .availablePackagesForCurrentComponentController.arrangedObjects.packageTypeName
#  ;
#
##---------------------- Library Tab
#  outlet checkForDeviceAndFontUpdateAtOpeningCheckBox : NSButton $value root.checkForDeviceAndFontUpdateAtOpening ;
#
#  action resetDeviceAndFontsVersionNumbersAction ;
#  outlet resetDeviceAndFontsVersionNumbersButton : NSButton $run .resetDeviceAndFontsVersionNumbersAction ;
#
#  action updateDeviceAndFontsVersionNumbersAction ;
#  outlet updateDeviceAndFontsVersionNumbersButton : NSButton $run .updateDeviceAndFontsVersionNumbersAction ;
#
#  outlet updateDevicesAndFontsTableView : NSTableView ;
#  outlet updateDevicesAndFontsPanel : NSPanel ;
#  outlet errorMessageInUpdateDevicesAndFontsPanelTextField : NSTextField ;
#  action showUpdateSearchErrorsAction ;
#  outlet showUpdateSearchErrorsButton : NSButton $run .showUpdateSearchErrorsAction ;
#  
#  outlet updateErrorsForDevicesAndFontsTableView : NSTableView ;
#  outlet updateErrorsForDevicesAndFontsPanel : NSPanel ;
#  
#  #--- Devices
#  action addDeviceAction ;
#  outlet addDeviceButton : NSButton $run .addDeviceAction ;
#
#  outlet devicesFontsTabView : NSTabView $selectedIndex root.selectedTabInLibrary ;
#
#  controller deviceLibraryController : NSArrayController DeviceInProjectEntity
#    $contentSet root.devicesInLibrary { NSDeletesObjectsOnRemove:yes } ;
#
#  outlet devicesInLibraryTableView : NSTableView $tableValue .deviceLibraryController {
#    NSTableColumn "name" NSTextFieldCell $value *.deviceName ;
#    NSTableColumn "version" NSTextFieldCell $value *.deviceVersionNumber ;
#    NSTableColumn "componentcount" NSTextFieldCell $value *.componentCount ;
#  } ;
#
#  action deleteDeviceAction ;
#  outlet removeDeviceButton : NSButton $run .deleteDeviceAction $enabled .deviceLibraryController.selection.deviceIsNotUsed ;
#  action editDeviceAction ;
#  outlet editDeviceButton : NSButton $run .editDeviceAction $enabled .deviceLibraryController.canRemove ;
#  action updateDeviceAction ;
#  outlet updateDeviceButton : NSButton $run .updateDeviceAction $enabled .deviceLibraryController.canRemove ;
#  action resetDeviceVersionAction ;
#  outlet resetDeviceVersionButton : NSButton $run .resetDeviceVersionAction $enabled .deviceLibraryController.canRemove ;
#
#  action exportDeviceAction ;
#  outlet exportDeviceButton : NSButton
#    $run .exportDeviceAction
#    $enabled .deviceLibraryController.selection.fileDataNotEmpty
#  ;
#
#  controller symbolsInSelectedDeviceController : NSArrayController SymbolInstanceInProjectEntity
#    $contentSet .deviceLibraryController.selection.availableSymbols ;
#
#  outlet symbolsInDeviceTableView : NSTableView $tableValue .symbolsInSelectedDeviceController {
#    NSTableColumn "name" NSTextFieldCell $value *.symbolInstanceName ;
#    NSTableColumn "type" NSTextFieldCell $value *.symbolTypeName ;
#  } ;
#
#  controller packagesInDeviceController : NSArrayController PackageTypeInProjectEntity
#    $contentSet .deviceLibraryController.selection.availablePackages ;
#
#  outlet packagesInDeviceTableView : NSTableView $tableValue .packagesInDeviceController {
#    NSTableColumn "name" NSTextFieldCell $value *.packageTypeName ;
#  } ;
#
#  controller assignmentsInSelectedDeviceController : NSArrayController PadRepresentantInProjectEntity
#    $contentSet .deviceLibraryController.selection.pads ;
#
#  outlet assignmentsInDeviceTableView : NSTableView $tableValue .assignmentsInSelectedDeviceController {
#    NSTableColumn "pad" NSTextFieldCell $value *.padQualifiedName ;
#    NSTableColumn "symbol" NSTextFieldCell $value *.symbolName ;
#    NSTableColumn "pin" NSTextFieldCell $value *.pinName ;
#  } ;
#
#  #--- Fonts
#  controller embeddedFontController : NSArrayController FontInProjectEntity
#    $contentSet root.embeddedFonts { NSDeletesObjectsOnRemove:yes } ;
#
#  outlet embeddedFontTableView : NSTableView $tableValue .embeddedFontController {
#    NSTableColumn "name" NSTextFieldCell $value *.fontName ;
#    NSTableColumn "version" NSTextFieldCell $value *.versionNumber ;
#    NSTableColumn "counttexts" NSTextFieldCell $value *.textInBoardCount ;
#    NSTableColumn "countnames" NSTextFieldCell $value *.componentNamesCount ;
#    NSTableColumn "countvalues" NSTextFieldCell $value *.componentValuesCount ;
#  } ;
#
#  action addFontButtonAction ;
#  outlet addFontButton : NSButton $run .addFontButtonAction ;
#  outlet removeFontButton : NSButton $run .embeddedFontController.remove $enabled .embeddedFontController.selection.fontIsNotUsed ;
#
#  outlet editFontInLibrary : NSButton
#    $target .embeddedFontController.selection.editFontAction
#    $enabled .embeddedFontController.canRemove
#  ;
#
#  outlet resetFontVersionInLibrary : NSButton
#    $target .embeddedFontController.selection.resetFontVersionAction
#    $enabled .embeddedFontController.canRemove
#  ;
#
#  action updateFontAction ;
#  outlet updateFontInLibrary : NSButton
#    $run .updateFontAction
#    $enabled .embeddedFontController.canRemove
#  ;
#
##---------------------- Schematics Tab
#
##--- Schematics Inspector
#  outlet schematicsInspectorSegmentedControl : NSSegmentedControl ;
#  outlet schematicsInspectorViewOutlet : NSView ;
#
##--- Create objects buttons
#  outlet addSchematicsWireButton : PMDraggingSourceButton ;
#
##--- Net Default Prefix
#  action changeNetDefaultPrefixAction ;
#  outlet netDefaultPrefixButton : NSButton
#    $title root.netDefaultPrefix
#    $run .changeNetDefaultPrefixAction
#  ;
#  outlet changeNetDefaultPrefixPanel : NSPanel ;
#  outlet netDefaultPrefixTextField : NSTextField ;
#  outlet netDefaultPrefixOkButton : NSButton ;
# 
##--- Sheet Management
#  controller selectedSheetController : NSObjectController SheetEntity $contentObject root.selectedSheet ;
#  controller selectedSheetGraphicsController : PMGraphicArrayController
#    $contentSet .selectedSheetController.selection.graphics forView .schematicsView ;
#
#  controller sheetController : NSArrayController SheetEntity
#    $contentSet root.sheets
#  ; # Sort Descriptor added programmacaly
#
#
##--- Sheet Inspector
#  outlet sheetInspectorView : NSView ;
#
#  action moveDownSelectedSheetAction ;
#  outlet moveDownSelectedSheetButton : NSButton
#    $enabled root.sheetCanBeMovedDown
#    $run .moveDownSelectedSheetAction
#   ;
#
#  action moveUpSelectedSheetAction ;
#  outlet moveUpSelectedSheetButton : NSButton
#    $enabled root.sheetCanBeMovedUp
#    $run .moveUpSelectedSheetAction
#   ;
#
#  outlet sheetManagementPopUp : NSPopUpButton SheetEntity
#    $contentValuesAndContent .sheetController.arrangedObjects.sheetTitleWithIndex
#    $selectedObject root.selectedSheet
#  ;
#
#  outlet sheetTitleTextField : NSTextField $value .selectedSheetController.selection.sheetTitle ;
# 
#  outlet schematicsTitleTextField : NSTextField $value root.schematicsTitle ;
#  outlet schematicsVersionTextField : NSTextField $value root.schematicsVersion ;
#  outlet schematicsDatePicker : NSDatePicker $value root.schematicsDate ;
#
#  action setToCurrentDateAction ;
#  outlet schematicsSetToCurrentDateButton : NSButton $run .setToCurrentDateAction ;
#
#  outlet schematicsWarningsTextField : PMSchematicsWarningStatusTextField 
#    $sheetArray root.sheetArray
#    $warningsInCurrentSheet .selectedSheetController.selection.sheetWarningCount
#    $onePinNetCount root.onePinNetCount
# ;
#
#  outlet schematicsErrorsTextField : PMSchematicsErrorStatusTextField 
#    $sheetArray root.sheetArray
#    $errorsInCurrentSheet .selectedSheetController.selection.sheetErrorCount
# ;
#
#  action newSheetAction ;
#  outlet newSheetButton : NSButton $run .newSheetAction ;
#
#  action deleteSheetAction ;
#  outlet deleteSheetButton : NSButton
#    $run .deleteSheetAction
#    $enabled root.moreThanOneSheet
#  ;
#
#  outlet paperSizeMatrix : NSMatrix $selectedIndex root.schematicsPaperSizeChoice ;
#
#  controller schematicsWidthChoiceController : PMSchematicsPaperWidthController 
#    $customWidth root.schematicsCustomWidth
#    $choice root.schematicsPaperSizeChoice
#  ;
#  controller schematicsWidthController : EBMeasurementController
#    $valueInEBUnit .schematicsWidthChoiceController.actualWidth
#    $measurementUnitFactor root.schematicsWidthUnit
#  ;
#  outlet schematicsPaperWidthTextField : NSTextField $value .schematicsWidthController.valueInUnitFactor $enabled root.paperCustomSizeTextFieldEnabled ;
#  outlet schematicsPaperWidthPopUpButton : NSPopUpButton $selectedTag root.schematicsWidthUnit ;
#
#  controller schematicsHeightChoiceController : PMSchematicsPaperHeightController 
#    $customHeight root.schematicsCustomHeight
#    $choice root.schematicsPaperSizeChoice
#  ;
#
#  controller schematicsHeightController : EBMeasurementController
#    $valueInEBUnit .schematicsHeightChoiceController.actualHeight
#    $measurementUnitFactor root.schematicsHeightUnit
#  ;
#  outlet schematicsPaperHeightTextField : NSTextField $value .schematicsHeightController.valueInUnitFactor $enabled root.paperCustomSizeTextFieldEnabled ;
#  outlet schematicsPaperHeightPopUpButton : NSPopUpButton $selectedTag root.schematicsHeightUnit ;
#  
#  action setSchematicsSizeAction observe .schematicsWidthChoiceController.actualWidth, .schematicsHeightChoiceController.actualHeight ;
#
##--- Grid Inspector
#  outlet schematicsGridInspectorView : NSView ;
#  controller schematicsMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.schematicsMeasurementUnitsFactor
#   $valueInEBUnit root.schematicsGrid
#  ;
#  outlet schematicsGridStylePopUpButton : NSPopUpButton $selectedIndex root.schematicsGridStyle;
#  outlet schematicsGridStepPopUpButton : NSPopUpButton $selectedTag root.schematicsGridFactor;
#  outlet schematicsGridTextField : NSTextField $value .schematicsMeasurementController.valueInUnitFactor ;
#  outlet schematicsMeasurementUnitsFactorPopUpButton : NSPopUpButton $selectedTag root.schematicsMeasurementUnitsFactor ;
#
#  outlet schematicsHorizontalFlipButton : NSButton $value root.schematicsHorizontalFlip;
#  outlet schematicsVerticalFlipButton : NSButton $value root.schematicsVerticalFlip;
#
#
##--- Symbols to insert inspector
#  outlet symbolToInsertInspectorView : NSView ;
#  outlet symbolToPlaceCountTextField : NSTextField $value root.numberOfSymbolsToInsertTitle ;
#  action symbolToPlaceCountDidChangeAction observe root.numberOfSymbolsToInsertTitle ;
#  controller symbolsToPlaceController : NSArrayController SymbolInProjectEntity filter isNotPlacedOnSchematics $contentSet root.symbolsInProject ;
#  outlet symbolsToInsertTableView : PMDraggingSourceTableViewForSymbolInSchematics $tableValue .symbolsToPlaceController {
#    NSTableColumn "name" NSTextFieldCell $value *.nameForUnplacedSymbolTableView $editable root.alwaysFalse ;
#  } ;
#
##--- Symbol Inspector
#  outlet symbolInSchematicsInspectorView : NSView ;
#  outlet valueIsVisibleCheckBox : NSButton $value .selectedSheetGraphicsController.selectedSymbolInProjectEntity.componentValueIsVisible ;
#  controller currentComponentController : NSObjectController ComponentInProjectEntity $contentObject .selectedSheetGraphicsController.selectedSymbolInProjectEntity.component ;
#  outlet componentNameInSchematicsTextField : NSTextField $value .currentComponentController.selection.componentName ;
#  outlet symbolInstanceNameInSchematicsTextField : NSTextField $value .selectedSheetGraphicsController.selectedSymbolInProjectEntity.symbolInstanceName ;
#  outlet symbolTypeNameInSchematicsTextField : NSTextField $value .selectedSheetGraphicsController.selectedSymbolInProjectEntity.symbolTypeName ;
#  outlet deviceNameInSchematicsTextField : NSTextField $value .currentComponentController.selection.deviceName ;
#  outlet componentValueInSchematicsTextField : NSTextField $value .currentComponentController.selection.componentValue ;
#
#  action renameComponentFromSymbolInspectorAction ;
#  outlet renameComponentFromSymbolInspectorButton : NSButton $run .renameComponentFromSymbolInspectorAction ;
#
##--- Wire inspector
#  outlet wireInspectorView : NSView ;
#  outlet wireNetNameTextField : NSTextField $value .selectedSheetGraphicsController.selectedSimpleWireEntity.netName ;
#
#  controller netClassesController : NSArrayController NetClassEntity $contentSet root.netClasses {NSDeletesObjectsOnRemove:yes} ;
#  controller wireNetClassController : NSObjectController NetEntity $contentObject .selectedSheetGraphicsController.selectedSimpleWireEntity.net ;
#  outlet wireNetClassPopUpButton : NSPopUpButton NetClassEntity
#    $contentValuesAndContent .netClassesController.arrangedObjects.netClassName
#    $selectedObject .wireNetClassController.selection.netClass ;
#
#  outlet wireRenameNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSimpleWireEntity.renameNetFromUserAction
#    $enabled .wireNetClassController.canRemove
#  ;
#
#  outlet wireInsultateNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSimpleWireEntity.insulateNetFromUserAction
#    $enabled .wireNetClassController.canRemove
#  ;
#
#  outlet wireMergeNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSimpleWireEntity.mergeNetFromUserAction
#    $enabled .wireNetClassController.canRemove
#  ;
#
##--- Label inspector
#  outlet labelInspectorView : NSView ;
#  outlet labelNetNameTextField : NSTextField $value .selectedSheetGraphicsController.selectedSchematicLabelEntity.netName ;
#
#  controller labelNetClassController : NSObjectController NetEntity $contentObject .selectedSheetGraphicsController.selectedSchematicLabelEntity.net ;
#  outlet labelNetClassPopUpButton : NSPopUpButton NetClassEntity
#    $contentValuesAndContent .netClassesController.arrangedObjects.netClassName
#    $selectedObject .labelNetClassController.selection.netClass ;
#
#  outlet labelRenameNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSchematicLabelEntity.renameNetFromUserAction
#    $enabled .labelNetClassController.canRemove
#  ;
#
#  outlet labelInsultateNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSchematicLabelEntity.insulateNetFromUserAction
#    $enabled .labelNetClassController.canRemove
#  ;
#
#  outlet labelMergeNetButton : NSButton
#    $target .selectedSheetGraphicsController.selectedSchematicLabelEntity.mergeNetFromUserAction
#    $enabled .labelNetClassController.canRemove
#  ;
#
##--- Printing Schematics
#  outlet printingSchematicsView : PMSchematicsView
#    $backgroundColor PMSymbolPreferences.root.symbolBackgroundColor
#    $gridStyle root.schematicsGridStyle
#    $gridFactor  root.schematicsGridFactor
#    $placementGrid root.schematicsGrid
#    $displayedGridStep root.schematicsGrid
#    $verticalFlip root.schematicsVerticalFlip
#    $horizontalFlip root.schematicsHorizontalFlip
#    $shouldAntialias PMGeneralPreferences.root.antiAliasing
#    $gridDotColor PMSchematicPreferences.root.dotColorOfSchematicGrid
#    $gridLineColor PMSchematicPreferences.root.lineColorOfSchematicGrid
#    $schematicsTitle root.schematicsTitle
#    $schematicsVersion root.schematicsVersion
#    $schematicsDate root.schematicsDate
#    $schematicsSheetTitle .selectedSheetController.selection.sheetTitle
#  ;
#
##--- Schematics View
#  outlet selectedObjectInSchematicsInspectorView : NSView ;
#  outlet schematicsView : PMSchematicsView
#    $backgroundColor PMSymbolPreferences.root.symbolBackgroundColor
#    $gridStyle root.schematicsGridStyle
#    $gridFactor  root.schematicsGridFactor
#    $placementGrid root.schematicsGrid
#    $displayedGridStep root.schematicsGrid
#    $zoom root.schematicsZoom
#    $verticalFlip root.schematicsVerticalFlip
#    $horizontalFlip root.schematicsHorizontalFlip
#    $measurementUnitsFactor root.schematicsMeasurementUnitsFactor
#    $shouldAntialias PMGeneralPreferences.root.antiAliasing
#    $gridDotColor PMSchematicPreferences.root.dotColorOfSchematicGrid
#    $gridLineColor PMSchematicPreferences.root.lineColorOfSchematicGrid
#    $schematicsTitle root.schematicsTitle
#    $schematicsVersion root.schematicsVersion
#    $schematicsSheetNumber root.schematicsSheetNumberingString
#    $schematicsDate root.schematicsDate
#    $schematicsSheetTitle .selectedSheetController.selection.sheetTitle
#    $schematicsStatusDictionary .selectedSheetController.selection.sheetStatusDictionary
#    inspectorView selectedObjectInSchematicsInspectorView ;
#    inspector SymbolInProjectEntity -> .symbolInSchematicsInspectorView ;
#    inspector SimpleWireEntity -> .wireInspectorView ;
#    inspector SchematicLabelEntity -> .labelInspectorView ;
#
#  ;
#  outlet schematicsScrollView : NSScrollView (PM_scroll_view_with_placards) ;
#
#  outlet mergingSeveralNetsPanel : NSPanel ;
#  outlet mergingSeveralNetsPopUpButton : NSPopUpButton ;
#
##--- 'Move Selected Elements to Sheet' Panel
#  outlet moveSelectedElementToSheetPanel : NSPanel ;
#
#  outlet sheetManagementForMovingSelectedElementsPopUp : NSPopUpButton SheetEntity
#    $contentValuesAndContent .sheetController.arrangedObjects.sheetTitleWithIndex
#    $selectedObject root.selectedSheet
#  ;
#
##--- Actions
#  action removeAllTracksAction ;
#
##---------------------- Net Classes Tab
#  outlet displayUnitMenu : NSMenu ;
#
#  outlet netClassesTableView : NSTableView $tableValue .netClassesController {
#    NSTableColumn "name" NSTextFieldCell $value *.netClassName {NSValidatesImmediately:yes} ;
#    NSTableColumn "netcolor" PMColorWellCell $value *.netClassColor ;
#    NSTableColumn "unit" NSPopUpButtonCell $menu .displayUnitMenu $selectedTag *.displayUnit ;
#    NSTableColumn "width" NSTextFieldCell $value *.netClassTrackWidthInDisplayUnit ;
#    NSTableColumn "hole" NSTextFieldCell $value *.netClassViaHoleDiameterInDisplayUnit ;
#    NSTableColumn "pad" NSTextFieldCell $value *.netClassViaPadDiameterInDisplayUnit ;
#    NSTableColumn "used" NSTextFieldCell $value *.wireCountString ;
#  } ;
#
#  action addNetClassAction ;
#  outlet addNetClassButton : NSButton $run .addNetClassAction ;
#  outlet removeNetClass : NSButton $run .netClassesController.remove
#    $enabled .netClassesController.canRemove & .netClassesController.selection.canBeRemoved & root.moreThanOneNetClass ;
#
##---------------------- Net Tab
#  outlet netCountTextField : NSTextField $value root.netCountString ;
#
#  controller netsController : NSArrayController NetEntity $contentSet root.nets {NSDeletesObjectsOnRemove:yes} ;
#
#  outlet netsTableView : NSTableView $tableValue .netsController {
#    NSTableColumn "netname" NSTextFieldCell $value *.netName ;
#    NSTableColumn "netclass" NSPopUpButtonCell NetClassEntity
#      $contentValuesAndContent .netClassesController.arrangedObjects.netClassName
#      $selectedObject *.netClass ;
#    NSTableColumn "connectedPins" NSTextFieldCell $value *.connectedPinsCountString ;
#  } ;
#
#  controller pinsOfSelectedNetController : NSArrayController PinInProjectPadInBoardEntity
#    $contentSet .netsController.selection.padsInBoard
#  ;
#
#  outlet pinsOfSelectedNetClassTableView : NSTableView $tableValue .pinsOfSelectedNetController {
#    NSTableColumn "pins" NSTextFieldCell $value *.fullPinNameForSchematics ;
#  } ;
#
#  action renameSelectedNetAction ;
#  outlet renameSelectedNetButton : NSButton $run .renameSelectedNetAction $enabled .netsController.canRemove ;
#
#  outlet renameNetPanel : NSPanel ;
#  outlet newNetNameTextField : NSTextField $value root.stringForRenamingNet {NSContinuouslyUpdatesValue:yes} ;
#  outlet renameNetErrorTextField : NSTextField $value root.errorMessageForRenamingNet ;
#  outlet doRenamingNetButton : NSButton $enabled root.stringForRenamingNetIsValid $title root.buttonTitleForRenamingNet ;
#
#  #--- Merge sub-net into an existing net
#   outlet mergeSubNetPanel : NSPanel ;
#   controller mergingPanelNetController : NSArrayController NetEntity $contentSet root.nets ;
#   outlet netsToMergePopUpButton : NSPopUpButton NetEntity
#     $contentValuesAndSelectedIndex .mergingPanelNetController.arrangedObjects.netName
#   ;
##---------------------- Board Tab
#  controller boardGraphicsController : PMBoardGraphicArrayController
#    $contentSet root.boardGraphics
#    $userIntegerParameterForDisplay root.boardUnsignedParameters
#  forView .boardView ;
#
##--- Board Inspector Selector
#  outlet boardInspectorSegmentedControl : NSSegmentedControl ;
#  outlet boardInspectorViewOutlet : NSView ;
#  action numberOfPackageToInsertDidChangeAction observe root.numberOfPackageToInsertTitle ;
#
##--- Create objects buttons
#  outlet addBoardTextButton : PMDraggingSourceButton ;
#  outlet addBoardRestrictRectangleButton : PMDraggingSourceButton ;
#  outlet addBoardPassingPointButton : PMDraggingSourceButton ;
#  outlet addBoardLineInLegendButton : PMDraggingSourceButton ;
#  outlet addBoardTrackSegmentButton : PMDraggingSourceButton ;
#
##--- Errors and warnings in board
#  outlet warningsInBoardTextField : NSTextField $value root.warningCountInBoardString $toolTip root.warningMessageInBoardString ;
#  outlet errorsInBoardTextField : NSTextField $value root.errorCountInBoardString $toolTip root.errorMessageInBoardString ;
#
##--- Package To Insert Inspector
#  outlet packagesToPlaceInspectorView : NSView ;
#  outlet packagesToPlaceCountTextField : NSTextField $value root.numberOfPackageToInsertTitle ;
#
#
#  controller packageToPlaceController : NSArrayController ComponentInProjectEntity filter isNotPlacedOnBoard $contentSet root.components ;
#  outlet packagesToInsertTableView : PMDraggingSourceTableViewForPackageInBoard $tableValue .packageToPlaceController {
#    NSTableColumn "name" NSTextFieldCell $value *.componentNameForInsertionTableView $editable root.alwaysFalse ;
#  } ;
#
##--- Display Inspector
#  outlet boardDisplayInspectorView : NSView ;
#
#  outlet showComponentSidePadInBoardCheckbox : NSButton $value root.showComponentSidePadInBoard ;
#  outlet componentSidePadColorWell : NSColorWell $value PMBoardPreferences.root.componentSidePadColor ;
#
#  outlet showSolderSidePadInBoardCheckbox : NSButton $value root.showSolderSidePadInBoard ;
#  outlet solderSidePadColorWell : NSColorWell $value PMBoardPreferences.root.solderSidePadColor ;
#
#  outlet showPadNumberInBoardCheckbox : NSButton $value root.showPadNumberInBoard ;
#  outlet padNumberColorColorWell : NSColorWell $value PMBoardPreferences.root.padNumberColor ;
#
#  outlet showComponentSideRestrictRectanglesCheckbox : NSButton $value root.showComponentSideRestrictRectangles ;
#  outlet componentSideRestrictRectangleColorWell : NSColorWell $value PMBoardPreferences.root.componentSideRestrictRectangleColor ;
#
#  outlet showSolderSideRestrictRectanglesCheckbox : NSButton $value root.showSolderSideRestrictRectangles ;
#  outlet solderSideRestrictRectangleColorWell : NSColorWell $value PMBoardPreferences.root.solderSideRestrictRectangleColor ;
#
#  outlet componentSideLegendColorWell : NSColorWell $value PMBoardPreferences.root.componentSideLegendColor ;
#  outlet showLegendComponentSideCheckbox : NSButton $value root.showComponentSideLegend ;
#
#  outlet componentSideLayoutColorWell : NSColorWell $value PMBoardPreferences.root.componentSideLayoutColor ;
#  outlet showLayoutComponentSideCheckbox : NSButton $value root.showComponentSideLayout ;
#
#  outlet solderSideLayoutColorWell : NSColorWell $value PMBoardPreferences.root.solderSideLayoutColor ;
#  outlet showLayoutSolderSideCheckbox : NSButton $value root.showSolderSideLayout ;
#
#  outlet solderSideLegendColorWell : NSColorWell $value PMBoardPreferences.root.solderSideLegendColor ;
#  outlet showLegendSolderSideCheckbox : NSButton $value root.showSolderSideLegend ;
#
#  outlet showBoardLimitsInBoardCheckbox : NSButton $value root.showBoardLimits ;
#  outlet boardLimitsColorWell : NSColorWell $value PMBoardPreferences.root.boardLimitsColor ;
#
#  outlet showBoardClearanceInBoardCheckbox : NSButton $value root.showBoardClearance ;
#  outlet boardClearanceColorWell : NSColorWell $value PMBoardPreferences.root.boardClearanceColor ;
#
#  outlet drawErrorBackgroundCheckbox : NSButton $value PMBoardPreferences.root.drawErrorBackground ;
#  outlet errorBackgroundColorWell : NSColorWell $value PMBoardPreferences.root.errorBackgroundColor ;
#
#  outlet drawWarningBackgroundCheckbox : NSButton $value PMBoardPreferences.root.drawWarningBackground ;
#  outlet warningBackgroundColorWell : NSColorWell $value PMBoardPreferences.root.warningBackgroundColor ;
#
#  outlet boardBackgroundColorWell : NSColorWell $value PMBoardPreferences.root.boardBackgroundColor ;
#
#  outlet warningAndErrorCircleDiameterSlider : PMSlider $value PMBoardPreferences.root.warningAndErrorCircleDiameterMultipliedByTen ;
#
#  outlet showHorizontalDensityCheckBox : NSButton $value root.showHorizontalDensity ;
#  outlet horizontalTransparencySlider : PMSlider $value root.horizontalDensityDisplayAlpha ;
#
#  outlet showVerticalDensityCheckBox : NSButton $value root.showVerticalDensity ;
#  outlet verticalTransparencySlider : PMSlider $value root.verticalDensityDisplayAlpha ;
#
#  outlet showRastnestMatrix : NSMatrix $selectedTag root.showRastnest ;
#
#  controller netsControllerForShowRastnest : NSArrayController NetEntity $contentSet root.nets ;
#  outlet netsForShowRastnestPopup : NSPopUpButton NetEntity
#    $contentValuesAndContent .netsControllerForShowRastnest.arrangedObjects.netName
#    $selectedObject root.selectedNetForShowingRastnest
#  ;
#
#  action selectionInBoardDidChange observe .boardGraphicsController.selectedObjects ;
#
##--- Grid Inspector
#  outlet boardGridInspectorView : NSView ;
#  controller boardMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.boardGridUnitsFactor
#   $valueInEBUnit root.boardGrid
#  ;
#  outlet boardGridStylePopUpButton : NSPopUpButton $selectedIndex root.boardGridStyle;
#  outlet boardGridStepPopUpButton : NSPopUpButton $selectedTag root.boardGridFactor;
#  outlet boardGridTextField : NSTextField $value .boardMeasurementController.valueInUnitFactor ;
#  outlet boardMeasurementUnitsFactorPopUpButton : NSPopUpButton $selectedTag root.boardGridUnitsFactor ;
#
#  outlet boardHorizontalFlipButton : NSButton $value root.boardHorizontalFlip;
#  outlet boardVerticalFlipButton : NSButton $value root.boardVerticalFlip;
#
##--- Board Inspector
#  outlet boardSizeView : NSView ;
#  #--- Width
#  controller boardWidthMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.boardWidthUnitsFactor
#   $valueInEBUnit root.boardWidth
#  ;
#  outlet boardWidthTextField : NSTextField $value .boardWidthMeasurementController.valueInUnitFactor ;
#  outlet boardWidthPopUpButton : NSPopUpButton $selectedTag root.boardWidthUnitsFactor;
#  #--- Height
#  controller boardHeightMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.boardHeightUnitsFactor
#   $valueInEBUnit root.boardHeight
#  ;
#  outlet boardHeightTextField : NSTextField $value .boardHeightMeasurementController.valueInUnitFactor ;
#  outlet boardHeightPopUpButton : NSPopUpButton $selectedTag root.boardHeightUnitsFactor;
#  #--- Line width
#  controller boardLineWidthMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.boardLineWidthUnitsFactor
#   $valueInEBUnit root.boardLineWidth
#  ;
#  outlet boardLineWidthTextField : NSTextField $value .boardLineWidthMeasurementController.valueInUnitFactor ;
#  outlet boardLineWidthPopUpButton : NSPopUpButton $selectedTag root.boardLineWidthUnitsFactor;
#
#  #--- Board clearance
#  controller boardClearanceMeasurementController : EBMeasurementController
#   $measurementUnitFactor root.boardClearanceUnitsFactor
#   $valueInEBUnit root.boardClearance
#  ;
#  outlet boardClearanceTextField : NSTextField $value .boardClearanceMeasurementController.valueInUnitFactor ;
#  outlet boardClearancePopUpButton : NSPopUpButton $selectedTag root.boardClearanceUnitsFactor;
#
#  #--- Board rotate
#  action boardRotateLeftAction ;
#  outlet boardRotateLeftButton : NSButton $run .boardRotateLeftAction ;
#  
#  action boardRotateRightAction ;
#  outlet boardRotateRightButton : NSButton $run .boardRotateRightAction ;
#  
##--- Unified Restrict Rectangle Inspector
#  outlet unifiedRestrictRectangleInspectorView : NSView ;
#  outlet rectrictRectangleComponentSideCheckbox : NSButton
#    $value .boardGraphicsController.selectedUnifiedRestrictRectangleEntity.restrictRectangleOnComponentSide
#    $enabled .boardGraphicsController.selectedUnifiedRestrictRectangleEntity.componentSideCheckboxEnabled
#  ;
#  outlet rectrictRectangleSolderSideCheckbox : NSButton
#    $enabled .boardGraphicsController.selectedUnifiedRestrictRectangleEntity.solderSideCheckboxEnabled
#    $value .boardGraphicsController.selectedUnifiedRestrictRectangleEntity.restrictRectangleOnSolderSide
#  ;
#
##--- Track in Board Inspector
#  outlet trackInBoardInspectorView : NSView ;
#
#  outlet trackIsPreservedByRouterCheckbox : NSButton $value .boardGraphicsController.selectedTrackInBoardEntity.preservedByRouter ;
#
#  outlet trackSidePopUpButton : NSPopUpButton $selectedIndex .boardGraphicsController.selectedTrackInBoardEntity.side ;
#
#  outlet trackNetNameTextField : NSTextField $value .boardGraphicsController.selectedTrackInBoardEntity.netName ;
#
#  outlet trackNetClassNameTextField : NSTextField $value .boardGraphicsController.selectedTrackInBoardEntity.netClassName ;
#
#  outlet trackUseCustomWidthCheckbox : NSButton $value .boardGraphicsController.selectedTrackInBoardEntity.useCustomTrackWidth ;
#
#  controller defaultTrackWidthController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.netClassTrackWidth
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.defaultTrackWidthMeasurementUnit
#  ;
#
#  outlet defaultTrackWidthValueTextfield : NSTextField $value .defaultTrackWidthController.valueInUnitFactor ;
#
#  outlet defaultTrackWidthUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.defaultTrackWidthMeasurementUnit ;
#
#  controller customTrackWidthController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.customTrackWidth
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.customTrackWidthMeasurementUnit
#  ;
#
#  outlet customTrackWidthValueTextfield : NSTextField
#    $enabled .boardGraphicsController.selectedTrackInBoardEntity.useCustomTrackWidth
#    $value .customTrackWidthController.valueInUnitFactor ;
#
#  outlet customTrackWidthUnitPopUpButton : NSPopUpButton
#    $enabled .boardGraphicsController.selectedTrackInBoardEntity.useCustomTrackWidth
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.customTrackWidthMeasurementUnit ;
#
#  controller trackDirectionController : PMTrackDirectionController
#    $p1x .boardGraphicsController.selectedTrackInBoardEntity.p1.x
#    $p1y .boardGraphicsController.selectedTrackInBoardEntity.p1.y
#    $p1CanMove .boardGraphicsController.selectedTrackInBoardEntity.p1CanMove
#    $p2x .boardGraphicsController.selectedTrackInBoardEntity.p2.x
#    $p2y .boardGraphicsController.selectedTrackInBoardEntity.p2.y
#    $p2CanMove .boardGraphicsController.selectedTrackInBoardEntity.p2CanMove
#    $rotateLock .boardGraphicsController.selectedTrackInBoardEntity.directionIsLockDuringKnobDragging
#  ;
#
#  outlet directionIsLockDuringKnobDraggingCheckbox : NSButton
#    $value .boardGraphicsController.selectedTrackInBoardEntity.directionIsLockDuringKnobDragging
#    $enabled .trackDirectionController.trackCanRotate
#  ;
#
#  outlet trackDirectionInDegreesTextField : NSTextField
#    $enabled .trackDirectionController.trackCanRotate
#    $value .trackDirectionController.directionInDegrees ;
#
#  controller trackDirectionSliderController : AngleForSliderController $angle .trackDirectionController.directionInDegrees ;
#
#  outlet trackDirectionInBoardSlider : PMSlider
#    $enabled .trackDirectionController.trackCanRotate
#    $value .trackDirectionSliderController.angleForSlider ;
#
##--- P1
#  controller trackP1XController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.p1.x
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.p1xMeasurementUnit
#  ;
#  outlet trackP1XTextfield : NSTextField
#    $value .trackP1XController.valueInUnitFactor ;
#  outlet trackP1XUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.p1xMeasurementUnit ;
#
#  controller trackP1YController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.p1.y
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.p1yMeasurementUnit
#  ;
#  outlet trackP1YTextfield : NSTextField
#    $value .trackP1YController.valueInUnitFactor ;
#  outlet trackP1YUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.p1yMeasurementUnit ;
#
##--- P2
#  controller trackP2XController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.p2.x
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.p2xMeasurementUnit
#  ;
#  outlet trackP2XTextfield : NSTextField
#    $value .trackP2XController.valueInUnitFactor ;
#  outlet trackP2XUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.p2xMeasurementUnit ;
#
#  controller trackP2YController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedTrackInBoardEntity.p2.y
#    $measurementUnitFactor .boardGraphicsController.selectedTrackInBoardEntity.p2yMeasurementUnit
#  ;
#  outlet trackP2YTextfield : NSTextField
#    $value .trackP2YController.valueInUnitFactor ;
#  outlet trackP2YUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedTrackInBoardEntity.p2yMeasurementUnit ;
#
#  outlet trackLockView : PMTrackLockView
#    $directionInDegrees .trackDirectionController.directionInDegrees
#    $noPadConnectedToP1 .boardGraphicsController.selectedTrackInBoardEntity.noPadConnectedToP1
#    $noPadConnectedToP2 .boardGraphicsController.selectedTrackInBoardEntity.noPadConnectedToP2
#    $manualLockForP1 .boardGraphicsController.selectedTrackInBoardEntity.p1OrConnectedTrackPointsAreLock
#    $manualLockForP2 .boardGraphicsController.selectedTrackInBoardEntity.p2OrConnectedTrackPointsAreLock
#    $trackObjects .boardGraphicsController.selectedObjects
#  ;
#
##--- ERC Checking Inspector
#  outlet ercCheckingInspectorView : NSView ;
#  action hideERCErrorInBoardAction ;
#  outlet hideERCErrorInBoard : NSButton $run .hideERCErrorInBoardAction ;
#  outlet mERCCheckingErrorTableView : NSTableView ;
#  outlet mGenerationLogTextView : NSTextView ;
#
##--- Router Inspector
#  outlet routerInspectorView : NSView ;
#
#  controller routerClearanceController : EBMeasurementController
#    $valueInEBUnit root.routerClearance
#    $measurementUnitFactor root.routerClearanceMeasurementUnitsFactor
#  ;
#
#  outlet routerClearanceTextfield : NSTextField
#    $value .routerClearanceController.valueInUnitFactor ;
#
#  outlet routerClearancePopUpButton : NSPopUpButton
#    $selectedTag root.routerClearanceMeasurementUnitsFactor ;
#
#  outlet routerRoutingSideMatrix : NSMatrix $selectedIndex root.routerRoutingSides ;
#
#  outlet routerRoutingAngleMatrix : NSMatrix $selectedIndex root.routerRoutingAngle ;
#
#  action exportDSNfileAction ;
#  outlet exportDSNfileButton : NSButton $run .exportDSNfileAction ;
#  
#  outlet auxiliaryViewForSaveDSNfilePanel : NSView ;
#  outlet exportTracksAndViasCheckbox : NSButton ;
#  outlet exportPassingPointsCheckbox : NSButton ;
#  
#  action launchFreeRoutingAction ;
#  outlet launchFreeRoutingButton : NSButton $run .launchFreeRoutingAction ;
#  
#  action importSESfileAction ;
#  outlet importSESfileButton : NSButton $run .importSESfileAction ;
#
#  action designRulesCheckAction ;
#  outlet designRuleCheckInRouterInspectorButton : NSButton $run .designRulesCheckAction $enabled ! root.noAttachedArtworkFile ;
# 
#  outlet routerRoutingOriginPopUpButton : NSPopUpButton $selectedIndex root.routerRoutingOrigin ;
#
#  outlet routerRoutingDirectionPopUpButton : NSPopUpButton $selectedIndex root.routerRoutingDirection ;
#
#  outlet routePadsFromBackSideButton : NSButton $value root.routePadsFromBackSide ;
#
##--- Autorouter
#  outlet autorouterPanel : NSPanel ;
#  action autorouterBeginSheetAction ;
#  outlet autorouterBeginSheetButton : NSButton $run .autorouterBeginSheetAction ;
#  outlet autorouterAutorunCheckbox : NSButton $value root.autorouterAutoRun ;
#  outlet autorouterDelaunayTriangulationsMatrix : NSMatrix $selectedIndex root.autorouterDelaunayTriangulation ;
#  action autorouterShowDelaunayTriangulationsAction observe root.autorouterDelaunayTriangulation ;
#  outlet autorouterTopologicalShortestPathesComputationsMatrix : NSMatrix $selectedIndex root.autorouterShowTopologicalShortestPathesComputations ;
#  action autorouterShowTopologicalShortestPathesComputationsAction observe root.autorouterShowTopologicalShortestPathesComputations ;
#  outlet autorouterBoardViewScalePopUpButton : NSPopUpButton $selectedTag root.autorouterBoardViewScale ;
#  action autorouterSetBoardViewScaleAction observe root.autorouterBoardViewScale ;
#  outlet autorouterWireDisplayPopUpButton : NSPopUpButton $selectedIndex root.autorouterWireDisplay ;
#  action autorouterWireDisplayAction observe root.autorouterWireDisplay ;
#
##------------------------------------------------ Text in Board Inspector
#  outlet textInBoardInspectorView : NSView ;
#  outlet textInBoardTextField : NSTextField $value .boardGraphicsController.selectedTextInBoardEntity.text ;
#  outlet textInBoardSidePopUpButton : NSPopUpButton $selectedIndex .boardGraphicsController.selectedTextInBoardEntity.side ;
#  outlet textSizeInBoardTextField : NSTextField $value .boardGraphicsController.selectedTextInBoardEntity.fontSize ;
#  outlet textDirectionInBoardTextField : NSTextField $value .boardGraphicsController.selectedTextInBoardEntity.direction ;
#  controller textDirectionInBoardController : AngleForSliderController $angle .boardGraphicsController.selectedTextInBoardEntity.direction ;
#  outlet textDirectionInBoardSlider : PMSlider $value .textDirectionInBoardController.angleForSlider ;
#  outlet textInBoardFontPopup : NSPopUpButton FontInProjectEntity
#    $contentValuesAndContent .embeddedFontController.arrangedObjects.fontName
#    $selectedObject .boardGraphicsController.selectedTextInBoardEntity.font ;
#
##--- Passing Point Inspector
#  outlet passingPointInBoardInspectorView : NSView ;
#  outlet passingPointSidePopUpButton : NSPopUpButton
#    $selectedIndex .boardGraphicsController.selectedPassingPointInBoardEntity.side
#  ;
#  controller passingPointNetController : NSArrayController NetEntity $contentSet root.nets ;
#  outlet passingPointNetPopUpButton : NSPopUpButton NetEntity
#    $contentValuesAndContent .passingPointNetController.arrangedObjects.netName
#    $selectedObject .boardGraphicsController.selectedPassingPointInBoardEntity.net ;
#
#  controller passingPointXController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedPassingPointInBoardEntity.location.x
#    $measurementUnitFactor .boardGraphicsController.selectedPassingPointInBoardEntity.locationXMeasurementUnit
#  ;
#  outlet passingPointXTextfield : NSTextField
#    $value .passingPointXController.valueInUnitFactor ;
#  outlet passingPointXUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedPassingPointInBoardEntity.locationXMeasurementUnit ;
#
#  controller passingPointYController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedPassingPointInBoardEntity.location.y
#    $measurementUnitFactor .boardGraphicsController.selectedPassingPointInBoardEntity.locationYMeasurementUnit
#  ;
#  outlet passingPointYTextfield : NSTextField
#    $value .passingPointYController.valueInUnitFactor ;
#  outlet passingPointYUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedPassingPointInBoardEntity.locationYMeasurementUnit ;
#
##--- Via in Board Inspector
#  outlet viaInBoardInspectorView : NSView ;
#  #--- net Name
#  outlet viaNetNameTextField : NSTextField $value .boardGraphicsController.selectedConnectorInBoardEntity.netName ;
#  outlet viaNetClassNameTextField : NSTextField $value .boardGraphicsController.selectedConnectorInBoardEntity.netClassName ;
#  #--- Pad diameter from net class
#  controller padDiameterFromNetClassController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedConnectorInBoardEntity.padDiameterFromNetClass
#    $measurementUnitFactor .boardGraphicsController.selectedConnectorInBoardEntity.padDiameterFromNetClassDisplayUnit
#  ;
#  outlet padDiameterFromNetClassTextfield : NSTextField
#    $value .padDiameterFromNetClassController.valueInUnitFactor ;
#  outlet padDiameterForNetClassDisplayUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedConnectorInBoardEntity.padDiameterFromNetClassDisplayUnit ;
#  #--- Custom Pad diameter
#  outlet useCustomPadDiameterCheckbox : NSButton $value .boardGraphicsController.selectedConnectorInBoardEntity.useCustomPadDiameter ;
#  controller customPadDiameterController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedConnectorInBoardEntity.customPadDiameter
#    $measurementUnitFactor .boardGraphicsController.selectedConnectorInBoardEntity.customPadDiameterDisplayUnit
#  ;
#  outlet customPadDiameterTextfield : NSTextField
#    $enabled .boardGraphicsController.selectedConnectorInBoardEntity.useCustomPadDiameter
#    $value .customPadDiameterController.valueInUnitFactor ;
#  outlet customPadDiameterDisplayUnitPopUpButton : NSPopUpButton
#    $enabled .boardGraphicsController.selectedConnectorInBoardEntity.useCustomPadDiameter
#    $selectedTag .boardGraphicsController.selectedConnectorInBoardEntity.customPadDiameterDisplayUnit ;
#  #--- Hole diameter from net class
#  controller holeDiameterFromNetClassController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedConnectorInBoardEntity.holeDiameterFromNetClass
#    $measurementUnitFactor .boardGraphicsController.selectedConnectorInBoardEntity.holeDiameterFromNetClassDisplayUnit
#  ;
#  outlet holeDiameterFromNetClassTextfield : NSTextField
#    $value .holeDiameterFromNetClassController.valueInUnitFactor ;
#  outlet holeDiameterForNetClassDisplayUnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedConnectorInBoardEntity.holeDiameterFromNetClassDisplayUnit ;
#  #--- Custom Hole diameter
#  outlet useCustomHoleDiameterCheckbox : NSButton $value .boardGraphicsController.selectedConnectorInBoardEntity.useCustomHoleDiameter ;
#  controller customHoleDiameterController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedConnectorInBoardEntity.customHoleDiameter
#    $measurementUnitFactor .boardGraphicsController.selectedConnectorInBoardEntity.customHoleDiameterDisplayUnit
#  ;
#  outlet customHoleDiameterTextfield : NSTextField
#    $enabled .boardGraphicsController.selectedConnectorInBoardEntity.useCustomHoleDiameter
#    $value .customHoleDiameterController.valueInUnitFactor ;
#  outlet customHoleDiameterDisplayUnitPopUpButton : NSPopUpButton
#    $enabled .boardGraphicsController.selectedConnectorInBoardEntity.useCustomHoleDiameter
#    $selectedTag .boardGraphicsController.selectedConnectorInBoardEntity.customHoleDiameterDisplayUnit ;
#
##----------------------- Line in Board Inspector
#  outlet lineInBoardInspectorView : NSView ;
#  outlet lineInBoardSidePopUpMenu : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedLineInBoardEntity.side ;
#
#  controller lineInBoardWidthController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedLineInBoardEntity.width
#    $measurementUnitFactor .boardGraphicsController.selectedLineInBoardEntity.measurementUnitForWidth
#  ;
#
#  outlet lineInBoardWidthTextfield : NSTextField $value .lineInBoardWidthController.valueInUnitFactor ;
#  outlet lineInBoardWidthUnitPopUpButton : NSPopUpButton $selectedTag .boardGraphicsController.selectedLineInBoardEntity.measurementUnitForWidth ;
#
#  #--- First Point location
#  controller lineX1Controller : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedLineInBoardEntity.point1.x
#    $measurementUnitFactor .boardGraphicsController.selectedLineInBoardEntity.point1XmeasurementUnitsFactor
#  ;
#  outlet lineX1Textfield : NSTextField $value .lineX1Controller.valueInUnitFactor ;
#  outlet lineX1UnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedLineInBoardEntity.point1XmeasurementUnitsFactor ;
#
#  controller lineY1Controller : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedLineInBoardEntity.point1.y
#    $measurementUnitFactor .boardGraphicsController.selectedLineInBoardEntity.point1YmeasurementUnitsFactor
#  ;
#  outlet lineY1Textfield : NSTextField $value .lineY1Controller.valueInUnitFactor ;
#  outlet lineY1UnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedLineInBoardEntity.point1YmeasurementUnitsFactor ;
#
#  #--- Second Point location
#  controller lineX2Controller : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedLineInBoardEntity.point2.x
#    $measurementUnitFactor .boardGraphicsController.selectedLineInBoardEntity.point2XmeasurementUnitsFactor
#  ;
#  outlet lineX2Textfield : NSTextField $value .lineX2Controller.valueInUnitFactor ;
#  outlet lineX2UnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedLineInBoardEntity.point2XmeasurementUnitsFactor ;
#
#  controller lineY2Controller : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedLineInBoardEntity.point2.y
#    $measurementUnitFactor .boardGraphicsController.selectedLineInBoardEntity.point2YmeasurementUnitsFactor
#  ;
#  outlet lineY2Textfield : NSTextField $value .lineY2Controller.valueInUnitFactor ;
#  outlet lineY2UnitPopUpButton : NSPopUpButton
#    $selectedTag .boardGraphicsController.selectedLineInBoardEntity.point2YmeasurementUnitsFactor ;
#
##------------------------ Component in Board Inspector
#  outlet packageInBoardInspectorView : NSView ;
#  #--- Controller for accessing corresponding device
#  controller deviceController : NSObjectController DeviceInProjectEntity $contentObject .boardGraphicsController.selectedComponentInProjectEntity.device ;
#  #--- Controller for accessing corresponding available packages
#  controller availablePackagesController : NSArrayController PackageTypeInProjectEntity $contentSet .deviceController.selection.availablePackages ;
#  #--- Package rotation
#  outlet packageInBoardRotationTextField : NSTextField $value .boardGraphicsController.selectedComponentInProjectEntity.rotationInDegrees ;
#  controller packageInBoardRotationController : AngleForSliderController $angle .boardGraphicsController.selectedComponentInProjectEntity.rotationInDegrees ;
#  outlet packageInBoardRotationSlider : PMSlider $value .packageInBoardRotationController.angleForSlider ;
#  #--- Package location
#  controller packageXController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedComponentInProjectEntity.origin.x
#    $measurementUnitFactor root.packageXmeasurementUnitsFactor
#  ;
#  outlet packageXTextfield : NSTextField
#    $value .packageXController.valueInUnitFactor ;
#  outlet packageXUnitPopUpButton : NSPopUpButton
#    $selectedTag root.packageXmeasurementUnitsFactor ;
#
#  controller packageYController : EBMeasurementController
#    $valueInEBUnit .boardGraphicsController.selectedComponentInProjectEntity.origin.y
#    $measurementUnitFactor root.packageYmeasurementUnitsFactor
#  ;
#  outlet packageYTextfield : NSTextField
#    $value .packageYController.valueInUnitFactor ;
#  outlet packageYUnitPopUpButton : NSPopUpButton
#    $selectedTag root.packageYmeasurementUnitsFactor ;
#  #--- Package Selection PopUp
#  outlet availablePackagesPopup : NSPopUpButton PackageTypeInProjectEntity
#    $contentValuesAndContent .availablePackagesController.arrangedObjects.packageTypeName
#    $selectedObject .boardGraphicsController.selectedComponentInProjectEntity.usedPackage ;
#  #--- Component Name
#  outlet componentNameIsVisibleCheckBox : NSButton $value .boardGraphicsController.selectedComponentInProjectEntity.componentNameIsVisible ;
#  outlet componentNameTextField : NSTextField $value .boardGraphicsController.selectedComponentInProjectEntity.componentName ;
#  outlet componentNameDirectionSegmentedControl : NSSegmentedControl $selectedIndex .boardGraphicsController.selectedComponentInProjectEntity.componentNameDirection ;
#  #--- Component Name Font
#  outlet componentNameFontPopup : NSPopUpButton FontInProjectEntity
#    $contentValuesAndContent .embeddedFontController.arrangedObjects.fontName
#    $selectedObject .boardGraphicsController.selectedComponentInProjectEntity.fontForComponentName ;
#  #--- Component Name Font Size
#  outlet componentNameFontSizeTextField : NSTextField $value .boardGraphicsController.selectedComponentInProjectEntity.fontSizeForComponentName ;
#  #--- Component Value
#  outlet componentValueIsVisibleCheckBox : NSButton $value .boardGraphicsController.selectedComponentInProjectEntity.componentValueIsVisible ;
#  outlet componentValueTextField : NSTextField $value .boardGraphicsController.selectedComponentInProjectEntity.componentValue ;
#  outlet componentValueDirectionSegmentedControl : NSSegmentedControl $selectedIndex .boardGraphicsController.selectedComponentInProjectEntity.componentValueDirection ;
#  #--- Component Value Font
#  outlet componentValueFontPopup : NSPopUpButton FontInProjectEntity
#    $contentValuesAndContent .embeddedFontController.arrangedObjects.fontName
#    $selectedObject .boardGraphicsController.selectedComponentInProjectEntity.fontForComponentValue ;
#  #--- Component Value Font Size
#  outlet componentValueFontSizeTextField : NSTextField $value .boardGraphicsController.selectedComponentInProjectEntity.fontSizeForComponentValue ;
#  #--- Component Side in Board
#  outlet componentSideMatrix : NSMatrix $selectedTag .boardGraphicsController.selectedComponentInProjectEntity.onComponentSideInBoard ;
#
##------------------------ Board View
#  outlet selectedObjectInBoardInspectorView : NSView ;
#  outlet boardView : PMBoardView
#    $showBoardLimits root.showBoardLimits
#    $showBoardClearance root.showBoardClearance
#    $boardLineWidth root.boardLineWidth
#    $boardWidth root.boardWidth
#    $boardHeight root.boardHeight
#    $boardClearance root.boardClearance
#    $backgroundColor PMBoardPreferences.root.boardBackgroundColor
#    $gridStyle root.boardGridStyle
#    $gridFactor  root.boardGridFactor
#    $placementGrid root.boardGrid
#    $displayedGridStep root.boardGrid
#    $zoom root.boardZoom
#    $verticalFlip root.boardVerticalFlip
#    $horizontalFlip root.boardHorizontalFlip
#    $measurementUnitsFactor root.boardGridUnitsFactor
#    $shouldAntialias PMGeneralPreferences.root.antiAliasing
#    $gridDotColor PMBoardPreferences.root.dotColorOfBoardGrid
#    $gridLineColor PMBoardPreferences.root.lineColorOfBoardGrid
#    $boardLimitsColor PMBoardPreferences.root.boardLimitsColor
#    $boardSideClearanceColor PMBoardPreferences.root.boardClearanceColor
#    $errorColor PMBoardPreferences.root.errorBackgroundColor
#    $warningColor PMBoardPreferences.root.warningBackgroundColor
#    $boardStatusDictionary root.boardStatusDictionary
#    $radiusOfWarningOrErrorOvals PMBoardPreferences.root.warningAndErrorCircleDiameterMultipliedByTen
#    $horizontalDensityDictionary root.horizontalDensityDictionary
#    $verticalDensityDictionary root.verticalDensityDictionary
#    $horizontalDensityDisplayTransparency root.horizontalDensityDisplayAlpha
#    $verticalDensityDisplayTransparency root.verticalDensityDisplayAlpha
#    $rastnest root.rastnest
#
#    inspectorView selectedObjectInBoardInspectorView ;
#    inspector UnifiedRestrictRectangleEntity -> .unifiedRestrictRectangleInspectorView ;
#    inspector TextInBoardEntity -> .textInBoardInspectorView ;
#    inspector TrackInBoardEntity -> .trackInBoardInspectorView ;
#    inspector ComponentInProjectEntity -> .packageInBoardInspectorView ;
#    inspector LineInBoardEntity -> .lineInBoardInspectorView ;
#    inspector ConnectorInBoardEntity -> .viaInBoardInspectorView ;
#    inspector PassingPointInBoardEntity -> .passingPointInBoardInspectorView ;
#  ;
#  outlet boardScrollView : NSScrollView (PM_scroll_view_with_placards) ;
#
##--- Menu action
#  action selectAllTracksAction ;
#  action selectAllViasAction ;
#  action selectAllPassingPointsAction ;
#  action selectAllRestrictRectanglesAction ;
#  action selectAllComponentsAction ;
#  action duplicateSelectedComponentsAction ;
#  action buildSubmenuOfSelectOneComponentMenuItemAction observe root.componentArray ;
#  outlet selectOneComponentMenuItem : NSMenuItem ;
#  action selectAllTracksFromSelectedTrackAction ;
#  outlet selectAllTracksFromSelectedTrack : NSMenuItem
#   $enabled .boardGraphicsController.selectedTrackInBoardEntity.hasNet
#   $run .selectAllTracksFromSelectedTrackAction
#  ;
#  action renameAllComponentsFromLeftToRightUpwardsAction ;
#
#  action updateSelectTrackFromNetItemAction observe root.netNameArray ;
#  outlet selectTracksFromNetMenuItem : NSMenuItem ;
#
#  action addComponentsToSelectionAction ;
#  action updateSelectionCountDisplay ;
#  outlet addComponentsToSelection_Panel : NSPanel ;
#  outlet addComponentsToSelectionComponentCountTextField : NSTextField ;
#  outlet addComponentsToSelectionOkButton : NSButton ;
#  outlet addComponentsToSelectionFromSheetCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromSheetErrorMessage: NSTextField ;
#  outlet addComponentsToSelectionFromSheetPopUpButton: NSPopUpButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromPackageCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromPackagePopUpButton: NSPopUpButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentSideCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentSideSegmentedControl: NSSegmentedControl $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentNameVisibilityCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentNameIsVisibleSegmentedControl: NSSegmentedControl $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentNameDirectionCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentNameDirectionSegmentedControl: NSSegmentedControl $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentValueVisibilityCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentValueIsVisibleSegmentedControl: NSSegmentedControl $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentValueDirectionCheckBox : NSButton $run .updateSelectionCountDisplay ;
#  outlet addComponentsToSelectionFromComponentValueDirectionSegmentedControl: NSSegmentedControl $run .updateSelectionCountDisplay ;
#
##--- Segment and via count text fields
#  outlet segmentCountTextField : NSTextField $value root.segmentCountString ;
#  outlet viaCountTextField : NSTextField $value root.viaCountString ;
#
#  controller traceLengthController : EBMeasurementController
#    $valueInEBUnit root.traceLength
#    $measurementUnitFactor root.measurementUnitForTraceLength
#  ;
#
#  outlet traceLengthTextField : NSTextField $value .traceLengthController.valueInUnitFactor ;
#  outlet traceLengthUnitPopUpButton : NSPopUpButton $selectedTag root.measurementUnitForTraceLength ;
#
##---------------------- Artwork Tab
#  outlet artworkTabView : NSTabView $hidden root.noAttachedArtworkFile ;
#  outlet noArtworkTextField: NSTextField $hidden ! root.noAttachedArtworkFile ;
#
##--- Board and Schematics Status images
#  outlet schematicsStatusForArtwork : PMStatusImage
#    $statusValue root.schematicsStatus
#    $toolTip root.schematicsStatusToolTipString
#  ;
#
#  outlet boardStatusForArtwork : PMStatusImage
#    $statusValue root.boardStatus
#    $toolTip root.boardStatusToolTipString
#  ;
#
#  outlet designRuleCheckStatusForArtwork : PMStatusImage
#    $statusValue root.designRuleCheckStatusCode
#    $toolTip root.designRuleCheckToolTipString
#  ;
#
##--- ERC checking
#  outlet ercPanel : NSPanel ;
#  outlet artworkLogTextView : NSTextView ;
#  outlet designRuleCheckButton : NSButton $run .designRulesCheckAction $enabled ! root.noAttachedArtworkFile ;
#
##--- Artwork File Generation
#  outlet generatingFilesPanel : NSPanel ;
#  action generateArtworkFilesAction ;
#  outlet generateArtworkFilesButton : NSButton $run .generateArtworkFilesAction $enabled ! root.noAttachedArtworkFile ;
#  outlet artworkGeneratesGerberButton : NSButton $value root.artworkGeneratesGerber $enabled ! root.noAttachedArtworkFile ;
#  outlet artworkGeneratesPDFButton : NSButton $value root.artworkGeneratesPDF $enabled ! root.noAttachedArtworkFile ;
#  outlet artworkGeneratesEPSButton : NSButton $value root.artworkGeneratesEPS $enabled ! root.noAttachedArtworkFile ;
#
##--- Artwork Attachment/detachment
#  outlet artworkFileNameTextField : NSTextField $value root.artworkFileName ;
#  action performArtworkAttachmentDetachment ;
#  outlet attachDetachArtworkButton : NSButton $run .performArtworkAttachmentDetachment ;
#
##--- Artwork Summary
#  controller artworkSummaryController : NSObjectController ArtworkRootEntity $contentObject root.artworkRootEntity ;
##--- Minimum value for PP, TP, TT and TW
#  controller artworkMeasurementControllerFor_PP_TP_TT_TW : EBMeasurementController
#    $valueInEBUnit .artworkSummaryController.selection.minPP_TP_TT_TW_inEBunit
#    $measurementUnitFactor .artworkSummaryController.selection.minPP_TP_TT_TW_displayUnit
#  ;
#  outlet artworkMinPP_TP_TT_TW_Textfield : NSTextField $value .artworkMeasurementControllerFor_PP_TP_TT_TW.valueInUnitFactor ;
#  outlet artworkMinPP_TP_TT_TW_UnitPopUpButton : NSPopUpButton $selectedTag .artworkSummaryController.selection.minPP_TP_TT_TW_displayUnit ;
#
##--- Minimum value for PHD
#  controller artworkMeasurementControllerFor_PHD : EBMeasurementController
#    $valueInEBUnit .artworkSummaryController.selection.minValueForPHDinEBUnit
#    $measurementUnitFactor .artworkSummaryController.selection.minValueForPHDdisplayUnit
#  ;
#  outlet artworkMinFor_PHD_Textfield : NSTextField $value .artworkMeasurementControllerFor_PHD.valueInUnitFactor ;
#  outlet artworkMinFor_PHD_UnitPopUpButton : NSPopUpButton $selectedTag .artworkSummaryController.selection.minValueForPHDdisplayUnit ;
#
##--- Minimum value for OAR
#  controller artworkMeasurementControllerFor_OAR : EBMeasurementController
#    $valueInEBUnit .artworkSummaryController.selection.minValueForOARinEBUnit
#    $measurementUnitFactor .artworkSummaryController.selection.minValueForOARdisplayUnit
#  ;
#  outlet artworkMinFor_OAR_Textfield : NSTextField $value .artworkMeasurementControllerFor_OAR.valueInUnitFactor ;
#  outlet artworkMinFor_OAR_UnitPopUpButton : NSPopUpButton $selectedTag .artworkSummaryController.selection.minValueForOARdisplayUnit ;
#
##------ Format Tab
##--- Gerber Data Format
#  outlet gerberDataFormatPopUpButton : NSPopUpButton $selectedTag .artworkSummaryController.selection.gerberDataFormat $enabled root.alwaysFalse ;
#
##--- Drill Data Format
#  outlet drillDataFormatPopUpButton : NSPopUpButton $selectedTag .artworkSummaryController.selection.drillDataFormat $enabled root.alwaysFalse ;
#
##--- Drill Data View
#  outlet drillDataView : PMDrillDataView $drillFormat .artworkSummaryController.selection.drillDataFormat ;
#
##--- Excellon Data Definition
#  outlet excellonDataView : NSView ;
#  controller excellonDataController : NSObjectController ExcellonDrillDataEntity
#    $contentObject .artworkSummaryController.selection.excellonDrillFormatDefinition ;
#  outlet excellonDrillDataFileExtensionTextField : NSTextField $value .excellonDataController.selection.drillDataFileExtension $enabled root.alwaysFalse ;
#
##--- Excellon Data Definition (with separate drill tool list)
#  outlet excellonWithSeparateDrillToolListDataView : NSView ;
#  controller excellonWithSeparateDrillToolListDataController : NSObjectController ExcellonDrillDataWithSeparateToolListFileEntity
#    $contentObject .artworkSummaryController.selection.excellonDrillWithSeparateToolListFormatDefinition ;
#  outlet excellonHoleListFileExtensionTextField : NSTextField $value .excellonWithSeparateDrillToolListDataController.selection.drillListFileExtension $enabled root.alwaysFalse ;
#  outlet excellonSeparateToolListFileExtensionTextField : NSTextField $value .excellonWithSeparateDrillToolListDataController.selection.drillToolListFileExtension $enabled root.alwaysFalse ;
#
##--- Generated Data file parameters
#  controller artworkGeneratedDataController : NSArrayController ArtworkFileGenerationParameters
#    $contentSet .artworkSummaryController.selection.fileGenerationParameterArray ;
#
#  outlet artworkGeneratorTableView : NSTableView $tableValue .artworkGeneratedDataController {
#    NSTableColumn "name" NSTextFieldCell $value *.name $editable root.alwaysFalse ;
#  } ;
#  outlet artworkFileExtensionTextfield : NSTextField $value .artworkGeneratedDataController.selection.fileExtension $enabled root.alwaysFalse ;
#
#  outlet artworkTextsLegendComponentSideButton : NSButton $value .artworkGeneratedDataController.selection.drawTextsLegendComponentSide $enabled root.alwaysFalse ;
#  outlet artworkTextsLayoutComponentSideButton : NSButton $value .artworkGeneratedDataController.selection.drawTextsLayoutComponentSide $enabled root.alwaysFalse ;
#  outlet artworkTextsLayoutSolderSideButton    : NSButton $value .artworkGeneratedDataController.selection.drawTextsLayoutSolderSide $enabled root.alwaysFalse ;
#  outlet artworkTextsLegendSolderSideButton    : NSButton $value .artworkGeneratedDataController.selection.drawTextsLegendSolderSide $enabled root.alwaysFalse ;
#  outlet artworkPadsComponentSideButton        : NSButton $value .artworkGeneratedDataController.selection.drawPadsComponentSide $enabled root.alwaysFalse ;
#  outlet artworkPadsSolderSideButton           : NSButton $value .artworkGeneratedDataController.selection.drawPadsSolderSide $enabled root.alwaysFalse ;
#  outlet artworkViasButton                     : NSButton $value .artworkGeneratedDataController.selection.drawVias $enabled root.alwaysFalse ;
#  outlet artworkPackageLegendButton            : NSButton $value .artworkGeneratedDataController.selection.drawPackageLegends $enabled root.alwaysFalse ;
#  outlet artworkComponentNamesButton           : NSButton $value .artworkGeneratedDataController.selection.drawComponentNames $enabled root.alwaysFalse ;
#  outlet artworkComponentValuesButton          : NSButton $value .artworkGeneratedDataController.selection.drawComponentValues $enabled root.alwaysFalse ;
#  outlet artworkTracksComponentSideButton      : NSButton $value .artworkGeneratedDataController.selection.drawTracksComponentSide $enabled root.alwaysFalse ;
#  outlet artworkTracksSolderSideButton         : NSButton $value .artworkGeneratedDataController.selection.drawTracksSolderSide $enabled root.alwaysFalse ;
#  outlet artworkBoardLimitsButton              : NSButton $value .artworkGeneratedDataController.selection.drawBoardLimits $enabled root.alwaysFalse ;
#  outlet artworkComponentValuesSolderSideButton: NSButton $value .artworkGeneratedDataController.selection.drawComponentValuesSolderSide $enabled root.alwaysFalse ;
#  outlet artworkComponentNamesSolderSideButton : NSButton $value .artworkGeneratedDataController.selection.drawComponentNamesSolderSide $enabled root.alwaysFalse ;
#  outlet artworkPackageLegendSolderSideButton  : NSButton $value .artworkGeneratedDataController.selection.drawPackageLegendsSolderSide $enabled root.alwaysFalse ;
#
#  outlet artworkPadHolesInPDFCheckBox          : NSButton $value .artworkGeneratedDataController.selection.drawPadHolesInPDF $enabled root.alwaysFalse ;
#  controller artworkPadHoleInPDFMeasurementController : EBMeasurementController
#   $measurementUnitFactor .artworkGeneratedDataController.selection.measurementUnitForPadHoleInPDF
#   $valueInEBUnit .artworkGeneratedDataController.selection.padHoleDiameterInPDF
#  ;
#  outlet artworkPadHoleInPDFValueTextField : NSTextField
#    $value .artworkPadHoleInPDFMeasurementController.valueInUnitFactor
#    $enabled root.alwaysFalse
#  ;
#  outlet artworkPadHoleDiameterInPDFSettingView : NSView
#    $hidden ! .artworkGeneratedDataController.selection.drawPadHolesInPDF
#  ;
#  outlet artworkMeasurementUnitForPadHoleInPDFPopUpButton : NSPopUpButton
#    $selectedTag .artworkGeneratedDataController.selection.measurementUnitForPadHoleInPDF
#  ;
#
#  outlet artworkHorizontalMirrorButton : NSButton $value .artworkGeneratedDataController.selection.horizontalMirror $enabled root.alwaysFalse ;
#
##---------------------- Infos Tab
#  outlet artworkVersionTextField : NSTextField $value .artworkSummaryController.selection.versionNumber ;
#
##--- Comments
#  outlet artworkCommentTextView : NSTextView $value .artworkSummaryController.selection.comments $editable root.alwaysFalse ;
#
##--- Signature
#  outlet artworkSignatureTextField : NSTextField $value .artworkSummaryController.selection.signatureHexString ;
}

#----------------------------------------------------------------------------*

#classWithNib PMRenameComponentDialog {
#  outlet renameComponentPanel : NSPanel ;
#  outlet actualComponentNameForRenamePanel : NSTextField ;
#  controller prefixController : NSArrayController StringEntity ;
#  action prefixStringDidChangeAction ;
#  outlet prefixComboBox : NSComboBox
#    $contentValues .prefixController.arrangedObjects.string
#    $run .prefixStringDidChangeAction
#  ;
#  controller indexController : NSArrayController StringEntity ;
#  action indexForRenamingDidChangeAction ;
#  outlet indexPopUp : NSPopUpButton StringEntity
#    $contentValuesAndSelectedIndex .indexController.arrangedObjects.string
#    $run .indexForRenamingDidChangeAction ;
#  outlet performRenamingButton : NSButton ;
#  outlet performRenamingErrorMessageTextString : NSTextField ;
#}

#----------------------------------------------------------------------------*

#classForEntity PointInSheetEntity {
#  attribute location : EBPoint := EBZeroPoint storedBy .stringForLocation ;
#}{
#  transient pointCanMove : boolean observe .symbolPins ;
#  
#  setObserver pinsObserver observe .symbolPins ;
#  transient connectionKind : integer32 observe :pinsObserver.PinInProjectPadInBoardEntity.ncPoint, .wireP1s, .wireP2s, .labels ;
#}

#----------------------------------------------------------------------------*
