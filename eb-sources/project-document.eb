//----------------------------------------------------------------------------*
//     P R O J E C T    D O C U M E N T                                       *
//----------------------------------------------------------------------------*

document ProjectDocument root ProjectRoot {
//--- Selected Page
  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.mSelectedPageIndex ;
  outlet NSView mMasterView ;
  outlet CanariViewWithKeyView mComponentsPageView ;
  outlet CanariViewWithKeyView mLibraryPageView ;
  outlet CanariViewWithKeyView mSchematicsPageView ;
  outlet CanariViewWithKeyView mNetClassesPageView ;
  outlet CanariViewWithKeyView mNetListPageView ;
  outlet CanariViewWithKeyView mBoardPageView ;
  outlet CanariViewWithKeyView mProductPageView ;

//---------------------- Components Tab
  action addComponentAction ;
  outlet EBButton mAddComponentButton $run addComponentAction ;

  outlet CanariNewComponentFromDevicePullDownButton mNewComponentFromDevicePullDownButton
    $deviceNames root.deviceNames ;

  action duplicateSelectedComponentsAction ;
  outlet EBButton mDuplicateSelectedComponentsActionButton
    $run duplicateSelectedComponentsAction
    $enabled #mComponentController.selectedArray.count > 0
  ;

  action removeSelectedComponentsAction ;
  outlet EBButton mRemoveSelectedComponentsActionButton
    $run removeSelectedComponentsAction
    $enabled #mComponentController.selectedArray.count > 0
  ;

  action changePackageOfSelectedComponentsAction ;
  transient Bool canChangePackage dependsFrom #mComponentController.selectedArray.all.availablePackages ;
  outlet EBButton mChangePackageOfSelectedComponentsActionButton
    $run changePackageOfSelectedComponentsAction
    $enabled self.canChangePackage
  ;
  outlet NSPanel mChangePackagePanel ;
  outlet EBPopUpButton mChangePackagePopUpButton ;
  outlet NSTextField mChangePackageComponentListTextField ;


  action changeValueOfSelectedComponentsAction ;
  outlet EBButton mChangeValueOfSelectedComponentsActionButton
    $run changeValueOfSelectedComponentsAction
    $enabled #mComponentController.selectedArray.count > 0
  ;
  outlet NSPanel mChangeValuePanel ;
  outlet CanariComboBox mChangeComponentValueComboxBox ;
  outlet NSTextField mChangeValueComponentListTextField ;
  outlet NSButton mChangeValueValidationButton ;


  outlet EBButton mRenameComponentButton $enabled #mComponentController.selectedArray.count == 1 ; // Action targeted in IB
  outlet NSPanel mRenameComponentPanel ;
  outlet NSTextField mCurrentComponentNameTextField ;
  outlet NSTextField mRenameComponentErrorMessageTextField ;
  outlet CanariComboBox mRenameComponentPrefixComboxBox ;
  outlet NSPopUpButton mRenameComponentIndexesPopUpButton ;
  outlet NSButton mRenameComponentValidationButton ;

  tableViewController #mComponentController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mComponents {
     column "name" EBTextObserverField $valueObserver self.componentName
     column "device" EBTextObserverField $valueObserver self.deviceName
     column "package" EBTextObserverField $valueObserver self.selectedPackageName
     column "value" EBTextField $value self.mComponentValue { sendContinously : no }
     column "inSchematics" EBTextObserverField $valueObserver self.placementInSchematics
  }
  outlet EBTableView mComponentTableView $tableValue mComponentController ;

  transient String componentCount dependsFrom root.mComponents.count ;
  outlet EBTextObserverField mComponentCountTextField $valueObserver self.componentCount ;

//---------------------- Net Class Tab
  tableViewController #mNetClassController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mNetClasses {
    column "name" EBTextObserverField $valueObserver self.mNetClassName
    column "netcolor" EBTextObserverField $backColor self.mNetClassColor
    column "width" EBTextObserverField $valueObserver self.netWidth
    column "hole" EBTextObserverField $valueObserver self.viaHoleDiameter
    column "pad" EBTextObserverField $valueObserver self.viaPadDiameter
    column "used" EBTextObserverField $valueObserver self.netUsage
  }
  outlet EBTableView mNetClassTableView $tableValue mNetClassController ;

  action addNetClassAction ;
  outlet EBButton mAddNetClassButton $run addNetClassAction ;
  outlet NSPanel mAddNetClassPanel ;
  outlet EBTextField mAddNetClassTextField ;
  outlet NSTextField mAddNetClassErrorMessageTextField ;
  outlet CanariDimensionTextField mNetClassWidthDimensionTextField ;
  outlet EBPopUpButton mNetClassWidthUnitPopUpButton ;
  outlet CanariDimensionTextField mNetClassHoleDiameterDimensionTextField ;
  outlet EBPopUpButton mNetClassHoleDiameterUnitPopUpButton ;
  outlet CanariDimensionTextField mNetClassPadDiameterDimensionTextField ;
  outlet EBPopUpButton mNetClassPadDiameterUnitPopUpButton ;
  outlet EBColorWell mNetClassColorWell ;
  outlet NSButton mAddNetClassValidationButton ;

  action removeNetClassAction ;
  transient Bool canRemoveNetClasses dependsFrom root.mNetClasses.count, #mNetClassController.selectedArray.all.canRemove ;
  outlet EBButton mRemoveNetClassButton
    $run removeNetClassAction
    $enabled self.canRemoveNetClasses
  ;

  action editNetClassAction ;
  outlet EBButton mEditNetClassButton $run editNetClassAction $enabled #mNetClassController.selectedArray.count == 1 ;

//---------------------- Library Tab
  action addFontAction ;
  outlet EBButton mAddFontButton $run addFontAction ;

  action editFontAction ;
  outlet EBButton mEditFontButton $run editFontAction $enabled #mProjectFontController.selectedArray.count > 0 ;

  action updateFontAction ;
  outlet EBButton mUpdateFontButton $run updateFontAction $enabled #mProjectFontController.selectedArray.count > 0 ;

  action removeFontAction ;
  outlet EBButton mRemoveFontButton $run removeFontAction $enabled #mProjectFontController.selectedArray.count > 0 ;

  action resetFontVersionAction ;
  outlet EBButton mResetFontVersionButton $run resetFontVersionAction $enabled #mProjectFontController.selectedArray.count > 0 ;

  tableViewController #mProjectFontController {allowsEmptySelection:no, allowsMultipleSelection:no} root.mFonts {
     column "name" EBTextObserverField $valueObserver self.mFontName
     column "version" EBTextObserverField $valueObserver self.versionString
     column "size" EBTextObserverField $valueObserver self.sizeString
  }
  outlet EBTableView mFontLibraryTableView $tableValue mProjectFontController ;

//--- Devices
  action resetDeviceVersionAction ;
  outlet EBButton mResetDeviceVersionButton
    $run resetDeviceVersionAction
    $enabled #mProjectDeviceController.selectedArray.count > 0
  ;

  transient Bool canRemoveSelectedDevices dependsFrom #mProjectDeviceController.selectedArray.all.canRemove ;
  action removeDeviceAction ;
  outlet EBButton mRemoveDeviceButton
    $run removeDeviceAction
    $enabled self.canRemoveSelectedDevices
  ;

  action editDeviceAction ;
  outlet EBButton mEditDeviceButton
    $run editDeviceAction
    $enabled #mProjectDeviceController.selectedArray.count > 0
  ;

  action exportDeviceAction ;
  outlet EBButton mExportDeviceButton
    $run exportDeviceAction
    $enabled #mProjectDeviceController.selectedArray.count > 0
  ;

  action updateDeviceAction ;
  outlet EBButton mUpdateDeviceButton
    $run updateDeviceAction
    $enabled #mProjectDeviceController.selectedArray.count > 0
  ;

  tableViewController #mProjectDeviceController {allowsEmptySelection:yes, allowsMultipleSelection:yes} root.mDevices {
     column "name" EBTextObserverField $valueObserver self.mDeviceName
     column "version" EBTextObserverField $valueObserver self.versionString
     column "size" EBTextObserverField $valueObserver self.sizeString
     column "componentCount" EBIntObserverField $valueObserver self.mComponents.count {autoFormatter:yes}
  }
  outlet EBTableView mDeviceLibraryTableView $tableValue mProjectDeviceController ;

  transient StringArray selectedDevicePackageNames dependsFrom #mProjectDeviceController.selectedArray.all.packageNames ;
  outlet StringArrayTableView mDevicePackageTableView $array self.selectedDevicePackageNames ;

  transient TwoStringArray selectedDeviceSymbolNames dependsFrom
    #mProjectDeviceController.selectedArray.all.symbolAndTypesNames ;
  outlet TwoStringArrayTableView mDeviceSymbolTableView $array self.selectedDeviceSymbolNames ;

  transient ThreeStringArray pinPadAssignments dependsFrom #mProjectDeviceController.selectedArray.all.pinPadAssignments ;
  outlet ThreeStringArrayTableView mPinPadAssignmentTableView $array self.pinPadAssignments ;

//---------------------- Schematics Tab
  outlet CanariSegmentedControl mSchematicsInspectorSegmentedControl $selectedPage root.mSelectedSchematicsInspector ;
  outlet NSView mBaseSchematicsInspectorView ;
  outlet CanariViewWithKeyView mSelectedObjectsSchematicsInspectorView ;
  outlet CanariViewWithKeyView mGridZoomSchematicsInspectorView ;
  outlet CanariViewWithKeyView mUnplacedSymbolsSchematicsInspectorView ;
  outlet CanariViewWithKeyView mSchematicsSheetsInspectorView ;

//--- Unplaced symbols inspector
  outlet CanariDragSourceTableView mUnplacedSymbolsTableView $models root.unplacedSymbols ;
  transient Int unplacedSymbolsCount dependsFrom root.unplacedSymbols ;
  transient String unplacedSymbolsCountString dependsFrom self.unplacedSymbolsCount ;
  outlet EBTextObserverField mUnplacedSymbolsTextField $valueObserver self.unplacedSymbolsCountString ;

//--- Grid and Flip inspector
  outlet EBSwitch mSchematicsHorizontalFlipSwitch $value root.mSchematicsHorizontalFlip ;
  outlet EBSwitch mSchematicsVerticalFlipSwitch $value root.mSchematicsVerticalFlip ;
  outlet EBPopUpButton mSchematicsGridStylePopUpButton $selectedIndex root.mSchematicsGridStyle ;
  outlet EBPopUpButton mSchematicsGridDisplayFactorPopUpButton $selectedTag root.mSchematicsGridDisplayFactor ;

//--- Sheet inspector
  outlet EBTextField mSchematicsTitleTextField $value root.mSchematicsTitle {sendContinously : yes} ;
  outlet EBTextField mSchematicsVersionTextField $value root.mSchematicsVersion {sendContinously : yes} ;
  outlet CanariEnumSegmentedControl mSchematicsSheetOrientationSegmentedControl $selectedSegment root.mSchematicsSheetOrientation ;
  objectController #mSelectedSheetController : root.mSelectedSheet ;
  outlet EBTextField mSelectedSheetTitleTextField $value #mSelectedSheetController.one.mSheetTitle {sendContinously : yes} ;

  outlet EBPopUpButton mSheetPopUpButton ; // All bindings done programmatically
  outlet EBButton mSheetUpButton ; // All bindings done programmatically
  outlet EBButton mSheetDownButton ; // All bindings done programmatically

  action newSheetAction ;
  outlet EBButton mNewSheetButton $run newSheetAction ;

  action removeSheetAction ;
  outlet EBButton mRemoveSheetButton $run removeSheetAction $enabled root.mSheets.count > 1 ;


  action setDateToNowAction ;
  outlet EBButton mSetDateToNowButton $run setDateToNowAction ;

  action openSetDateDialogAction ;
  outlet EBButton mOpenSetDateDialogButton $run openSetDateDialogAction ;
  outlet NSPanel mSetDatePanel ;
  outlet NSDatePicker mSchematicsDatePicker ;

//--- Schematics view
  arrayController #mSchematicsObjectsController : mSelectedSheetController.mObjects ;

  outlet EBView mSchematicsView
    $underObjectsDisplay root.schematicsBackgroundDisplay
    $horizontalFlip root.mSchematicsHorizontalFlip
    $verticalFlip root.mSchematicsVerticalFlip
    $graphicController self.mSchematicsObjectsController
    $gridStyle root.mSchematicsGridStyle
    $gridDisplayFactor root.mSchematicsGridDisplayFactor
    $gridLineColor prefs.lineColorOfSymbolGrid
    $gridCrossColor prefs.crossColorOfSymbolGrid
    $zoom root.mSchematicsZoom
//    $backColor prefs.symbolBackgroundColor
//    $xPlacardUnit root.xPlacardUnit
//    $yPlacardUnit root.yPlacardUnit
  ;

  outlet EBScrollView mSchematicsScrollView ;

//--- Selected symbol in schematic inspector
  outlet CanariViewWithKeyView mComponentSymbolInspectorView ;
  selectionController ComponentSymbolInProject #mComponentSymbolSelectionController :
    #mSchematicsObjectsController.selectedArray
  ;

  outlet EBSwitch mComponentSymbolShowComponentValueSwitch
    $value #mComponentSymbolSelectionController.mDisplayComponentValue
  ;
  outlet EBTextObserverField mComponentSymbolComponentNameTextField
    $valueObserver #mComponentSymbolSelectionController.componentName
  ;

  outlet EBButton mRenameComponentFromComponentSymbolButton // Action set in IB
    $enabled #mSchematicsObjectsController.selectedArray.count == 1
  ;

  outlet EBTextField mComponentSymbolValueTextField
    $value #mComponentSymbolSelectionController.componentValueProxy {sendContinously : yes}
  ;

  outlet EBTextObserverField mComponentSymbolDeviceNameTextField
    $valueObserver #mComponentSymbolSelectionController.deviceName
  ;

  outlet EBTextObserverField mComponentSymbolTypeNameTextField
    $valueObserver #mComponentSymbolSelectionController.mSymbolTypeName
  ;

  outlet EBTextObserverField mComponentSymbolInstanceNameTextField
    $valueObserver #mComponentSymbolSelectionController.mSymbolInstanceName
  ;

  outlet CanariQuadrantSegmentedControl mSymbolRotationSegmentedControl
     $quadrant #mComponentSymbolSelectionController.mRotation ;

}

//----------------------------------------------------------------------------*
