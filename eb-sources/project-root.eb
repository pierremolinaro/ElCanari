//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//     P R O J E C T    R O O T
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity ProjectRoot {
  toMany FontInProject mFonts ;
  toMany DeviceInProject mDevices ;
  toMany ComponentInProject mComponents ;
  toMany NetClassInProject mNetClasses ;
  toMany SheetInProject mSheets ;
  toOne SheetInProject mSelectedSheet ;

  property Int mSelectedPageIndex default 0 ;

  property Int mSelectedSchematicsInspector default 0 ;
  property String mSchematicsTitle default "" ;
  property String mSchematicsVersion default "" ;
  property Date mSchematicsDate default date ;
  property Bool mSchematicsHorizontalFlip default no ;
  property Bool mSchematicsVerticalFlip default no ;
  property Int mSchematicsZoom default 100 ;
  property GridStyle mSchematicsGridStyle default line ;
  property Int mSchematicsGridDisplayFactor default 4 ;

  property SchematicsSheetOrientation mSchematicsSheetOrientation default horizontal ;

  transient StringArray deviceNames dependsFrom self.mDevices.all.mDeviceName ;

  transient StringTagArray unplacedSymbols dependsFrom self.mComponents.all.unplacedSymbols ;

  transient EBShape schematicsBackgroundDisplay dependsFrom
    self.mSchematicsTitle,
    self.mSchematicsVersion,
    self.mSchematicsSheetOrientation,
    self.mSelectedSheet.one.mSheetTitle,
    self.mSheets,
    self.mSelectedSheet,
    self.mSchematicsDate
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum SchematicsSheetOrientation { horizontal, vertical }

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Font
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity FontInProject {
  property String mFontName default "" ;
  property Int mFontVersion default 0 ;
  property String mDescriptiveString default "" ;

  transient String versionString dependsFrom self.mFontVersion ;
  transient String sizeString dependsFrom self.mDescriptiveString ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Device
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceInProject {
  property String mDeviceName default "" ;
  property String mPrefix default "" ;
  property Int mDeviceVersion default 0 ;
  property Data mDeviceFileData default empty ;

  toMany DevicePackageInProject mPackages ;
  toMany DeviceSymbolInstanceInProject mSymbols ;
  toMany ComponentInProject mComponents inverse toOne mDevice ;
  toMany DevicePadAssignmentInProject mPadAssignments ;

  transient String versionString dependsFrom self.mDeviceVersion ;
  transient String sizeString dependsFrom self.mDeviceFileData ;
  transient Bool canExport dependsFrom self.mDeviceFileData ;
  transient Bool canRemove dependsFrom self.mComponents.count ;
  transient StringArray packageNames dependsFrom self.mPackages.all.mPackageName ;
  transient SymbolInProjectIdentifierArray symbolAndTypesNames dependsFrom self.mSymbols.all.symbolAndTypeName ;
  transient ThreeStringArray pinPadAssignments dependsFrom self.mPadAssignments.all.pinPadAssignment ;

  transient DeviceSymbolDictionary deviceSymbolDictionary dependsFrom
    self.mPadAssignments.all.descriptor,
    self.mSymbols.all.symbolAndTypeName,
    self.mSymbols.all.filledBezierPath,
    self.mSymbols.all.strokeBezierPath ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePackageInProject {
  toMany DeviceMasterPadInProject mMasterPads ;

  property String mPackageName default "" ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceMasterPadInProject {
  toMany DeviceSlavePadInProject mSlavePads ;

  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property Int mWidth default 114_300 ;
  property Int mHeight default 228_600 ;
  property Int mHoleDiameter default 57_150 ;
  property PadShape mShape default octo ;
  property PadStyle mStyle default traversing ;
  property  String mName default "" ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSlavePadInProject {
  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property Int mWidth default 114_300 ;
  property Int mHeight default 228_600 ;
  property Int mHoleDiameter default 57_150 ;
  property PadShape mShape default octo ;
  property SlavePadStyle mStyle default traversing ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSymbolInstanceInProject {
  toOne DeviceSymbolTypeInProject mSymbolType ;

  property String mSymbolInstanceName default "" ;

  transient SymbolInProjectIdentifier symbolAndTypeName dependsFrom self.mSymbolInstanceName, self.mSymbolType.one.mSymbolTypeName ;

  transient String symbolTypeName dependsFrom self.mSymbolType.one.mSymbolTypeName ;

  transient NSBezierPath filledBezierPath dependsFrom self.mSymbolType.one.mFilledBezierPath ;

  transient NSBezierPath strokeBezierPath dependsFrom
    self.mSymbolType.one.mStrokeBezierPath,
    prefs.symbolDrawingWidthMultipliedByTenForSchematic
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSymbolTypeInProject {
  property String mSymbolTypeName default "" ;

  property NSBezierPath mStrokeBezierPath default empty ;
  property NSBezierPath mFilledBezierPath default empty ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePinInProject {
  property String mPinName default "" ;
  property String mSymbolInstanceName default "" ;
  property String mSymbolTypeName default "" ;

  property Int mPinX default 0 ;
  property Int mPinY default 0 ;

  property Int mXName default 0 ;
  property Int mYName default 0 ;

  property HorizontalAlignment mNameHorizontalAlignment default center ;
  property Bool mPinNameIsDisplayedInSchematics default yes ;

  property Int mXNumber default 0 ;
  property Int mYNumber default 0 ;
  property HorizontalAlignment mNumberHorizontalAlignment default center ;

  transient PinQualifiedNameStruct pinQualifiedName dependsFrom self.mSymbolInstanceName, self.mPinName ;

  transient PinInProjectDescriptor descriptor dependsFrom
    self.mPinName,
    self.mSymbolInstanceName,
    self.mSymbolTypeName,
    self.mPinX,
    self.mPinY,
    self.mXName,
    self.mYName,
    self.mNameHorizontalAlignment,
    self.mPinNameIsDisplayedInSchematics,
    self.mXNumber,
    self.mYNumber,
    self.mNumberHorizontalAlignment
  ;
}


//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity ComponentInProject {
  toOne DeviceInProject mDevice inverse toMany mComponents ;
  toOne DevicePackageInProject mSelectedPackage ;
  toMany ComponentSymbolInProject mSymbols inverse toOne mComponent ;

  property String mNamePrefix default "" ;
  property Int mNameIndex default 0 ;
  property String mComponentValue default "" ;

  transient String componentName dependsFrom self.mNamePrefix, self.mNameIndex ;
  transient String deviceName dependsFrom self.mDevice.one.mDeviceName ;
  transient String selectedPackageName dependsFrom self.mSelectedPackage.one.mPackageName ;

  transient StringArray availablePackages dependsFrom self.mDevice.one.packageNames ;
  transient StringTagArray unplacedSymbols dependsFrom
    self.componentName,
    self.mSymbols,
    self.mSymbols.all.symbolInSchematics,
    self.mSymbols.all.mSymbolInstanceName,
    self.mSymbols.all.mSymbolTypeName
  ;

  transient DeviceSymbolDictionary deviceSymbolDictionary dependsFrom self.mDevice.one.deviceSymbolDictionary ;

  transient String placementInSchematics dependsFrom self.mSymbols.all.symbolInSchematics ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePadAssignmentInProject {
  property String mPadName default "" ;
  toOne DevicePinInProject mPin ; // Is nil if pad is NC

  transient ThreeStrings pinPadAssignment dependsFrom self.mPadName, self.mPin.one.mSymbolInstanceName, self.mPin.one.mPinName ;

  transient PinPadAssignmentInProject descriptor dependsFrom self.mPadName, self.mPin.one.descriptor ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Net class
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity NetClassInProject {
  toMany NetInProject mNets inverse toOne mNetClass ;
  property String mNetClassName default "Default" ;
  property NSColor mNetClassColor default brown ;

  property Int mNetWidth default 45_720 ; // 20 mils
  property Int mNetWidthUnit default 2_286 ; // mil

  property Int mViaHoleDiameter default 45_720 ; // 20 mils
  property Int mViaHoleDiameterUnit default 2_286 ; // mil

  property Int mViaPadDiameter default 91_440 ; // 40 mils
  property Int mViaPadDiameterUnit default 2_286 ; // mil

  transient Bool canRemove dependsFrom self.mNets.count ;
  transient String netUsage dependsFrom self.mNets.count ;
  transient String netWidth dependsFrom self.mNetWidth, self.mNetWidthUnit ;
  transient String viaHoleDiameter dependsFrom self.mViaHoleDiameter, self.mViaHoleDiameterUnit ;
  transient String viaPadDiameter dependsFrom self.mViaPadDiameter, self.mViaPadDiameterUnit ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Net
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity NetInProject {
  property String mNetName default "" ;
  toOne NetClassInProject mNetClass inverse toMany mNets ;

}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Component Symbol
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity ComponentSymbolInProject : SchematicsObject {
  toOne ComponentInProject mComponent inverse toMany mSymbols ;

  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property QuadrantRotation mRotation default rotation0 ;

  property String mSymbolInstanceName default "" ;
  property String mSymbolTypeName default "" ;

  property Int mDisplayComponentNameOffsetX default 0 ;
  property Int mDisplayComponentNameOffsetY default 457_200 ; // 200 mils

  property Bool mDisplayComponentValue default yes ;
  property Int mDisplayComponentValueOffsetX default 0 ;
  property Int mDisplayComponentValueOffsetY default -457_200 ; // -200 mils

//  proxy componentValueProxy : ComponentInProject.mComponent.mComponentValue ;
  objectController #mComponentInSymbolController : self.mComponent ;

  transient String componentName dependsFrom self.mComponent.one.componentName ;
  transient String deviceName dependsFrom self.mComponent.one.deviceName ;

  transient ComponentSymbolInfo symbolInfo dependsFrom
    self.mRotation,
    self.componentName,
    self.mComponent.one.mComponentValue,
    self.mComponent.one.deviceSymbolDictionary,
    self.mSymbolInstanceName,
    self.mSymbolTypeName,
    self.mCenterX,
    self.mCenterY,
    prefs.pinNameFont
  ;

  transient Bool symbolInSchematics dependsFrom super.SchematicsObject.isPlacedInSchematics ;

  override transient EBShape objectDisplay dependsFrom
    prefs.pinNameFont,
    self.mDisplayComponentNameOffsetX,
    self.mDisplayComponentNameOffsetY,
    self.mDisplayComponentValue,
    self.mDisplayComponentValueOffsetX,
    self.mDisplayComponentValueOffsetY,
    self.symbolInfo,
    prefs.symbolColorForSchematic,
    self.mSymbolInstanceName,
    self.mSymbolTypeName
  ;

  override transient EBShape selectionDisplay dependsFrom
    prefs.pinNameFont,
    self.mDisplayComponentNameOffsetX,
    self.mDisplayComponentNameOffsetY,
    self.mDisplayComponentValue,
    self.mDisplayComponentValueOffsetX,
    self.mDisplayComponentValueOffsetY,
    self.symbolInfo
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Sheet
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity SheetInProject {
  toMany SchematicsObject mObjects inverse toOne mSheet ;

  property String mSheetTitle default "" ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   SchematicsObject
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract graphic entity SchematicsObject {
  toOne SheetInProject mSheet inverse toMany mObjects ;

  transient Bool isPlacedInSchematics dependsFrom self.mSheet.none ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
