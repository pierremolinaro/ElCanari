//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//     P R O J E C T    R O O T
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity ProjectRoot {
  toMany FontInProject mFonts ;
  toMany DeviceInProject mDevices ;
  toMany ComponentInProject mComponents ;
  toMany NetClassInProject mNetClasses ;
  toMany SheetInProject mSheets inverse toOne mRoot ;

  toOne SheetInProject mSelectedSheet ;
  property proxy String selectedSheetTitle : mSelectedSheet.mSheetTitle ;
  toMany proxy SchematicObject selectedSheetObjects : mSelectedSheet.mObjects ;
  transient CanariIssueArray selectedSheetIssues dependsFrom self.mSelectedSheet.one.issues ;
  transient EBShape connectedPoints dependsFrom self.mSelectedSheet.one.connectedPoints, self.selectedSheetIssues ;
 
  property Int mSelectedPageIndex default 0 ;

  property Int mSelectedSchematicInspector default 0 ;
  property String mSchematicTitle default "" ;
  property String mSchematicVersion default "" ;
  property Date mSchematicDate default date ;
  property Bool mSchematicHorizontalFlip default no ;
  property Bool mSchematicVerticalFlip default no ;
  property Int mSchematicZoom default 100 ;
  property GridStyle mSchematicGridStyle default line ;
  property Int mSchematicGridDisplayFactor default 4 ;

  property SchematicSheetOrientation mSchematicSheetOrientation default horizontal ;

  transient StringArray deviceNames dependsFrom self.mDevices.all.mDeviceName ;

  transient StringTagArray unplacedSymbols dependsFrom self.mComponents.all.unplacedSymbols ;

  transient EBShape schematicBackgroundDisplay dependsFrom
    self.mSchematicTitle,
    self.mSchematicVersion,
    self.mSchematicSheetOrientation,
    self.mSelectedSheet.one.mSheetTitle,
    self.mSheets,
    self.mSelectedSheet,
    self.mSchematicDate
  ;
  
  transient String connexionWarningString dependsFrom self.mSheets.all.connexionWarnings ;
  
  transient String connexionErrorString dependsFrom self.mSheets.all.connexionErrors ;

  transient String schematicStatusMessage dependsFrom
     self.unplacedSymbols,
     self.mSheets.all.connexionWarnings,
     self.mSheets.all.connexionErrors
   ;

  transient NSImage schematicStatusImage dependsFrom
    self.unplacedSymbols,
    self.mSheets.all.connexionWarnings,
    self.mSheets.all.connexionErrors
  ;
 
   transient NetInfoArray netsDescription dependsFrom self.mNetClasses.all.netsDescription ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum SchematicSheetOrientation { horizontal, vertical }

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Font
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity FontInProject {
  property String mFontName default "" ;
  property Int mFontVersion default 0 ;
  property String mDescriptiveString default "" ;

  transient String versionString dependsFrom self.mFontVersion ;
  transient String sizeString dependsFrom self.mDescriptiveString ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Device
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceInProject {
  property String mDeviceName default "" ;
  property String mPrefix default "" ;
  property Int mDeviceVersion default 0 ;
  property Data mDeviceFileData default empty ;

  toMany DevicePackageInProject mPackages ;
  toMany DeviceSymbolInstanceInProject mSymbols ;
  toMany ComponentInProject mComponents inverse toOne mDevice ;
  toMany DevicePadAssignmentInProject mPadAssignments ;

  transient String versionString dependsFrom self.mDeviceVersion ;
  transient String sizeString dependsFrom self.mDeviceFileData ;
  transient Bool canExport dependsFrom self.mDeviceFileData ;
  transient Bool canRemove dependsFrom self.mComponents.count ;
  transient StringArray packageNames dependsFrom self.mPackages.all.mPackageName ;
  transient SymbolInProjectIdentifierArray symbolAndTypesNames dependsFrom self.mSymbols.all.symbolAndTypeName ;
  transient ThreeStringArray pinPadAssignments dependsFrom self.mPadAssignments.all.pinPadAssignment ;

  transient DeviceSymbolDictionary deviceSymbolDictionary dependsFrom
    self.mPadAssignments.all.descriptor,
    self.mSymbols.all.symbolAndTypeName,
    self.mSymbols.all.filledBezierPath,
    self.mSymbols.all.strokeBezierPath ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePackageInProject {
  toMany DeviceMasterPadInProject mMasterPads ;

  property String mPackageName default "" ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceMasterPadInProject {
  toMany DeviceSlavePadInProject mSlavePads ;

  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property Int mWidth default 114_300 ;
  property Int mHeight default 228_600 ;
  property Int mHoleDiameter default 57_150 ;
  property PadShape mShape default octo ;
  property PadStyle mStyle default traversing ;
  property  String mName default "" ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSlavePadInProject {
  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property Int mWidth default 114_300 ;
  property Int mHeight default 228_600 ;
  property Int mHoleDiameter default 57_150 ;
  property PadShape mShape default octo ;
  property SlavePadStyle mStyle default traversing ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSymbolInstanceInProject {
  toOne DeviceSymbolTypeInProject mSymbolType ;

  property String mSymbolInstanceName default "" ;

  transient SymbolInProjectIdentifier symbolAndTypeName dependsFrom self.mSymbolInstanceName, self.mSymbolType.one.mSymbolTypeName ;

  transient String symbolTypeName dependsFrom self.mSymbolType.one.mSymbolTypeName ;

  transient NSBezierPath filledBezierPath dependsFrom self.mSymbolType.one.mFilledBezierPath ;

  transient NSBezierPath strokeBezierPath dependsFrom
    self.mSymbolType.one.mStrokeBezierPath,
    prefs.symbolDrawingWidthMultipliedByTenForSchematic
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DeviceSymbolTypeInProject {
  property String mSymbolTypeName default "" ;

  property NSBezierPath mStrokeBezierPath default empty ;
  property NSBezierPath mFilledBezierPath default empty ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePinInProject {
  property String mPinName default "" ;
  property String mSymbolInstanceName default "" ;
  property String mSymbolTypeName default "" ;

  property Int mPinX default 0 ;
  property Int mPinY default 0 ;

  property Int mXName default 0 ;
  property Int mYName default 0 ;

  property HorizontalAlignment mNameHorizontalAlignment default center ;
  property Bool mPinNameIsDisplayedInSchematic default yes ;

  property Int mXNumber default 0 ;
  property Int mYNumber default 0 ;
  property HorizontalAlignment mNumberHorizontalAlignment default center ;

  transient PinQualifiedNameStruct pinQualifiedName dependsFrom self.mSymbolInstanceName, self.mPinName ;

  transient PinInProjectDescriptor descriptor dependsFrom
    self.mPinName,
    self.mSymbolInstanceName,
    self.mSymbolTypeName,
    self.mPinX,
    self.mPinY,
    self.mXName,
    self.mYName,
    self.mNameHorizontalAlignment,
    self.mPinNameIsDisplayedInSchematic,
    self.mXNumber,
    self.mYNumber,
    self.mNumberHorizontalAlignment
  ;
}


//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity ComponentInProject {
  toOne DeviceInProject mDevice inverse toMany mComponents ;
  toOne DevicePackageInProject mSelectedPackage ;
  toMany ComponentSymbolInProject mSymbols inverse toOne mComponent ;

  property String mNamePrefix default "" ;
  property Int mNameIndex default 0 ;
  property String mComponentValue default "" ;

  transient String componentName dependsFrom self.mNamePrefix, self.mNameIndex ;
  transient String deviceName dependsFrom self.mDevice.one.mDeviceName ;
  transient String selectedPackageName dependsFrom self.mSelectedPackage.one.mPackageName ;

  transient StringArray availablePackages dependsFrom self.mDevice.one.packageNames ;
  transient StringTagArray unplacedSymbols dependsFrom
    self.componentName,
    self.mSymbols,
    self.mSymbols.all.symbolInSchematic,
    self.mSymbols.all.mSymbolInstanceName,
    self.mSymbols.all.mSymbolTypeName
  ;

  transient DeviceSymbolDictionary deviceSymbolDictionary dependsFrom self.mDevice.one.deviceSymbolDictionary ;

  transient String placementInSchematic dependsFrom self.mSymbols.all.symbolInSchematic ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity DevicePadAssignmentInProject {
  property String mPadName default "" ;
  toOne DevicePinInProject mPin ; // Is nil if pad is NC

  transient ThreeStrings pinPadAssignment dependsFrom self.mPadName, self.mPin.one.mSymbolInstanceName, self.mPin.one.mPinName ;

  transient PinPadAssignmentInProject descriptor dependsFrom self.mPadName, self.mPin.one.descriptor ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Net class
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity NetClassInProject {
  toMany NetInProject mNets inverse toOne mNetClass ;
  property String mNetClassName default "Default" ;
  property NSColor mNetClassColor default blue ;

  property Int mNetWidth default 45_720 ; // 20 mils
  property Int mNetWidthUnit default 2_286 ; // mil

  property Int mViaHoleDiameter default 45_720 ; // 20 mils
  property Int mViaHoleDiameterUnit default 2_286 ; // mil

  property Int mViaPadDiameter default 91_440 ; // 40 mils
  property Int mViaPadDiameterUnit default 2_286 ; // mil

  transient Bool canRemove dependsFrom self.mNets.count ;
  transient String netUsage dependsFrom self.mNets.count ;
  transient String netWidth dependsFrom self.mNetWidth, self.mNetWidthUnit ;
  transient String viaHoleDiameter dependsFrom self.mViaHoleDiameter, self.mViaHoleDiameterUnit ;
  transient String viaPadDiameter dependsFrom self.mViaPadDiameter, self.mViaPadDiameterUnit ;
  
  transient NetInfoArray netsDescription dependsFrom
    self.mNets.all.pinNames,
    self.mNets.all.mNetName,
//    self.mNets.all.labelNames,
    self.mNetClassName ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Net
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity NetInProject {
  property String mNetName default "" ;
  toOne NetClassInProject mNetClass inverse toMany mNets ;

  toMany PointInSchematic mPoints inverse toOne mNet ;
  
  transient StringArray pinNames dependsFrom self.mPoints.all.mSymbolPinName ;
  
//  transient StringArray labelNames dependsFrom self.mPoints.all.labelNames ;
  
  transient NSColor wireColor dependsFrom self.mNetClass.one.mNetClassColor ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Component Symbol
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity ComponentSymbolInProject : SchematicObject {
  toOne ComponentInProject mComponent inverse toMany mSymbols ;
  property proxy String componentValueProxy : mComponent.mComponentValue ;

  toMany PointInSchematic mPoints inverse toOne mSymbol ;

  property Int mCenterX default 0 ;
  property Int mCenterY default 0 ;
  property QuadrantRotation mRotation default rotation0 ;
  property Bool mMirror default no ;

  property String mSymbolInstanceName default "" ;
  property String mSymbolTypeName default "" ;

  property Int mDisplayComponentNameOffsetX default 0 ;
  property Int mDisplayComponentNameOffsetY default 457_200 ; // 200 mils

  property Bool mDisplayComponentValue default yes ;
  property Int mDisplayComponentValueOffsetX default 0 ;
  property Int mDisplayComponentValueOffsetY default -457_200 ; // -200 mils

  transient String componentName dependsFrom self.mComponent.one.componentName ;
  transient String deviceName dependsFrom self.mComponent.one.deviceName ;

  transient ComponentSymbolInfo symbolInfo dependsFrom
    self.mRotation,
    self.mMirror,
    self.componentName,
    self.mComponent.one.mComponentValue,
    self.mComponent.one.deviceSymbolDictionary,
    self.mSymbolInstanceName,
    self.mSymbolTypeName,
    self.mCenterX,
    self.mCenterY,
    prefs.pinNameFont
  ;

  transient Bool symbolInSchematic dependsFrom super.SchematicObject.isPlacedInSchematic ;

  override transient EBShape objectDisplay dependsFrom
    prefs.pinNameFont,
    self.mDisplayComponentNameOffsetX,
    self.mDisplayComponentNameOffsetY,
    self.mDisplayComponentValue,
    self.mDisplayComponentValueOffsetX,
    self.mDisplayComponentValueOffsetY,
    self.symbolInfo,
    prefs.symbolColorForSchematic,
    self.mSymbolInstanceName,
    self.mSymbolTypeName
  ;

  override transient EBShape selectionDisplay dependsFrom
    prefs.pinNameFont,
    self.mDisplayComponentNameOffsetX,
    self.mDisplayComponentNameOffsetY,
    self.mDisplayComponentValue,
    self.mDisplayComponentValueOffsetX,
    self.mDisplayComponentValueOffsetY,
    self.symbolInfo
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   Sheet
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity SheetInProject {
  toOne ProjectRoot mRoot inverse toMany mSheets ;
  toMany SchematicObject mObjects inverse toOne mSheet ;
  toMany PointInSchematic mPoints ;

  property String mSheetTitle default "" ;
  
  transient CanariIssueArray issues dependsFrom self.mPoints.all.status ;

  transient EBShape connectedPoints dependsFrom self.mPoints.all.connectedPoints ;
  
  transient Int connexionWarnings dependsFrom self.issues ;
  
  transient Int connexionErrors dependsFrom self.issues ;
  
  transient SchematicSheetDescriptor sheetDescriptor dependsFrom self.mRoot.one.mSchematicSheetOrientation ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   SchematicObject
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

abstract graphic entity SchematicObject {
  toOne SheetInProject mSheet inverse toMany mObjects ;

  transient Bool isPlacedInSchematic dependsFrom self.mSheet.none ;
  
  abstract transient CanariIssueArray issues ;
  
  abstract transient CanariPointArray connectedPoints ;
  
 // transient SchematicSheetDescriptor sheetDescriptor dependsFrom self.mSheet.one.sheetDescriptor ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CommentInSchematic
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity CommentInSchematic : SchematicObject {
  property String mComment default "" ;
  property Int mX default 0 ;
  property Int mY default 0 ;
  
  override transient EBShape objectDisplay dependsFrom
    self.mComment,
    self.mX,
    self.mY
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mComment,
    self.mX,
    self.mY
  ;

}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   PointInSchematic
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity PointInSchematic {
  toOne ComponentSymbolInProject mSymbol inverse toMany mPoints ;
  property String mSymbolPinName default "" ; // Used only if mSymbol is not nil

  toOne NetInProject mNet inverse toMany mPoints ;

  toOne NCInSchematic mNC inverse toOne mPoint ;

  toMany LabelInSchematic mLabels inverse toOne mPoint ;

  property Int mX default 0 ; // Used only if mSymbol is nil
  property Int mY default 0 ; // Used only if mSymbol is nil 

  toMany WireInSchematic mWiresP1s inverse toOne mP1 ;
  toMany WireInSchematic mWiresP2s inverse toOne mP2 ;
  
  transient CanariPoint location dependsFrom
    self.mX, self.mY, self.mSymbolPinName,
    self.mSymbol.one.symbolInfo,
    self.mSymbol.one.mSymbolInstanceName ;

  transient String netName dependsFrom self.mNet.one.mNetName ;

//  transient StringArray labelNames dependsFrom self.mLabels.count, self.location ;

  transient Bool canMove dependsFrom self.mSymbol.none ;

  transient Bool isConnected dependsFrom
    self.mNC.none,
    self.mSymbol.none,
    self.mWiresP1s.count,
    self.mWiresP2s.count,
    self.mLabels.count
  ;

  transient SchematicPointStatus status dependsFrom self.location, self.isConnected ;
  
  transient CanariPointArray connectedPoints dependsFrom self.location, self.isConnected ;

  transient NSColor wireColor dependsFrom self.mNet.one.wireColor ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   NCInSchematic
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity NCInSchematic : SchematicObject {
  toOne PointInSchematic mPoint inverse toOne mNC ;

  property QuadrantRotation mOrientation default rotation0 ;

  override transient EBShape objectDisplay dependsFrom
    self.mPoint.one.location,
    self.mOrientation,
    prefs.pinNameFont
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mPoint.one.location,
    self.mOrientation,
    prefs.pinNameFont
  ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   WireInSchematic
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity WireInSchematic : SchematicObject {

  toOne PointInSchematic mP1 inverse toMany mWiresP1s ;
  toOne PointInSchematic mP2 inverse toMany mWiresP2s ;  

  override transient EBShape objectDisplay dependsFrom
    self.mP1.one.wireColor,
    prefs.symbolDrawingWidthMultipliedByTen,
    self.mP1.one.location,
    self.mP2.one.location
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mP1.one.location,
    self.mP1.one.canMove,
    self.mP2.one.location,
    self.mP2.one.canMove
  ;
  
  transient String netName dependsFrom self.mP1.one.netName ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   LabelInSchematic
//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

graphic entity LabelInSchematic : SchematicObject {
  toOne PointInSchematic mPoint inverse toMany mLabels ;

  property QuadrantRotation mOrientation default rotation0 ;
 
  transient CanariPoint location dependsFrom self.mPoint.one.location ;

  override transient EBShape objectDisplay dependsFrom
    prefs.symbolColorForSchematic,
    prefs.symbolDrawingWidthMultipliedByTen,
    self.mPoint.one.location,
    self.netName,
    prefs.pinNameFont,
    self.mOrientation
  ;

  override transient EBShape selectionDisplay dependsFrom
    self.mPoint.one.location,
    self.netName,
    prefs.pinNameFont,
    self.mOrientation
  ;

  transient String netName dependsFrom self.mPoint.one.netName ;
}

//———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
