//----------------------------------------------------------------------------------------------------------------------
//     P A C K A G E    D O C U M E N T
//----------------------------------------------------------------------------------------------------------------------

autoLayoutDocument AutoLayoutPackageDocument : AutoLayoutPackageDocumentSuperClass root PackageRoot stackView mDocumentMainView {

//----------------------------------------------------------------------------------------------------------------------
//   TOOL BAR
//----------------------------------------------------------------------------------------------------------------------

//  toolbarItem "Page" : SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no) {
//    addPage (title: "Model Image", pageView: stackView mModelImagePage)
//    addPage (title: "Package", pageView: stackView mPackagePage)
//    addPage (title: "Program", pageView: stackView mProgramPage)
//    addPage (title: "Infos", pageView: stackView mInfosPage)
//    $selectedPage root.selectedPageIndex
//  }
//
//  toolbarItem "Signature" : SignatureField { $signature signature }
//  
//  toolbarItem "Version" : VersionField { $version version $versionShouldChange versionShouldChange }
//
//  toolbarItem space ;
// 
//  toolbarItem "Status" : ImageObserverView (small: no) { $image self.statusImage $tooltip self.statusMessage }

//----------------------------------------------------------------------------------------------------------------------
//   MAIN VIEW
//----------------------------------------------------------------------------------------------------------------------
 
  stackView mPageMasterView vStack { }
 
  stackView mDocumentMainView vStack set (spacing: 0) {
    hStack set (margins: 8) {
      vStack {
        SegmentedControlWithPages (documentView: stackView mPageMasterView, equalWidth: no, small: no) {
          addPage (title: "Model Image", pageView: stackView mModelImagePage)
          addPage (title: "Package", pageView: stackView mPackagePage)
          addPage (title: "Program", pageView: stackView mProgramPage)
          addPage (title: "Infos", pageView: stackView mInfosPage)
          $selectedPage root.selectedPageIndex
        }
        hStack { space StaticLabel (title: "Page", bold: no, small: yes) space }
      }
      vStack {
        SignatureField { $signature signature }
        StaticLabel (title: "Signature", bold: no, small: yes) { setCenterAlignment ()  makeWidthExpandable () }
      }
      vStack {
        VersionField { $version version $versionShouldChange versionShouldChange }
        StaticLabel (title: "Version", bold: no, small: yes) { setCenterAlignment () makeWidthExpandable () }
      }
      space
      vStack {
        hStack { space ImageObserverView (small: no) { $image self.statusImage $tooltip self.statusMessage } space }
        StaticLabel (title: "Status", bold: no, small: yes) {  setCenterAlignment () }
      }
    }
    separator
    stackViewRef mPageMasterView
  }

  transient NSImage statusImage dependsFrom root.issues ;
  transient String statusMessage dependsFrom root.issues ;
  transient MetadataStatus metadataStatus dependsFrom root.issues ;

//----------------------------------------------------------------------------------------------------------------------
//   PAGE    MODEL IMAGE
//----------------------------------------------------------------------------------------------------------------------
  
  action lockImagePointsAction ;
  action loadModelImageFromPasteboardAction ;
  action loadDIL16ModelImageFromResourcesAction ;
  action removeModelImageAction ;
  action resetModelImagePointsAction ;
  arrayController #mModelImageObjectsController : root.mModelImageObjects ;

  stackView mModelImagePage hStack set (spacing: 0) {
    vStack {
      TwoColumnsGridView {
        set (width: 250) 
        set (leftMargin: 20) set (rightMargin: 20) set (topMargin: 8)
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Grid Style", bold: no, small: yes),
          right: EnumPopUpButton (titles: enum GridStyle.popupTitles) { $selectedIndex root.mModelImagePageGridStyle}
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Grid Display", bold: no, small: yes),
          right:
            TaggedPopUpButton {
              add (title: "1 Step", withTag: 1)
              add (title: "2 Steps", withTag: 2)
              add (title: "5 Steps", withTag: 5)
              add (title: "8 Steps", withTag: 8)
              add (title: "10 Steps", withTag: 10)
              add (title: "12 Steps", withTag: 12)
              add (title: "15 Steps", withTag: 15)
              add (title: "20 Steps", withTag: 20)
              add (title: "25 Steps", withTag: 25)
              add (title: "50 Steps", withTag: 50)
              add (title: "100 Steps", withTag: 100)
              add (title: "200 Steps", withTag: 200)
              $selectedTag root.mModelImagePageGridDisplayFactor
            }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Grid Step", bold: no, small: yes),
          right: CanariDimensionAndPopUp { $dimensionAndUnit root.mModelImagePageGridStep, root.mModelImagePageGridStepUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Flip", bold: no, small: yes),
          right: Switch (title: "Horizontal", small: yes) { $value root.mModelImagePageHorizontalFlip }
        )
        addFirstBaseLineAligned (
          left: FlexibleSpace,
          right: Switch (title: "Vertical", small: yes) { $value root.mModelImagePageVerticalFlip }
        )
      }
      separator
      TwoColumnsGridView {
        set (leftMargin: 20) set (rightMargin: 20)
        addFirstBaseLineAligned (
          left: StaticLabels (left: "Placard", right: "X", bold: no, small: yes),
          right: CanariUnitPopUpButton (small: yes) { $unit root.mModelImagePageXPlacardUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Y", bold: no, small: yes),
          right: CanariUnitPopUpButton (small: yes) { $unit root.mModelImagePageYPlacardUnit }
        )
      }
      separator
      TwoColumnsGridView {
        set (leftMargin: 20) set (rightMargin: 20)
        addFirstBaseLineAligned (
          left: PullDownButton (title: "Action", small: yes) {
            add (item: menuItem "Paste Model Image" $run loadModelImageFromPasteboardAction $enabled !root.hasModelImage)
            add (item: menuItem "Load DIL16 Embedded Model Image" $run loadDIL16ModelImageFromResourcesAction $enabled !root.hasModelImage)
            add (item: menuItem "Remove Model Image" $run removeModelImageAction $enabled root.hasModelImage)
            add (item: menuItem "Reset Green and Brown Points" $run resetModelImagePointsAction $enabled root.hasModelImage)
          },
          right: Label (small: yes) { $title root.modelImageSizeString }
        )
        add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $hidden !root.hasModelImage $setter6
           root.mDimensionUnitFirstModelPointX, root.mDimensionUnitFirstModelPointY,
           root.mDimensionUnitSecondModelPointDx, root.mDimensionUnitSecondModelPointDy,
           root.mModelImageSecondPointXUnit, root.mModelImageSecondPointYUnit
          }
        )
        addFirstBaseLineAligned (
          left: StaticLabels (left: "Green", right: "X", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.mModelImageFirstPointX, root.mDimensionUnitFirstModelPointX }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Y", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.mModelImageFirstPointY, root.mDimensionUnitFirstModelPointY }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "∆X", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.mModelImageSecondPointDx, root.mDimensionUnitSecondModelPointDx }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "∆Y", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.mModelImageSecondPointDy, root.mDimensionUnitSecondModelPointDy }
        )
        addFirstBaseLineAligned (
          left: StaticLabels (left: "Brown", right: "X", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariObservedDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.secondPointX, root.mModelImageSecondPointXUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Y", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: CanariObservedDimensionAndPopUp { $hidden !root.hasModelImage $dimensionAndUnit root.secondPointY, root.mModelImageSecondPointYUnit }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "PointSize", bold: no, small: yes) { $hidden !root.hasModelImage },
          right: LinearSlider (min:1, max:61, ticks: 19) {
            $intValue root.mModelPointsCircleRadius (sendContinously : yes)
            $hidden !root.hasModelImage
  //          $enabled root.hasModelImage
          }
        )
        add (single:
          hStack {
            Button (title: "Lock Points to Model Image", small: yes) {
              $enabled !root.mPointsAreLocked & root.hasModelImage
              $run lockImagePointsAction
              $hidden !root.hasModelImage
            }
            space
            ImageObserverView (small: yes) { $hidden !root.hasModelImage $image root.lockImageView }
          }
        )
        flexibleSpace ()
      }
    }
    separator
    GraphicView (minZoom: 10, maxZoom: 4000) {
      $backgroundImageData root.mModelImageData
      $underObjectsDisplay root.backgroundImagePageBackgroundDisplay
      $horizontalFlip root.mModelImagePageHorizontalFlip
      $verticalFlip root.mModelImagePageVerticalFlip
      $graphicController #mModelImageObjectsController
      $mouseGrid root.mModelImagePageGridStep
      $gridStep root.mModelImagePageGridStep
      $arrowKeyMagnitude root.mModelImagePageGridStep
      $gridStyle root.mModelImagePageGridStyle
      $gridDisplayFactor root.mModelImagePageGridDisplayFactor
      $gridLineColor prefs.lineColorOfPackageGrid
      $gridCrossColor prefs.crossColorOfPackageGrid
      $zoom root.mModelImagePageZoom
      $backColor prefs.packageBackgroundColor
      $xPlacardUnit root.mModelImagePageXPlacardUnit
      $yPlacardUnit root.mModelImagePageYPlacardUnit
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   PAGE   PACKAGE
//----------------------------------------------------------------------------------------------------------------------

  arrayController #mPackageObjectsController : root.packageObjects ;
  transient NSImage addSegmentButtonImage dependsFrom prefs.packageColor ;
  transient NSImage addBezierButtonImage dependsFrom prefs.packageColor ;
  transient NSImage addOvalButtonImage dependsFrom prefs.packageColor ;
  transient NSImage addArcButtonImage dependsFrom prefs.packageColor ;
  transient NSImage addMasterPadButtonImage dependsFrom prefs.frontSidePadColor ;
  transient NSImage addSlavePadButtonImage dependsFrom prefs.frontSidePadColor ;
  transient NSImage addGuideButtonImage dependsFrom prefs.packageGuideColor ;
  transient NSImage addDimensionButtonImage dependsFrom prefs.packageDimensionColor ;
  transient NSImage addZoneButtonImage dependsFrom prefs.padZoneColor ;
  stackView mPackagePageInspectorMasterView : vStack ;
  
  stackView mPackagePage hStack set (margins: 0) set (spacing: 0) {
    vStack set (width: 250) {
      vStack set (leftMargin: 20) set (rightMargin: 20) set (topMargin: 8) set (spacing: 12) {
        hStack set (spacing: 0) {
          DragSourceButton (tooltip: "Add Segment") [configurator addPackageSegment] { $image self.addSegmentButtonImage }
          space
          DragSourceButton (tooltip: "Add Bezier") [configurator addPackageBezier] { $image self.addBezierButtonImage }
          space
          DragSourceButton (tooltip: "Add Oval") [configurator addPackageOval] { $image self.addOvalButtonImage }
          space
          DragSourceButton (tooltip: "Add Arc") [configurator addPackageArc] { $image self.addArcButtonImage }
          space
          DragSourceButton (tooltip: "Add Master Pad") [configurator addPackageMasterPad] { $image self.addMasterPadButtonImage }
          space
          DragSourceButton (tooltip: "Add Slave Pad") [configurator addPackageSlavePad] { $image self.addSlavePadButtonImage $enabled root.packagePads.count > 0 }
          space
          DragSourceButton (tooltip: "Add Zone") [configurator addPackageZone] { $image self.addZoneButtonImage }
          space
          DragSourceButton (tooltip: "Add Guide") [configurator addPackageGuide] { $image self.addGuideButtonImage }
          space
          DragSourceButton (tooltip: "Add Dimension") [configurator addPackageDimension] { $image self.addDimensionButtonImage }
        }
        TwoColumnsGridView {
          addCenterYAligned (
            left: StaticLabel (title: "Model Image Opacity", bold: no, small: yes),
            right: LinearSlider (min:0, max:1, ticks: 11) {
              $doubleValue root.mModelImageOpacity (sendContinously:yes)
              $enabled root.hasModelImage
            }
          )
          addFirstBaseLineAligned (
            left: StaticLabel (title: "Auto Numbering", bold: no, small: yes),
            right: EnumPopUpButton (titles: enum PadNumbering.popupTitles) {$selectedIndex root.padNumbering}
          ) 
          addFirstBaseLineAligned (
            left: space,
            right: hStack {
               StaticLabel (title: "From", bold: no, small: yes) { $hidden !root.counterClockNumbering}
               IntField (width: 45) {
                 set (min: 0)
                 set (max: 360)
                 set (format: "##0°")
                 $value root.counterClockNumberingStartAngle (sendContinously : yes)
                 $hidden !root.counterClockNumbering
               }
            }
          ) 
        }
      }
      separator
      vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (spacing: 12) {
       SegmentedControlWithPages (documentView: stackView mPackagePageInspectorMasterView, equalWidth: yes, small: yes)
          [configurator packagePageSegmentedControl] {
          makeWidthExpandable ()
          addPage (title: "", pageView: stackView mSelectedObjectsInspectorView)
          addPage (title: "", pageView: stackView mGridZoomInspectorView)
          addPage (title: "", pageView: stackView mDisplayInspectorView)
          addPage (title: "", pageView: stackView mIssuesInspectorView)
          $selectedPage root.selectedInspector
          $segmentImage root.segmentedControlSegmentIssueImage (segmentIndex : 3)
          $segmentTitle root.segmentedControlSegmentIssueString (segmentIndex : 3)
        }
        view mPackagePageInspectorMasterView
      }
    }
    separator
    GraphicView (minZoom: 10, maxZoom: 4000) [outlet mPackageGraphicView configurator packageGraphicView]{
      $foregroundImageData root.mModelImageData
      $foregroundImageOpacity root.mModelImageOpacity
      $horizontalFlip root.horizontalFlip
      $verticalFlip root.verticalFlip
      $graphicController #mPackageObjectsController
      $overObjectsDisplay root.padNumberDisplay
      $mouseGrid root.gridStep
      $gridStep root.gridStep
      $arrowKeyMagnitude root.gridStep
      $shiftArrowKeyMagnitude root.gridStepMultipliedByDisplayFactor
      $gridStyle root.gridStyle
      $gridDisplayFactor root.gridDisplayFactor
      $gridLineColor prefs.lineColorOfPackageGrid
      $gridCrossColor prefs.crossColorOfPackageGrid
      $zoom root.zoom
      $backColor prefs.packageBackgroundColor
      $xPlacardUnit root.xPlacardUnit
      $yPlacardUnit root.yPlacardUnit
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   Issues
//----------------------------------------------------------------------------------------------------------------------

  stackView mIssuesInspectorView vStack {
    hStack { space Label (small: yes) { $title self.statusMessage} space }
    CanariIssueTableView [outlet mPackageIssueTableView] { $issues root.issues }
  }

  linker issueTableViewToGraphicView (mPackageIssueTableView, mPackageGraphicView)

//----------------------------------------------------------------------------------------------------------------------
//   Object inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mSelectedObjectsInspectorView vStack {
    ObjectInspectorView {
      addObjectInspector (forEntity: entity PackageSegment, inspectorView: stackView mSegmentInspectorView)
      addObjectInspector (forEntity: entity PackageBezier, inspectorView: stackView mBezierCurveInspectorView)
      addObjectInspector (forEntity: entity PackageOval, inspectorView: stackView mOvalInspectorView)
      addObjectInspector (forEntity: entity PackageArc, inspectorView: stackView mArcInspectorView)
      addObjectInspector (forEntity: entity PackagePad, inspectorView: stackView mMasterPadInspectorView)
      addObjectInspector (forEntity: entity PackageSlavePad, inspectorView: stackView mSlavePadInspectorView)
      addObjectInspector (forEntity: entity PackageGuide, inspectorView: stackView mGuideInspectorView)
      addObjectInspector (forEntity: entity PackageDimension, inspectorView: stackView mDimensionInspectorView)
      addObjectInspector (forEntity: entity PackageZone, inspectorView: stackView mZoneInspectorView)
      $graphicController #mPackageObjectsController
    }
    space
  }

//--- Segment inspector
  selectionController PackageSegment #mPackageSegmentSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mSegmentInspectorView vStack {
    hStack { space StaticLabel (title: "Segment inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter5
         #mPackageSegmentSelectionController.x1Unit, #mPackageSegmentSelectionController.y1Unit,
         #mPackageSegmentSelectionController.x2Unit, #mPackageSegmentSelectionController.y2Unit,
         #mPackageSegmentSelectionController.lengthUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "First", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageSegmentSelectionController.x1, #mPackageSegmentSelectionController.x1Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageSegmentSelectionController.y1, #mPackageSegmentSelectionController.y1Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Second", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageSegmentSelectionController.x2, #mPackageSegmentSelectionController.x2Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageSegmentSelectionController.y2, #mPackageSegmentSelectionController.y2Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Length", bold: no, small: yes),
        right: CanariObservedDimensionAndPopUp {
          $dimensionAndUnit #mPackageSegmentSelectionController.lengthInCanariUnit, #mPackageSegmentSelectionController.lengthUnit
         }
      )
    }
  }

//--- Bezier Curve inspector
  selectionController PackageBezier #mPackageBezierCurveSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mBezierCurveInspectorView vStack {
    hStack { space StaticLabel (title: "Bezier Curve Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter8
         #mPackageBezierCurveSelectionController.x1Unit, #mPackageBezierCurveSelectionController.y1Unit,
         #mPackageBezierCurveSelectionController.x2Unit, #mPackageBezierCurveSelectionController.y2Unit,
         #mPackageBezierCurveSelectionController.cpx1Unit, #mPackageBezierCurveSelectionController.cpy1Unit,
         #mPackageBezierCurveSelectionController.cpx2Unit, #mPackageBezierCurveSelectionController.cpy2Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "First", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.x1, #mPackageBezierCurveSelectionController.x1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.y1, #mPackageBezierCurveSelectionController.y1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Second", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.x2, #mPackageBezierCurveSelectionController.x2Unit
         }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.y2, #mPackageBezierCurveSelectionController.y2Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "First Ctrl", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.cpx1, #mPackageBezierCurveSelectionController.cpx1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.cpy1, #mPackageBezierCurveSelectionController.cpy1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Second Ctrl", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.cpx2, #mPackageBezierCurveSelectionController.cpx2Unit
         }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageBezierCurveSelectionController.cpy2, #mPackageBezierCurveSelectionController.cpy2Unit
        }
      )
    }
  }

//------- Oval inspector
  selectionController PackageOval #mPackageOvalSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mOvalInspectorView vStack {
    hStack { space StaticLabel (title: "Oval Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter4
         #mPackageOvalSelectionController.xUnit, #mPackageOvalSelectionController.yUnit,
         #mPackageOvalSelectionController.widthUnit, #mPackageOvalSelectionController.heightUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Bottom Left", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageOvalSelectionController.x, #mPackageOvalSelectionController.xUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageOvalSelectionController.y, #mPackageOvalSelectionController.yUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Width", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageOvalSelectionController.width, #mPackageOvalSelectionController.widthUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Height", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageOvalSelectionController.height, #mPackageOvalSelectionController.heightUnit
        }
      )
    }
  }

//------- Arc inspector
  selectionController PackageArc #mPackageArcSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mArcInspectorView vStack {
    hStack { space StaticLabel (title: "Arc Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter5
         #mPackageArcSelectionController.xCenterUnit, #mPackageArcSelectionController.yCenterUnit,
         #mPackageArcSelectionController.radiusUnit, #mPackageArcSelectionController.startTangentUnit,
         #mPackageArcSelectionController.endTangentUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Center", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageArcSelectionController.xCenter, #mPackageArcSelectionController.xCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageArcSelectionController.yCenter, #mPackageArcSelectionController.yCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Radius", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageArcSelectionController.radius, #mPackageArcSelectionController.radiusUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Start Angle", bold: no, small: yes),
        right: CanariAngleFieldAndSlider {
          $angle #mPackageArcSelectionController.startAngle
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Angle", bold: no, small: yes),
        right: CanariAngleField {
          $angle #mPackageArcSelectionController.arcAngle
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Start Tangent", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageArcSelectionController.startTangent, #mPackageArcSelectionController.startTangentUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "End Tangent", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageArcSelectionController.endTangent, #mPackageArcSelectionController.endTangentUnit
        }
      )
    }
    hStack { Switch (title: "Path is Closed", small: yes) { $value #mPackageArcSelectionController.pathIsClosed } space }
  }


//------- Guide inspector
  selectionController PackageGuide #mPackageGuideSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mGuideInspectorView vStack {
    hStack { space StaticLabel (title: "Guide Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter4
         #mPackageGuideSelectionController.x1Unit, #mPackageGuideSelectionController.y1Unit,
         #mPackageGuideSelectionController.x2Unit, #mPackageGuideSelectionController.y2Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "First", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageGuideSelectionController.x1, #mPackageGuideSelectionController.x1Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageGuideSelectionController.y1, #mPackageGuideSelectionController.y1Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Second", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageGuideSelectionController.x2, #mPackageGuideSelectionController.x2Unit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit #mPackageGuideSelectionController.y2, #mPackageGuideSelectionController.y2Unit }
      )
    }
  }
//------- Dimension inspector
  selectionController PackageDimension #mPackageDimensionSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mDimensionInspectorView vStack {
    hStack { space StaticLabel (title: "Dimension Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter7
         #mPackageDimensionSelectionController.x1Unit, #mPackageDimensionSelectionController.y1Unit,
         #mPackageDimensionSelectionController.x2Unit, #mPackageDimensionSelectionController.y2Unit,
         #mPackageDimensionSelectionController.distanceUnit, #mPackageDimensionSelectionController.xDimensionUnit,
         #mPackageDimensionSelectionController.yDimensionUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "First", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.x1, #mPackageDimensionSelectionController.x1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.y1, #mPackageDimensionSelectionController.y1Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Second", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.x2, #mPackageDimensionSelectionController.x2Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.y2, #mPackageDimensionSelectionController.y2Unit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Distance", bold: no, small: yes),
        right: CanariObservedDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.distanceInCanariUnit, #mPackageDimensionSelectionController.distanceUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Label", right: "∆X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.xDimension, #mPackageDimensionSelectionController.xDimensionUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "∆Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageDimensionSelectionController.yDimension, #mPackageDimensionSelectionController.yDimensionUnit
        }
      )
    }
    Button (title: "Set Label at Mid X", small: yes) { makeWidthExpandable () $run setDimensionTextOriginAtMidXAction }
    Button (title: "Set Label at Mid Y", small: yes) { makeWidthExpandable () $run setDimensionTextOriginAtMidYAction }
  }


  action setDimensionTextOriginAtMidXAction ;
  action setDimensionTextOriginAtMidYAction ;

//------- Zone inspector
  selectionController PackageZone #mPackageZoneSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mZoneInspectorView vStack {
    hStack { space StaticLabel (title: "Zone Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter6
         #mPackageZoneSelectionController.xUnit, #mPackageZoneSelectionController.yUnit,
         #mPackageZoneSelectionController.widthUnit, #mPackageZoneSelectionController.heightUnit,
         #mPackageZoneSelectionController.xNameUnit, #mPackageZoneSelectionController.yNameUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Bottom Left", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.x, #mPackageZoneSelectionController.xUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.y, #mPackageZoneSelectionController.yUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Width", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.width, #mPackageZoneSelectionController.widthUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Height", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.height, #mPackageZoneSelectionController.heightUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Label", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.xName, #mPackageZoneSelectionController.xNameUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageZoneSelectionController.yName, #mPackageZoneSelectionController.yNameUnit
        }
      )
      addSeparator ()
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Name", bold: no, small: yes),
        right: TextField (small: yes) {
          $value #mPackageZoneSelectionController.zoneName (sendContinously: yes)
        }
      )
      add (
        single: hStack {
          Switch (title: "Show Zone Name", small: yes) { $value #mPackageZoneSelectionController.displayZoneName }
          space
        }
      )
      addSeparator ()
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Auto Numbering", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum PadNumbering.popupTitles) {
          $selectedIndex #mPackageZoneSelectionController.zoneNumbering
        }
      )
      addSeparator ()
    }
    hStack {
      vStack {
        Button (title: "+", small: yes) { set (width: 32) $run addZoneForbiddenPadNumberAction }
        Button (title: "-", small: yes) {
          set (width: 32)
          $run removeZoneForbiddenPadNumberAction
          $enabled !#mPackageZoneSelectionController.emptyForbiddenPadArray
        }
        space
      }
      OneStringArrayTableView [outlet mZoneForbiddenPadNumberTableView] { $array #mPackageZoneSelectionController.forbiddenPadArray }
    }
  }

  action addZoneForbiddenPadNumberAction ;
  action removeZoneForbiddenPadNumberAction ;

//------- Pad inspector
  selectionController PackagePad #mPackagePadSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mMasterPadInspectorView vStack {
    hStack { space StaticLabel (title: "Master Pad Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter7
         #mPackagePadSelectionController.xCenterUnit, #mPackagePadSelectionController.yCenterUnit,
         #mPackagePadSelectionController.widthUnit, #mPackagePadSelectionController.heightUnit,
         #mPackagePadSelectionController.holeWidthUnit, #mPackagePadSelectionController.holeHeightUnit,
         #mPackagePadSelectionController.annularRingUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Center", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.xCenter, #mPackagePadSelectionController.xCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.yCenter, #mPackagePadSelectionController.yCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Width", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.width, #mPackagePadSelectionController.widthUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Height", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.height, #mPackagePadSelectionController.heightUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Shape", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum PadShape.popupTitles) {
          $selectedIndex #mPackagePadSelectionController.padShape
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Style", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum PadStyle.popupTitles) {
          $selectedIndex #mPackagePadSelectionController.padStyle
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Hole Width", bold: no, small: yes) { $hidden !#mPackagePadSelectionController.padIsTraversing },
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.holeWidth, #mPackagePadSelectionController.holeWidthUnit
          $hidden !#mPackagePadSelectionController.padIsTraversing
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Hole Height", bold: no, small: yes) { $hidden !#mPackagePadSelectionController.padIsTraversing },
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.holeHeight, #mPackagePadSelectionController.holeHeightUnit
          $hidden !#mPackagePadSelectionController.padIsTraversing
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Annular Ring", bold: no, small: yes) { $hidden !#mPackagePadSelectionController.padIsTraversing },
        right: CanariObservedDimensionAndPopUp {
          $dimensionAndUnit #mPackagePadSelectionController.annularRing, #mPackagePadSelectionController.annularRingUnit
          $hidden !#mPackagePadSelectionController.padIsTraversing
        }
      )
      addSeparator ()
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Zone", bold: no, small: yes),
        right: TextObserverField (small: yes) { $observedValue #mPackagePadSelectionController.zoneName }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Pad Number", bold: no, small: yes),
        right: IntObserverField (small: yes) { $observedValue #mPackagePadSelectionController.padNumber }
      )
      addSeparator ()
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Slave Pads", bold: no, small: yes),
        right: IntObserverField (small: yes) { $observedValue #mPackagePadSelectionController.slavePadCount }
      )
      add (
        single : CanariPadRenumberPullDownButton [configurator configurePadRenumberPullDownButton] {
          $currentNumber #mPackagePadSelectionController.padNumber
          $currentZoneName #mPackagePadSelectionController.zoneName
          $enabled (#mPackagePadSelectionController.noZone & root.freePadNumbering) | #mPackagePadSelectionController.zoneAllowsManualRenumbering
        } 
      )
    }
  }


//------- Slave Pad inspector
  selectionController PackageSlavePad #mPackageSlavePadSelectionController : #mPackageObjectsController.selectedArray ;

  stackView mSlavePadInspectorView vStack {
    hStack { space StaticLabel (title: "Slave Pad Inspector", bold: yes, small: yes) space }
    TwoColumnsGridView {
      add (single: CanariDimensionUnitSetterPullDownButton (small: yes) { $setter7
         #mPackageSlavePadSelectionController.xCenterUnit, #mPackageSlavePadSelectionController.yCenterUnit,
         #mPackageSlavePadSelectionController.widthUnit, #mPackageSlavePadSelectionController.heightUnit,
         #mPackageSlavePadSelectionController.holeWidthUnit, #mPackageSlavePadSelectionController.holeHeightUnit,
         #mPackageSlavePadSelectionController.annularRingUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Center", right: "X", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.xCenter, #mPackageSlavePadSelectionController.xCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.yCenter, #mPackageSlavePadSelectionController.yCenterUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Width", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.width, #mPackageSlavePadSelectionController.widthUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Height", bold: no, small: yes),
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.height, #mPackageSlavePadSelectionController.heightUnit
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Shape", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum PadShape.popupTitles) {
          $selectedIndex #mPackageSlavePadSelectionController.padShape
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Style", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum SlavePadStyle.popupTitles) {
          $selectedIndex #mPackageSlavePadSelectionController.padStyle
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Hole Width", bold: no, small: yes) { $hidden !#mPackageSlavePadSelectionController.padIsTraversing },
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.holeWidth, #mPackageSlavePadSelectionController.holeWidthUnit
          $hidden !#mPackageSlavePadSelectionController.padIsTraversing
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Hole Height", bold: no, small: yes) { $hidden !#mPackageSlavePadSelectionController.padIsTraversing },
        right: CanariDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.holeHeight, #mPackageSlavePadSelectionController.holeHeightUnit
          $hidden !#mPackageSlavePadSelectionController.padIsTraversing
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Annular Ring", bold: no, small: yes) { $hidden !#mPackageSlavePadSelectionController.padIsTraversing },
        right: CanariObservedDimensionAndPopUp {
          $dimensionAndUnit #mPackageSlavePadSelectionController.annularRing, #mPackageSlavePadSelectionController.annularRingUnit
          $hidden !#mPackageSlavePadSelectionController.padIsTraversing
        }
      )
      addSeparator ()
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Linked to Pad", bold: no, small: yes),
        right: CanariSlavePadAssignPopUpButton [configurator configureSlavePadAssignPopUpButton] {
          $masterPadName #mPackageSlavePadSelectionController.masterPadNameWithZoneName
          $masterPadObjectIndexArray root.masterPadObjectIndexArray
        }
      )
    }
  }

//----------------------------------------------------------------------------------------------------------------------
//   Zoom and flip inspector
//----------------------------------------------------------------------------------------------------------------------

  stackView mGridZoomInspectorView vStack {
    TwoColumnsGridView {
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Style", bold: no, small: yes),
        right: EnumPopUpButton (titles: enum GridStyle.popupTitles) { $selectedIndex root.gridStyle}
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Display", bold: no, small: yes),
        right:  TaggedPopUpButton {
          add (title: "1 Step", withTag: 1)
          add (title: "2 Steps", withTag: 2)
          add (title: "5 Steps", withTag: 5)
          add (title: "8 Steps", withTag: 8)
          add (title: "10 Steps", withTag: 10)
          $selectedTag root.gridDisplayFactor
        }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Grid Step", bold: no, small: yes),
        right: CanariDimensionAndPopUp { $dimensionAndUnit root.gridStep, root.gridStepUnit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Flip", bold: no, small: yes),
        right: Switch (title: "Horizontal", small: yes) { $value root.horizontalFlip }
      )
      addFirstBaseLineAligned (
        left: FlexibleSpace,
        right: Switch (title: "Vertical", small: yes) { $value root.verticalFlip }
      )
      addFirstBaseLineAligned (
        left: StaticLabels (left: "Placard", right: "X", bold: no, small: yes),
        right: CanariUnitPopUpButton (small: yes) { $unit root.xPlacardUnit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Y", bold: no, small: yes),
        right: CanariUnitPopUpButton(small: yes) { $unit root.yPlacardUnit }
      )
      addFirstBaseLineAligned (
        left: StaticLabel (title: "Knob Size", bold: no, small: yes),
        right: LinearSlider (min:7, max:41, ticks: 18) {
          $intValue root.knobSizeMultpliedByTen (sendContinously : yes)
        }
      )
    }
    space
  }

//--- Display inspector

  stackView mDisplayInspectorView vStack {
    hStack {
      space
      TwoColumnsGridView {
        addCenterYAligned (
          left: StaticLabel (title: "Background", bold: no, small: yes),
          right: hStack { ColorWell { $color prefs.packageBackgroundColor (sendContinously:no) } space }
        )
        addCenterYAligned (
          left: StaticLabel (title: "Cross Grid", bold: no, small: yes),
          right: hStack { ColorWell { $color prefs.crossColorOfPackageGrid (sendContinously:no) } space }
        )
        addCenterYAligned (
          left: StaticLabel (title: "Line Grid", bold: no, small: yes),
          right: hStack { ColorWell { $color prefs.lineColorOfPackageGrid (sendContinously:no) } space }
        )
        addCenterYAligned (
          left: StaticLabel (title: "Package", bold: no, small: yes),
          right: hStack { ColorWell { $color prefs.packageColor (sendContinously:no) } space }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Line Width", bold: no, small: yes),
          right: TaggedPopUpButton {
            add (title: "0.5 Point", withTag: 5)
            add (title: "1.0 Point", withTag: 10)
            add (title: "1.5 Point", withTag: 15)
            add (title: "2.0 Points", withTag: 20)
            add (title: "2.5 Points", withTag: 25)
            $selectedTag prefs.packageDrawingWidthMultipliedByTen
          }
        )
        addCenterYAligned (
          left: Switch (title: "Pad Numbering", small: yes) { $value prefs.showPadNumber },
          right: hStack { ColorWell { $color prefs.padNumberColor (sendContinously:no) } space }
        )
        addFirstBaseLineAligned (
          left: StaticLabel (title: "Pad Font", bold: no, small: yes),
          right: FontButton (small: yes) {$fontValue prefs.padNumberFont}
        )
        addCenterYAligned (
          left: Switch (title: "Top Side Pads", small: yes) { $value prefs.displayPackageFrontSidePads },
          right: hStack { ColorWell { $color prefs.frontSidePadColor (sendContinously:no) } space }
        )
        addCenterYAligned (
          left: Switch (title: "Back Side Pads", small: yes) { $value prefs.displayPackageFrontSidePads },
          right: hStack { ColorWell { $color prefs.backSidePadColor (sendContinously:no) } space }
        )
      }
      space
    }
    space
  }

//----------------------------------------------------------------------------------------------------------------------
//   PAGE   PROGRAM
//----------------------------------------------------------------------------------------------------------------------

  stackView mProgramPage vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (topMargin: 8) {
    hStack {
      Button (title: "Load from Design", small: yes) { $run loadFromDesignAction }
      Button (title: "Run", small: yes) { $run runProgramAction }
      Button (title: "Clear Error", small: yes) { $run clearProgramErrorAction  }
      Label (small: yes) [outlet mProgramErrorTextField] { setRedTextColor () }
      space
      HelpButton (small: yes) { $run programHelpAction }
    }
    TextView (editable: yes) [outlet mProgramTextView] { $value root.program }
  }

  action programHelpAction ;
  action loadFromDesignAction ;
  action runProgramAction ;
  action clearProgramErrorAction ;

//----------------------------------------------------------------------------------------------------------------------
//   PAGE   INFOS
//----------------------------------------------------------------------------------------------------------------------

  stackView mInfosPage vStack set (leftMargin: 20) set (rightMargin: 20) set (bottomMargin: 20) set (topMargin: 8) {
    hStack {
      Button (title: "Reset Version and Signature", small: yes) { $run resetVersionAction }
      space
    }
    hStack {
      vStack { StaticLabel (title: "Comments", bold: yes, small: no) space }
      TextView (editable: yes) { $value root.comments }
    }
  }

  action resetVersionAction ;
}

//----------------------------------------------------------------------------------------------------------------------
