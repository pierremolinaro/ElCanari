#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
#     M E R G E R    D O C U M E N T
#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum PadShape {
  rectangular, round
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum PadSide {
  traversing, front, back
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

transient property class MergerViaShapeArray ;
transient property class MergerSegmentArray ;
transient property class MergerBoardLimits ;
transient property class MergerPadArray ;
transient property class MergerHoleArray ;

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extern outlet class CanariBoardModelView ;
binding CanariBoardModelView $size : transient Int, transient Int ;
binding CanariBoardModelView $zoom : property Int ;
binding CanariBoardModelView $horizontalFlip : transient Bool ;
binding CanariBoardModelView $verticalFlip : transient Bool ;
binding CanariBoardModelView $vias : transient MergerViaShapeArray ;
binding CanariBoardModelView $frontComponentNames : transient MergerSegmentArray ;
binding CanariBoardModelView $backComponentNames : transient MergerSegmentArray ;
binding CanariBoardModelView $frontTracks : transient MergerSegmentArray ;
binding CanariBoardModelView $backTracks : transient MergerSegmentArray ;
binding CanariBoardModelView $frontComponentValues : transient MergerSegmentArray ;
binding CanariBoardModelView $backComponentValues : transient MergerSegmentArray ;
binding CanariBoardModelView $frontPackages : transient MergerSegmentArray ;
binding CanariBoardModelView $backPackages : transient MergerSegmentArray ;
binding CanariBoardModelView $boardLimits : transient MergerBoardLimits ;
binding CanariBoardModelView $frontPads : transient MergerPadArray ;
binding CanariBoardModelView $backPads : transient MergerPadArray ;
binding CanariBoardModelView $holes : transient MergerHoleArray ;
binding CanariBoardModelView $frontLegendTexts : transient MergerSegmentArray ;
binding CanariBoardModelView $frontLayoutTexts : transient MergerSegmentArray ;
binding CanariBoardModelView $backLegendTexts : transient MergerSegmentArray ;
binding CanariBoardModelView $backLayoutTexts : transient MergerSegmentArray ;

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelPadEntity {
  toOne BoardModelEntity myBoard inverse toMany pads ;

#  property String name default "" ;
  property Int x default 0 ;
  property Int y default 0 ;
  property Int width default 0 ;
  property Int height default 0 ;
  property Int holeDiameter default 0 ;
  property PadShape shape default rectangular ;
  property PadSide side default traversing ;
  property Int rotation default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontComponentNameEntity {
  toOne BoardModelEntity myBoard inverse toMany frontComponentNames ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontLegendTextEntity {
  toOne BoardModelEntity myBoard inverse toMany frontLegendTexts ;
  
  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontLayoutTextEntity {
  toOne BoardModelEntity myBoard inverse toMany frontLayoutTexts ;
  
  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackLegendTextEntity {
  toOne BoardModelEntity myBoard inverse toMany backLegendTexts ;
  
  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackLayoutTextEntity {
  toOne BoardModelEntity myBoard inverse toMany backLayoutTexts ;
  
  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackComponentNameEntity {
  toOne BoardModelEntity myBoard inverse toMany backComponentNames ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontComponentValueEntity {
  toOne BoardModelEntity myBoard inverse toMany frontComponentValues ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackComponentValueEntity {
  toOne BoardModelEntity myBoard inverse toMany backComponentValues ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelViaEntity {
  toOne BoardModelEntity myModel inverse toMany vias ;

  property Int x default 0 ;
  property Int y default 0 ;
  property Int holeDiameter default 0 ;
  property Int padDiameter default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontTrackSegmentEntity {
  toOne BoardModelEntity myModel inverse toMany frontTracks ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelFrontPackageEntity {
  toOne BoardModelEntity myModel inverse toMany frontPackages ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackPackageEntity {
  toOne BoardModelEntity myModel inverse toMany backPackages ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelBackTrackSegmentEntity {
  toOne BoardModelEntity myModel inverse toMany backTracks ;

  property Int x1 default 0 ;
  property Int y1 default 0 ;
  property Int x2 default 0 ;
  property Int y2 default 0 ;
  property Int width default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity BoardModelEntity {
  toOne MergerRootEntity myArtwork inverse toMany boardModels ;
  
  property String artworkName default "" ;
  property String name default "" ;
  property Int boardWidth default 0 ;
  property Int boardWidthUnit default 0 ;
  property Int boardHeight default 0 ;
  property Int boardHeightUnit default 0 ;

  property Int zoom default 0 ; # 0 means "fit to window"

#--- Front Legend Texts
  cascade toMany BoardModelFrontLegendTextEntity frontLegendTexts inverse toOne myBoard ;

  transient MergerSegmentArray frontLegendTextsSegments dependsFrom
    self.frontLegendTexts.all.x1, self.frontLegendTexts.all.y1,
    self.frontLegendTexts.all.x2, self.frontLegendTexts.all.y2,
    self.frontLegendTexts.all.width
  ;

  transient MergerSegmentArray frontLegendTextsSegmentsForDisplay
    dependsFrom prefs.mergerDisplayFrontLegendTexts, self.frontLegendTextsSegments ;

#--- Front Layout Texts
  cascade toMany BoardModelFrontLayoutTextEntity frontLayoutTexts inverse toOne myBoard ;

  transient MergerSegmentArray frontLayoutTextsSegments dependsFrom
    self.frontLayoutTexts.all.x1, self.frontLayoutTexts.all.y1,
    self.frontLayoutTexts.all.x2, self.frontLayoutTexts.all.y2,
    self.frontLayoutTexts.all.width
  ;

  transient MergerSegmentArray frontLayoutTextsSegmentsForDisplay
    dependsFrom prefs.mergerDisplayFrontLayoutTexts, self.frontLayoutTextsSegments ;

#--- Back Legend Texts
  cascade toMany BoardModelBackLegendTextEntity backLegendTexts inverse toOne myBoard ;

  transient MergerSegmentArray backLegendTextsSegments dependsFrom
    self.backLegendTexts.all.x1, self.backLegendTexts.all.y1,
    self.backLegendTexts.all.x2, self.backLegendTexts.all.y2,
    self.backLegendTexts.all.width
  ;

  transient MergerSegmentArray backLegendTextsSegmentsForDisplay
    dependsFrom prefs.mergerDisplayBackLegendTexts, self.backLegendTextsSegments ;

#--- Back Layout Texts
  cascade toMany BoardModelBackLayoutTextEntity backLayoutTexts inverse toOne myBoard ;

  transient MergerSegmentArray backLayoutTextsSegments dependsFrom
    self.backLayoutTexts.all.x1, self.backLayoutTexts.all.y1,
    self.backLayoutTexts.all.x2, self.backLayoutTexts.all.y2,
    self.backLayoutTexts.all.width
  ;

  transient MergerSegmentArray backLayoutTextsSegmentsForDisplay
    dependsFrom prefs.mergerDisplayBackLayoutTexts, self.backLayoutTextsSegments ;

#--- Holes
  transient MergerHoleArray padsHoles
    dependsFrom self.pads.all.x, self.pads.all.y, self.pads.all.holeDiameter ;
 
  transient MergerHoleArray viasHoles
    dependsFrom self.vias.all.x, self.vias.all.y, self.vias.all.holeDiameter ;
 
  transient MergerHoleArray holes dependsFrom self.padsHoles, self.viasHoles ;
 
  transient MergerHoleArray holesForDisplay dependsFrom prefs.mergerDisplayHoles, self.holes ;
 
#--- Vias 
  cascade toMany BoardModelViaEntity vias inverse toOne myModel ;

  copy transient Int viaCount : self.vias.count ;
  
  transient MergerViaShapeArray viaShapes
    dependsFrom self.vias.all.x, self.vias.all.y, self.vias.all.padDiameter ;
  
  transient MergerViaShapeArray viaShapesForDisplay dependsFrom prefs.mergerDisplayVias, self.viaShapes ;

#--- Pads
  cascade toMany BoardModelPadEntity pads inverse toOne myBoard ;

#--- Front pads
  transient MergerPadArray frontPads
    dependsFrom self.pads.all.x, self.pads.all.y, self.pads.all.width, self.pads.all.height,
                self.pads.all.holeDiameter, self.pads.all.shape, self.pads.all.side, self.pads.all.rotation ;

  transient MergerPadArray frontPadsForDisplay dependsFrom prefs.mergerDisplayFrontPads, self.frontPads ;

#--- Back pads
  transient MergerPadArray backPads
    dependsFrom self.pads.all.x, self.pads.all.y, self.pads.all.width, self.pads.all.height,
                self.pads.all.holeDiameter, self.pads.all.shape, self.pads.all.side, self.pads.all.rotation ;

  transient MergerPadArray backPadsForDisplay dependsFrom prefs.mergerDisplayBackPads, self.backPads ;

#--- Board limits
  property Int boardLimitWidth default 0 ;
  property Int boardLimitWidthUnit default 0 ;

  transient MergerBoardLimits boardLimits
    dependsFrom self.boardWidth, self.boardHeight, self.boardLimitWidth, prefs.mergerDisplayBoardLimits
  ;
 
#--- Back component names
  cascade toMany BoardModelBackComponentNameEntity backComponentNames inverse toOne myBoard ;

  transient MergerSegmentArray backComponentNameSegments dependsFrom
    self.backComponentNames.all.x1, self.backComponentNames.all.y1,
    self.backComponentNames.all.x2, self.backComponentNames.all.y2,
    self.backComponentNames.all.width
  ;

  transient Int backComponentNameSegmentsCount dependsFrom self.backComponentNameSegments ;
 
  transient MergerSegmentArray backComponentNameSegmentsForDisplay dependsFrom
     prefs.mergerDisplayBackComponentNames, self.backComponentNameSegments
  ;  
  
#--- Front component names
  cascade toMany BoardModelFrontComponentNameEntity frontComponentNames inverse toOne myBoard ;

  transient MergerSegmentArray frontComponentNameSegments dependsFrom
    self.frontComponentNames.all.x1, self.frontComponentNames.all.y1,
    self.frontComponentNames.all.x2, self.frontComponentNames.all.y2,
    self.frontComponentNames.all.width
  ;

  transient Int frontComponentNameSegmentsCount dependsFrom self.frontComponentNameSegments ;

  transient MergerSegmentArray frontComponentNameSegmentsForDisplay dependsFrom
     prefs.mergerDisplayFrontComponentNames, self.frontComponentNameSegments
  ;  

#--- Front component values
  cascade toMany BoardModelFrontComponentValueEntity frontComponentValues inverse toOne myBoard ;

  transient MergerSegmentArray frontComponentValueSegments dependsFrom
    self.frontComponentValues.all.x1, self.frontComponentValues.all.y1,
    self.frontComponentValues.all.x2, self.frontComponentValues.all.y2,
    self.frontComponentValues.all.width
  ;

  transient Int frontComponentValueSegmentsCount dependsFrom self.frontComponentValueSegments ;

  transient MergerSegmentArray frontComponentValuesForDisplay dependsFrom
     prefs.mergerDisplayFrontComponentValues, self.frontComponentValueSegments
  ;  

#--- Back component values
  cascade toMany BoardModelBackComponentValueEntity backComponentValues inverse toOne myBoard ;

  transient MergerSegmentArray backComponentValueSegments dependsFrom
    self.backComponentValues.all.x1, self.backComponentValues.all.y1,
    self.backComponentValues.all.x2, self.backComponentValues.all.y2,
    self.backComponentValues.all.width
  ;

  transient Int backComponentValueSegmentsCount dependsFrom self.backComponentValueSegments ;

  transient MergerSegmentArray backComponentValuesForDisplay dependsFrom
     prefs.mergerDisplayBackComponentValues, self.backComponentValueSegments
  ;  

#--- Back tracks
  cascade toMany BoardModelBackTrackSegmentEntity backTracks inverse toOne myModel ;

  transient MergerSegmentArray backTrackSegments dependsFrom
    self.backTracks.all.x1, self.backTracks.all.y1,
    self.backTracks.all.x2, self.backTracks.all.y2,
    self.backTracks.all.width
  ;

  transient Int backTracksSegmentsCount dependsFrom self.backTrackSegments ;

  transient MergerSegmentArray backTrackSegmentsForDisplay dependsFrom
     prefs.mergerDisplayBackLayoutTracks, self.backTrackSegments
  ;  

#--- Front tracks
  cascade toMany BoardModelFrontTrackSegmentEntity frontTracks inverse toOne myModel ;

  transient MergerSegmentArray frontTrackSegments dependsFrom
    self.frontTracks.all.x1, self.frontTracks.all.y1,
    self.frontTracks.all.x2, self.frontTracks.all.y2,
    self.frontTracks.all.width
  ;

  transient Int frontTracksSegmentsCount dependsFrom self.frontTrackSegments ;

  transient MergerSegmentArray frontTrackSegmentsForDisplay dependsFrom
     prefs.mergerDisplayFrontLayoutTracks, self.frontTrackSegments
  ;  

#--- Front packages
  cascade toMany BoardModelFrontPackageEntity frontPackages inverse toOne myModel ;

  transient MergerSegmentArray frontPackagesSegments dependsFrom
    self.frontPackages.all.x1, self.frontPackages.all.y1,
    self.frontPackages.all.x2, self.frontPackages.all.y2,
    self.frontPackages.all.width
  ;

  transient Int frontPackageSegmentsCount dependsFrom self.frontPackagesSegments ;

  transient MergerSegmentArray frontPackagesSegmentsForDisplay dependsFrom
     prefs.mergerDisplayFrontPackages, self.frontPackagesSegments
  ;  

#--- Back packages
  cascade toMany BoardModelBackPackageEntity backPackages inverse toOne myModel ;

  transient MergerSegmentArray backPackagesSegments dependsFrom
    self.backPackages.all.x1, self.backPackages.all.y1,
    self.backPackages.all.x2, self.backPackages.all.y2,
    self.backPackages.all.width
  ;

  transient Int backPackageSegmentsCount dependsFrom self.backPackagesSegments ;

  transient MergerSegmentArray backPackagesSegmentsForDisplay dependsFrom
     prefs.mergerDisplayBackPackages, self.backPackagesSegments
  ;  
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

entity MergerRootEntity {
  toMany BoardModelEntity boardModels inverse toOne myArtwork ;
  property Int selectedPageIndex default 0 ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

document PMMergerDocument root MergerRootEntity {
#--- Selected Page
  outlet CanariSegmentedControl mPageSegmentedControl $selectedPage root.selectedPageIndex ;

#--- Add board model
  action addBoardModelAction ;
  outlet EBButton addBoardModelButton $run self.addBoardModelAction ;

#--- Remove board model
  outlet EBButton removeBoardModelButton
    $run mBoardModelController.remove
    $enabled mBoardModelController.selectedArray.count > 0
  ;

#--- Model table view 
  outlet EBTableView mBoardModelTableView $tableValue mBoardModelController ;
  arrayController mBoardModelController {allowsEmptySelection:no, allowsMultipleSelection:no} root.boardModels {
     column "name" sort name EBTextField $value self.name {sendContinously:no}
  }
  selectionController mBoardModelSelection : mBoardModelController.selectedArray ;

#--- Board model name
  outlet EBTextObserverField mBoardModelNameTextField $valueObserver mBoardModelSelection.name ;

#--- Artwork model name
  outlet EBTextObserverField mArtworkNameTextField $valueObserver mBoardModelSelection.artworkName ;

#--- Model width display
  outlet EBPopUpButton mBoardWidthUnitPopUp $selectedTag mBoardModelSelection.boardWidthUnit ;
  outlet CanariDimensionTextField mBoardWidthTextField
     $dimensionAndUnit mBoardModelSelection.boardWidth, mBoardModelSelection.boardWidthUnit
  ;

#--- Model Height display
  outlet EBPopUpButton mBoardHeightUnitPopUp $selectedTag mBoardModelSelection.boardHeightUnit ;
  outlet CanariDimensionTextField mBoardHeightTextField
     $dimensionAndUnit mBoardModelSelection.boardHeight, mBoardModelSelection.boardHeightUnit
  ;

#--- Board model via count
  outlet EBIntObserverField mBoardModelViaCountTextField $valueObserver mBoardModelSelection.viaCount {autoFormatter : yes} ;

#--- Front packages segment count
  outlet EBIntObserverField mFrontPackagesCountTextField $valueObserver mBoardModelSelection.frontPackageSegmentsCount {autoFormatter:yes} ;

#--- Back packages segment count
  outlet EBIntObserverField mBackPackagesCountTextField $valueObserver mBoardModelSelection.backPackageSegmentsCount {autoFormatter:yes} ;

#--- Front track segment count
  outlet EBIntObserverField mFrontTrackSegmentCountTextField $valueObserver mBoardModelSelection.frontTracksSegmentsCount {autoFormatter:yes} ;

#--- Back track segment count
  outlet EBIntObserverField mBackTrackSegmentCountTextField $valueObserver mBoardModelSelection.backTracksSegmentsCount {autoFormatter:yes} ;

#--- Back component names segment count
  outlet EBIntObserverField mBackComponentNameSegmentCountTextField $valueObserver mBoardModelSelection.backComponentNameSegmentsCount {autoFormatter:yes} ;

#--- Front component names segment count
  outlet EBIntObserverField mFrontComponentNameSegmentCountTextField $valueObserver mBoardModelSelection.frontComponentNameSegmentsCount {autoFormatter:yes} ;

#--- Model view
  outlet CanariBoardModelView mBoardModelView
    $size mBoardModelSelection.boardWidth, mBoardModelSelection.boardHeight
    $zoom mBoardModelSelection.zoom
    $horizontalFlip prefs.mergerHorizontalFlip
    $verticalFlip prefs.mergerVerticalFlip
    $vias mBoardModelSelection.viaShapesForDisplay
    $frontComponentNames mBoardModelSelection.frontComponentNameSegmentsForDisplay
    $frontComponentValues mBoardModelSelection.frontComponentValuesForDisplay
    $backComponentNames mBoardModelSelection.backComponentNameSegmentsForDisplay
    $backComponentValues mBoardModelSelection.backComponentValuesForDisplay
    $frontTracks mBoardModelSelection.frontTrackSegmentsForDisplay
    $backTracks mBoardModelSelection.backTrackSegmentsForDisplay
    $frontPackages mBoardModelSelection.frontPackagesSegmentsForDisplay
    $backPackages mBoardModelSelection.backPackagesSegmentsForDisplay
    $boardLimits mBoardModelSelection.boardLimits
    $frontPads mBoardModelSelection.frontPadsForDisplay
    $backPads mBoardModelSelection.backPadsForDisplay
    $holes mBoardModelSelection.holesForDisplay
    $frontLegendTexts mBoardModelSelection.frontLegendTextsSegmentsForDisplay
    $frontLayoutTexts mBoardModelSelection.frontLayoutTextsSegmentsForDisplay
    $backLegendTexts mBoardModelSelection.backLegendTextsSegmentsForDisplay
    $backLayoutTexts mBoardModelSelection.backLayoutTextsSegmentsForDisplay
  ;

#--- Show Preferences for setting display
  action showPrefsForSettingMergerDisplayAction ;
  outlet EBButton showPrefsForSettingMergerDisplayButton $run self.showPrefsForSettingMergerDisplayAction ;
}

#———————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
