//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum BoardLimitShape : Int, EnumPropertyProtocol {
  case line = 0
  case bezier = 1


  //····················································································································

  init? (string : String) {
    switch string {
      case "line" : self = .line // 0
      case "bezier" : self = .bezier // 1
      case _ : return nil
    }
  }

  //····················································································································

  func descriptionForExplorer () -> String {
    switch self {
      case .line : return "line" // 0
      case .bezier : return "bezier" // 1
    }
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> BoardLimitShape? {
    if let v = BoardLimitShape (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> BoardLimitShape {
    var result = self
    let v : BoardLimitShape? = BoardLimitShape (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  ValuePropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  static func convertFromNSObject (object : NSObject) -> BoardLimitShape {
    var result = BoardLimitShape.line
    if let number = object as? NSNumber, let v = BoardLimitShape (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyProperty_BoardLimitShape = EBReadOnlyEnumProperty <BoardLimitShape>
typealias EBTransientProperty_BoardLimitShape = EBTransientEnumProperty <BoardLimitShape>
typealias EBReadWriteProperty_BoardLimitShape = EBReadWriteEnumProperty <BoardLimitShape>
typealias EBStoredProperty_BoardLimitShape = EBStoredEnumProperty <BoardLimitShape>
typealias EBPropertyProxy_BoardLimitShape = EBPropertyEnumProxy <BoardLimitShape>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
