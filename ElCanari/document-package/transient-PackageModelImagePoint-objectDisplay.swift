//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_PackageModelImagePoint_objectDisplay (
       _ self_mX : Int,                              
       _ self_mY : Int,                              
       _ self_mColor : NSColor,                      
       _ self_mRoot_mPointsAreLocked : Bool?
) -> EBShape {
//--- START OF USER ZONE 2
        var shape = EBShape ()
        let x = canariUnitToCocoa (self_mX)
        let y = canariUnitToCocoa (self_mY)
        let RADIUS_IN_COCOA_UNIT : CGFloat = 10.0
        let r = NSRect (center: NSPoint (x: x, y: y), size: NSSize (width: RADIUS_IN_COCOA_UNIT * 2.0, height: RADIUS_IN_COCOA_UNIT * 2.0))
        if let locked = self_mRoot_mPointsAreLocked, locked {
          let bp = EBBezierPath (ovalIn: r)
          shape.add (filled: [bp], self_mColor)
        }else{
          var bp = EBBezierPath ()
          bp.lineCapStyle = .round
          bp.move (to: NSPoint (x: x - RADIUS_IN_COCOA_UNIT, y: y))
          bp.relativeLine (to: NSPoint (x: RADIUS_IN_COCOA_UNIT * 2.0, y: 0.0))
          bp.move (to: NSPoint (x: x, y: y - RADIUS_IN_COCOA_UNIT))
          bp.relativeLine (to: NSPoint (x: 0.0, y: RADIUS_IN_COCOA_UNIT * 2.0))
          bp.appendOval (in: r)
          bp.lineWidth = 0.0
          shape.add (stroke: [bp], self_mColor)
        }
        return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
