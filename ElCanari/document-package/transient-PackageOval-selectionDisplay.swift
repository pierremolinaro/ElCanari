//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_PackageOval_selectionDisplay (
       _ self_x : Int,                       
       _ self_y : Int,                       
       _ self_width : Int,                   
       _ self_height : Int
) -> EBShape {
//--- START OF USER ZONE 2
  var shape = EBShape ()
  let x = canariUnitToCocoa (self_x)
  let y = canariUnitToCocoa (self_y)
  let width = canariUnitToCocoa (self_width)
  let height = canariUnitToCocoa (self_height)
  var bp : EBBezierPath
  if (self_width <= 0) && (self_height <= 0) { // Oval is a point
    bp = EBBezierPath ()
    bp.move (to: NSPoint (x: x, y: y))
    bp.line (to: NSPoint (x: x, y: y))
  }else if self_width <= 0 { // Vertical line
    bp = EBBezierPath ()
    bp.move (to: NSPoint (x: x, y: y))
    bp.line (to: NSPoint (x: x, y: y + height))
  }else if self_height <= 0 { // Horizontal line
    bp = EBBezierPath ()
    bp.move (to: NSPoint (x: x, y: y))
    bp.line (to: NSPoint (x: x + width, y: y))
  }else{
    let r = CGRect (x: x, y: y, width: width, height: height)
    bp = EBBezierPath (ovalIn: r)
  }
  bp.lineWidth = 0.25
  shape.addStrokeBezierPathes ([bp], NSColor.cyan)
  shape.addKnob (at: CGPoint (x: x + width / 2.0, y: y), index: PACKAGE_OVAL_BOTTOM, .circ, 2.0)
  shape.addKnob (at: CGPoint (x: x, y: y + height / 2.0), index: PACKAGE_OVAL_LEFT, .circ, 2.0)
  shape.addKnob (at: CGPoint (x: x + width / 2.0, y: y + height), index: PACKAGE_OVAL_TOP, .circ, 2.0)
  shape.addKnob (at: CGPoint (x: x + width, y: y + height / 2.0), index: PACKAGE_OVAL_RIGHT, .circ, 2.0)
  return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
