//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   EBGraphicView
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension EBGraphicView {

  //····················································································································

  func bind_backgroundImageData (_ model : EBReadOnlyProperty_Data, file : String, line : Int) {
    self.mBackgroundImageDataController = EBSimpleController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateBackgroundImageData (from: model) }
    )
  }

  //····················································································································

  func unbind_backgroundImageData () {
    self.mArrowKeyMagnitudeController?.unregister ()
    self.mArrowKeyMagnitudeController = nil
  }

  //····················································································································

  private func updateBackgroundImageData (from model : EBReadOnlyProperty_Data) {
    if self.mBackgroundImage != nil {
      self.mBackgroundImage = nil
      self.needsDisplay = true
    }
    switch model.prop {
    case .empty :
      break
    case .single (let v) :
      if let ciImage = CIImage (data: v) {
        self.mBackgroundImage = ciImage
        self.needsDisplay = true
      }
    case .multiple :
      break
    }
  }

  //····················································································································

  func bind_backgroundImageDeltaX (_ model : EBReadOnlyProperty_Int, file : String, line : Int) {
    self.mBackgroundImageDeltaXController = EBSimpleController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateBackgroundImageDeltaX (from: model) }
    )
  }

  //····················································································································

  func unbind_backgroundImageDeltaX () {
    self.mBackgroundImageDeltaXController?.unregister ()
    self.mBackgroundImageDeltaXController = nil
  }

  //····················································································································

  private func updateBackgroundImageDeltaX (from model : EBReadOnlyProperty_Int) {
    switch model.prop {
    case .empty :
      break
    case .single (let v) :
      self.mBackgroundImageDeltaX = canariUnitToCocoa (v)
      self.needsDisplay = true
    case .multiple :
      break
    }
  }

  //····················································································································

  func bind_backgroundImageDeltaY (_ model : EBReadOnlyProperty_Int, file : String, line : Int) {
    self.mBackgroundImageDeltaYController = EBSimpleController (
      observedObjects: [model],
      callBack: { [weak self] in self?.updateBackgroundImageDeltaY (from: model) }
    )
  }

  //····················································································································

  func unbind_backgroundImageDeltaY () {
    self.mBackgroundImageDeltaYController?.unregister ()
    self.mBackgroundImageDeltaYController = nil
  }

  //····················································································································

  private func updateBackgroundImageDeltaY (from model : EBReadOnlyProperty_Int) {
    switch model.prop {
    case .empty :
      break
    case .single (let v) :
      self.mBackgroundImageDeltaY = canariUnitToCocoa (v)
      self.needsDisplay = true
    case .multiple :
      break
    }
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
