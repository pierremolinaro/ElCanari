//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_SymbolBezierCurve_issues (
       _ self_x1 : Int,                  
       _ self_y1 : Int,                  
       _ self_x2 : Int,                  
       _ self_y2 : Int,                  
       _ self_cpx1 : Int,                
       _ self_cpy1 : Int,                
       _ self_cpx2 : Int,                
       _ self_cpy2 : Int
) -> CanariIssueArray {
//--- START OF USER ZONE 2
  var issues = [CanariIssue] ()
  if (self_x1 % SYMBOL_GRID_IN_CANARI_UNIT) != 0 {
    let r = NSRect (
      x: canariUnitToCocoa (self_x1),
      y: canariUnitToCocoa (self_x1),
      width: SYMBOL_GRID_IN_COCOA_UNIT,
      height: SYMBOL_GRID_IN_COCOA_UNIT
    )
    let shapes = EBShape ()
    let bp2 = NSBezierPath (rect: r)
    bp2.lineWidth = 2.0
    shapes.append (shape: EBStrokeBezierPathShape ([bp2], NSColor.red))
    issues.append (CanariIssue (kind: .error, message: "Point is not aligned on 25 mils grid", shapes: shapes, refRect: CanariRect ()))
  }
  return CanariIssueArray (issues: issues)
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
