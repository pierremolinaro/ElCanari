//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_SymbolPin_selectionDisplay (
       _ self_xPin : Int,                  
       _ self_yPin : Int,                  
       _ self_xLabel : Int,                
       _ self_yLabel : Int,                
       _ self_xNumber : Int,               
       _ self_yNumber : Int,               
       _ self_labelHorizontalAlignment : HorizontalAlignment,
       _ self_numberHorizontalAlignment : HorizontalAlignment
) -> EBShape {
//--- START OF USER ZONE 2
    let shape = EBShape ()
  //--- Pin
    let pinPoint = NSPoint (x: canariUnitToCocoa (self_xPin), y: canariUnitToCocoa (self_yPin))
    shape.append (shape: EBKnobShape (at: pinPoint, index: SYMBOL_PIN_ENDPOINT, .rect))
  //--- Label
    let labelPoint = NSPoint (x: canariUnitToCocoa (self_xLabel), y: canariUnitToCocoa (self_yLabel))
    shape.append (shape: EBKnobShape (at: labelPoint, index: SYMBOL_PIN_LABEL, .circ))
  //--- Number
    let numberPoint = NSPoint (x: canariUnitToCocoa (self_xNumber), y: canariUnitToCocoa (self_yNumber))
    shape.append (shape: EBKnobShape (at: numberPoint, index: SYMBOL_PIN_NUMBER, .circ))
  //---
    return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
