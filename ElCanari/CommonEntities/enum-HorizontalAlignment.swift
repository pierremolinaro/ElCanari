//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum HorizontalAlignment : Int, EnumPropertyProtocol {
  case left = 0
  case center = 1
  case right = 2


  //····················································································································

  init? (string : String) {
    switch string {
      case "left" : self = .left // 0
      case "center" : self = .center // 1
      case "right" : self = .right // 2
      case _ : return nil
    }
  }

  //····················································································································

  func descriptionForExplorer () -> String {
    switch self {
      case .left : return "left" // 0
      case .center : return "center" // 1
      case .right : return "right" // 2
    }
  }

  //····················································································································
  //  Enum generic bindings utility functions
  //····················································································································

  static func buildfromRawValue (rawValue : Int) -> HorizontalAlignment? {
    if let v = HorizontalAlignment (rawValue:rawValue) {
      return v
    }else{
      return nil
    }
  }

  //····················································································································

  func enumfromRawValue (rawValue : Int) -> HorizontalAlignment {
    var result = self
    let v : HorizontalAlignment? = HorizontalAlignment (rawValue:rawValue) ;
    if let unwrappedV = v {
      result = unwrappedV
    }
    return result
  }

  //····················································································································
  //  ValuePropertyProtocol
  //····················································································································

  func ebHashValue () -> UInt32 {
    return UInt32 (self.rawValue)
  }

  func convertToNSObject () -> NSObject {
    return NSNumber (value: self.rawValue)
  }

  static func convertFromNSObject (object : NSObject) -> HorizontalAlignment {
    var result = HorizontalAlignment.left
    if let number = object as? NSNumber, let v = HorizontalAlignment (rawValue: number.intValue) {
      result = v
    }
    return result
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

typealias EBReadOnlyController_HorizontalAlignment = EBReadOnlyEnumController <HorizontalAlignment>

typealias EBReadOnlyProperty_HorizontalAlignment = EBReadOnlyEnumProperty <HorizontalAlignment>
typealias EBTransientProperty_HorizontalAlignment = EBTransientEnumProperty <HorizontalAlignment>
typealias EBReadWriteProperty_HorizontalAlignment = EBReadWriteEnumProperty <HorizontalAlignment>
typealias EBStoredProperty_HorizontalAlignment = EBStoredEnumProperty <HorizontalAlignment>
typealias EBPropertyProxy_HorizontalAlignment = EBPropertyEnumProxy <HorizontalAlignment>

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
