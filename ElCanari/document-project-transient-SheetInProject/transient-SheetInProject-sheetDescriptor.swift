//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_SheetInProject_sheetDescriptor (
       _ self_mRoot_mSchematicSheetOrientation : SchematicSheetOrientation?,
       _ self_mRoot_sheetIndexes : IntArray?,  
       _ self_mRoot_mSchematicCustomWidth : Int?,
       _ self_mRoot_mSchematicCustomHeight : Int?,
       _ self_ebObjectIndex : Int
) -> SchematicSheetDescriptor {
//--- START OF USER ZONE 2
        let sheetIndex = 1 + (self_mRoot_sheetIndexes?.firstIndex (of: self_ebObjectIndex) ?? -1)
        let A4MinSize = cocoaToCanariUnit (SCHEMATIC_A4_MIN_SIZE_COCOA_UNIT)
        let A4MaxSize = cocoaToCanariUnit (SCHEMATIC_A4_MAX_SIZE_COCOA_UNIT)
        let leftMargin = cocoaToCanariUnit (SCHEMATIC_LEFT_MARGIN_COCOA_UNIT)
        let rightMargin = cocoaToCanariUnit (SCHEMATIC_RIGHT_MARGIN_COCOA_UNIT)
        let topMargin = cocoaToCanariUnit (SCHEMATIC_TOP_MARGIN_COCOA_UNIT)
        let bottomMargin = cocoaToCanariUnit (SCHEMATIC_BOTTOM_MARGIN_COCOA_UNIT)
        let gutterWidth = cocoaToCanariUnit (SCHEMATIC_GUTTER_WIDTH_COCOA_UNIT)
        let gutterHeight = cocoaToCanariUnit (SCHEMATIC_GUTTER_HEIGHT_COCOA_UNIT)
        switch self_mRoot_mSchematicSheetOrientation! {
        case .a4Horizontal :
          let width = A4MaxSize - leftMargin - rightMargin - 2 * gutterWidth
          let height = A4MinSize - topMargin - bottomMargin - 2 * gutterHeight
          return SchematicSheetDescriptor (
            size: CanariSize (width: width, height: height),
            horizontalDivisions: 10,
            verticalDivisions: (10 * A4MinSize) / A4MaxSize,
            sheetIndex: sheetIndex
          )
        case .a4Vertical :
          let width = A4MinSize - leftMargin - rightMargin - 2 * gutterWidth
          let height = A4MaxSize - topMargin - bottomMargin - 2 * gutterHeight
          return SchematicSheetDescriptor (
            size: CanariSize (width: width, height: height),
            horizontalDivisions: (10 * A4MinSize) / A4MaxSize,
            verticalDivisions: 10,
            sheetIndex: sheetIndex
          )
        case .custom :
          let width = self_mRoot_mSchematicCustomWidth!
          let height = self_mRoot_mSchematicCustomHeight!
          let m = max (width, height)
          return SchematicSheetDescriptor (
            size: CanariSize (width: width, height: height),
            horizontalDivisions: (10 * width) / m,
            verticalDivisions: (10 * height) / m,
            sheetIndex: sheetIndex
          )
        }
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
