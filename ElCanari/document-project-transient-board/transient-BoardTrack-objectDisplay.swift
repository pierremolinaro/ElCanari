//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_BoardTrack_objectDisplay (
       _ self_mConnectorP1_location : CanariPoint?,
       _ self_mConnectorP2_location : CanariPoint?,
       _ self_mSide : TrackSide,         
       _ prefs_frontSideLayoutColorForBoard : NSColor,
       _ prefs_backSideLayoutColorForBoard : NSColor
) -> EBShape {
//--- START OF USER ZONE 2
       var shape = EBShape ()
       if let p1 = self_mConnectorP1_location?.cocoaPoint, let p2 = self_mConnectorP2_location?.cocoaPoint {
         var bp = EBBezierPath ()
         bp.lineWidth = 5.0
         bp.lineCapStyle = .round
         bp.lineJoinStyle = .round
         bp.move (to: p1)
         bp.line (to: p2)
         let color : NSColor
         switch self_mSide {
         case .front :
           color = prefs_frontSideLayoutColorForBoard
         case .back :
           color = prefs_backSideLayoutColorForBoard
         }
         shape.add (stroke: [bp], color)
       }
       return shape
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
