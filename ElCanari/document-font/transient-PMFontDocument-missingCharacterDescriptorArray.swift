//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func compute_PMFontDocument_missingCharacterDescriptorArray (
       _ root_characters_characterIsDefined : [FontCharacterEntity_characterIsDefined]
) -> [MissingCharacter] {
//--- START OF USER ZONE 2
  var result = [MissingCharacter] ()
  var idx = 0x1F
  for c in root_characters_characterIsDefined {
    idx += 1
    switch c.characterIsDefined {
    case .empty, .multiple :
      break
    case .single (let isDefined) :
      if !isDefined {
        let missingChar = MissingCharacter ()
        missingChar.idx = idx
        missingChar.code = "\(idx) — 0x\(String (idx, radix: 16, uppercase: true))"
        let s = String (data: Data ([UInt8 (idx)]), encoding: .macOSRoman)! // ))"\(UnicodeScalar (idx)!)"
        missingChar.char = s
        result.append (missingChar)
      }
    }
  }
  return result
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
