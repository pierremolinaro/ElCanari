//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//    Object Controller ProjectDocument mSelectedSheetController
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

final class Controller_ProjectDocument_mSelectedSheetController : EBObject {
 
  //····················································································································
  //    Init
  //····················································································································

  override init () {
    super.init ()
    self.mSheetTitle_property.mReadModelFunction = { [weak self] in
      return self?.mModel?.mSheetTitle_property_selection ?? .empty
    }
    self.mSheetTitle_property.mWriteModelFunction = { [weak self] (inValue : String) in
      self?.mModel?.mSheetTitle = inValue
    }
    self.mSheetTitle_property.mValidateAndWriteModelFunction = { [weak self] (candidateValue : String, windowForSheet : NSWindow?) in
      if let property = self?.mModel?.mSheetTitle_property {
        return property.validateAndSetProp (candidateValue, windowForSheet: windowForSheet)
      }else{
        return false
      }
    }
  }

  //····················································································································
  //   Observable property: mSheetTitle
  //····················································································································

  var mSheetTitle_property = EBPropertyProxy_String ()

  var mSheetTitle_property_selection : EBSelection <String> {
    return self.mSheetTitle_property.prop
  }

  //····················································································································
  //    Controller
  //····················································································································

  private var mController : EBSimpleController? = nil

  //····················································································································

  func bind_model (_ inToOneRelationship : ToOneRelationship_ProjectRoot_mSelectedSheet) {
    self.mController = EBSimpleController (
      observedObjects: [inToOneRelationship],
      callBack: { [weak self] in self?.mModel = inToOneRelationship.propval }
    )
  }

  //····················································································································

  func unbind_model () {
    self.mController?.unregister ()
    self.mController = nil
    self.mModel = nil
 }

  //····················································································································
  //    Model
  //····················································································································

  private var mModel : SheetInProject? = nil {
    didSet {
      if self.mModel !== oldValue {
        oldValue?.mSheetTitle_property.removeEBObserver (self.mSheetTitle_property)
        self.mModel?.mSheetTitle_property.addEBObserver (self.mSheetTitle_property)
      }
    }
  }

  //····················································································································
  //    Explorer
  //····················································································································

  final func addExplorer (name : String, y : inout CGFloat, view : NSView) {
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

