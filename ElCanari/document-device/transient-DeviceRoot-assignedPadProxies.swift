//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_DeviceRoot_assignedPadProxies (
       _ self_mPadProxies_mQualifiedPadName : [PadProxyInDevice_mQualifiedPadName],
       _ self_mPadProxies_symbolName : [PadProxyInDevice_symbolName],
       _ self_mPadProxies_pinInstanceName : [PadProxyInDevice_pinInstanceName],
       _ self_mPadProxies_isConnected : [PadProxyInDevice_isConnected]
) -> AssignedPadProxiesInDevice {
//--- START OF USER ZONE 2
        var array = [AssignedPadProxy] ()
        var idx = 0
        while idx < self_mPadProxies_mQualifiedPadName.count {
          if let connected = self_mPadProxies_isConnected [idx].isConnected, connected {
            let padProxy = AssignedPadProxy (
              padName: self_mPadProxies_mQualifiedPadName [idx].mQualifiedPadName,
              symbolInstanceName: self_mPadProxies_symbolName [idx].symbolName ?? "nil(1)",
              pinName: self_mPadProxies_pinInstanceName [idx].pinInstanceName ?? "nil(2)"
            )
            array.append (padProxy)
          }
          idx += 1
        }
        return array
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
