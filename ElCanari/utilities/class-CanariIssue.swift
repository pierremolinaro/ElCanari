//
//  class-CanariIssue.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 25/07/2018.
//
//
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CanariIssueKind
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum CanariIssueKind {
  case warning
  case error
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CanariIssue
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct CanariIssue : Hashable {

  //····················································································································
  //   Properties
  //····················································································································

  let mMessage : String
  let mKind : CanariIssueKind
  let mShapes : EBShape
  fileprivate let mRefPoint : NSPoint

  //····················································································································
  //   Init
  //····················································································································

  init (kind inKind : CanariIssueKind,
        message inMessage : String,
        shapes inShapes : EBShape,
        refPoint inRefPoint : NSPoint) {
    mMessage = inMessage
    mShapes = inShapes
    mKind = inKind
    mRefPoint = inRefPoint
  }

  //····················································································································
  //   Protocol Equatable
  //····················································································································

  public static func == (lhs: CanariIssue, rhs: CanariIssue) -> Bool {
    return (lhs.mMessage == rhs.mMessage) && (lhs.mKind == rhs.mKind) && (lhs.mShapes == rhs.mShapes) && (lhs.mRefPoint == rhs.mRefPoint)
  }

  //····················································································································
  //   Protocol Hashable
  //····················································································································

  public var hashValue : Int {
    return self.mMessage.hashValue ^ self.mKind.hashValue ^ self.mShapes.hashValue
    ^ self.mRefPoint.x.hashValue ^ self.mRefPoint.y.hashValue
  }

  //····················································································································
  //
  //····················································································································

  public static func displaySortingCompare (lhs: CanariIssue, rhs: CanariIssue) -> Bool {
    return (lhs.mRefPoint.x < rhs.mRefPoint.x)
      || ((lhs.mRefPoint.x == rhs.mRefPoint.x) && (lhs.mRefPoint.y < rhs.mRefPoint.y))
  }

  //····················································································································

}


//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
