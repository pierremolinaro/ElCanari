//
//  class-CanariIssue.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 25/07/2018.
//
//
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CanariIssueKind
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

enum CanariIssueKind {
  case warning
  case error
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CanariIssue
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct CanariIssue : Hashable {

  //····················································································································
  //   Properties
  //····················································································································

  let mMessage : String
  let mKind : CanariIssueKind
  let mShapes : EBShape
  let mRefRect : CanariRect

  //····················································································································
  //   Init
  //····················································································································

  init (kind inKind : CanariIssueKind, message inMessage : String, shapes inShapes : EBShape, refRect inRefRect : CanariRect) {
    mMessage = inMessage
    mShapes = inShapes
    mKind = inKind
    mRefRect = inRefRect
  }

  //····················································································································
  //   Protocol Equatable
  //····················································································································

  public static func == (lhs: CanariIssue, rhs: CanariIssue) -> Bool {
    return (lhs.mMessage == rhs.mMessage) && (lhs.mKind == rhs.mKind) && (lhs.mShapes == rhs.mShapes) && (lhs.mRefRect == rhs.mRefRect)
  }

  //····················································································································
  //   Protocol Hashable
  //····················································································································

  public var hashValue : Int { return self.mMessage.hashValue ^ self.mKind.hashValue ^ self.mShapes.hashValue ^ self.mRefRect.hashValue }

  //····················································································································
  //
  //····················································································································

  public static func displaySortingCompare (lhs: CanariIssue, rhs: CanariIssue) -> Bool {
    return (lhs.mRefRect.bottom < rhs.mRefRect.bottom)
      || ((lhs.mRefRect.bottom == rhs.mRefRect.bottom) && (lhs.mRefRect.left < rhs.mRefRect.left))
  }

  //····················································································································

}


//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
