//
//  class-CanariIssueArray.swift
//  ElCanari
//
//  Created by Pierre Molinaro on 25/07/2018.
//
//
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//   CanariIssueArray
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

struct CanariIssueArray : Hashable {

  //····················································································································
  //   Properties
  //····················································································································

  let mIssues : [CanariIssue]

  //····················································································································
  //   Init
  //····················································································································

  init (issues inIssues : [CanariIssue]) {
    mIssues = inIssues
  }

  //····················································································································
  //   count
  //····················································································································

  var count : Int { return mIssues.count }

  //····················································································································
  //   errorCount
  //····················································································································

  var errorCount : Int {
    var n = 0
    for issue in self.mIssues {
      switch issue.mKind {
      case .error :
        n += 1
      case .warning :
        ()
      }
    }
    return n
  }

  //····················································································································
  //   warningCount
  //····················································································································

  var warningCount : Int {
    var n = 0
    for issue in self.mIssues {
      switch issue.mKind {
      case .error :
        ()
      case .warning :
        n += 1
      }
    }
    return n
  }

  //····················································································································
  //   Protocol Equatable
  //····················································································································

  public static func == (lhs: CanariIssueArray, rhs: CanariIssueArray) -> Bool {
    if lhs.mIssues.count != rhs.mIssues.count {
      return false
    }else{
      var idx = 0
      while idx < lhs.mIssues.count {
        if lhs.mIssues [idx] != rhs.mIssues [idx] {
          return false
        }
        idx += 1
      }
      return true
    }
  }

  //····················································································································
  //   Protocol Hashable
  //····················································································································

  public var hashValue : Int {
    var h = 0
    for issue in mIssues {
      h ^= issue.hashValue
    }
    return h
  }

  //····················································································································

}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
