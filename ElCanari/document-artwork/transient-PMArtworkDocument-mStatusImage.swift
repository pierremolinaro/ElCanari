//--- START OF USER ZONE 1

//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func compute_PMArtworkDocument_mStatusImage (_ self_2E_rootObject_2E_fileGenerationParameterArray_0 : [ArtworkFileGenerationParameters_fileExtension],
                                             _ self_2E_rootObject_2E_fileGenerationParameterArray_1 : [ArtworkFileGenerationParameters_name]) -> NSImage {
//--- START OF USER ZONE 2
  let n = self_2E_rootObject_2E_fileGenerationParameterArray_0.count
  var error = false
  let warning = n == 0
  var fileExtensionSet = Set <String> ()
  var nameSet = Set <String> ()
  for i in 0 ..< n {
    let fileExtension = self_2E_rootObject_2E_fileGenerationParameterArray_0 [i].fileExtension.propval
    let name = self_2E_rootObject_2E_fileGenerationParameterArray_1 [i].name.propval
    if fileExtension == "" {
      error = true
    }else if fileExtensionSet.contains (fileExtension) {
      error = true
    }else{
      fileExtensionSet.insert (fileExtension)
    }
    if name == "" {
      error = true
    }else if nameSet.contains (name) {
      error = true
    }else{
      nameSet.insert (name)
    }
  }
  var result = NSImage (named: "green20")!
  if error {
    result = NSImage (named: "red20")!
  }else if warning {
    result = NSImage (named: "orange20")!
  }
  return result
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
