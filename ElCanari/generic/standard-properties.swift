//----------------------------------------------------------------------------------------------------------------------
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//----------------------------------------------------------------------------------------------------------------------

import Cocoa

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property UInt32
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_UInt32    = EBReadOnlyValueProperty <UInt32>
typealias EBTransientProperty_UInt32   = EBTransientValueProperty <UInt32>
typealias EBReadWriteProperty_UInt32   = EBReadWriteValueProperty <UInt32>
typealias EBPropertyProxy_UInt32       = EBPropertyValueProxy <UInt32>
typealias EBComputedProperty_UInt32    = EBComputedValueProperty <UInt32>
typealias EBStoredProperty_UInt32      = EBStoredValueProperty <UInt32>
typealias EBPreferencesProperty_UInt32 = EBPreferencesValueProperty <UInt32>

//----------------------------------------------------------------------------------------------------------------------

func compare_UInt32_properties (_ left : EBReadOnlyProperty_UInt32, _ right : EBReadOnlyProperty_UInt32) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property Int
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_Int    = EBReadOnlyValueProperty <Int>
typealias EBTransientProperty_Int   = EBTransientValueProperty <Int>
typealias EBReadWriteProperty_Int   = EBReadWriteValueProperty <Int>
typealias EBPropertyProxy_Int       = EBPropertyValueProxy <Int>
typealias EBComputedProperty_Int    = EBComputedValueProperty <Int>
typealias EBStoredProperty_Int      = EBStoredValueProperty <Int>
typealias EBPreferencesProperty_Int = EBPreferencesValueProperty <Int>

//----------------------------------------------------------------------------------------------------------------------

func compare_Int_properties (_ left : EBReadOnlyProperty_Int, _ right : EBReadOnlyProperty_Int) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property Bool
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_Bool    = EBReadOnlyValueProperty <Bool>
typealias EBTransientProperty_Bool   = EBTransientValueProperty <Bool>
typealias EBReadWriteProperty_Bool   = EBReadWriteValueProperty <Bool>
typealias EBPropertyProxy_Bool       = EBPropertyValueProxy <Bool>
typealias EBComputedProperty_Bool    = EBComputedValueProperty <Bool>
typealias EBStoredProperty_Bool      = EBStoredValueProperty <Bool>
typealias EBPreferencesProperty_Bool = EBPreferencesValueProperty <Bool>

//----------------------------------------------------------------------------------------------------------------------

func compare_Bool_properties (_ left : EBReadOnlyProperty_Bool, _ right : EBReadOnlyProperty_Bool) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property Double
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_Double    = EBReadOnlyValueProperty <Double>
typealias EBTransientProperty_Double   = EBTransientValueProperty <Double>
typealias EBReadWriteProperty_Double   = EBReadWriteValueProperty <Double>
typealias EBPropertyProxy_Double       = EBPropertyValueProxy <Double>
typealias EBComputedProperty_Double    = EBComputedValueProperty <Double>
typealias EBStoredProperty_Double      = EBStoredValueProperty <Double>
typealias EBPreferencesProperty_Double = EBPreferencesValueProperty <Double>

//----------------------------------------------------------------------------------------------------------------------

func compare_Double_properties (_ left : EBReadOnlyProperty_Double, _ right : EBReadOnlyProperty_Double) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property String
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_String    = EBReadOnlyValueProperty <String>
typealias EBTransientProperty_String   = EBTransientValueProperty <String>
typealias EBReadWriteProperty_String   = EBReadWriteValueProperty <String>
typealias EBPropertyProxy_String       = EBPropertyValueProxy <String>
typealias EBComputedProperty_String    = EBComputedValueProperty <String>
typealias EBStoredProperty_String      = EBStoredValueProperty <String>
typealias EBPreferencesProperty_String = EBPreferencesValueProperty <String>

//----------------------------------------------------------------------------------------------------------------------

func compare_String_properties (_ left : EBReadOnlyProperty_String, _ right : EBReadOnlyProperty_String) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      return currentValue.localizedStandardCompare (otherValue)
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property Data
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_Data    = EBReadOnlyValueProperty <Data>
typealias EBTransientProperty_Data   = EBTransientValueProperty <Data>
typealias EBReadWriteProperty_Data   = EBReadWriteValueProperty <Data>
typealias EBPropertyProxy_Data       = EBPropertyValueProxy <Data>
typealias EBComputedProperty_Data    = EBComputedValueProperty <Data>
typealias EBStoredProperty_Data      = EBStoredValueProperty <Data>
typealias EBPreferencesProperty_Data = EBPreferencesValueProperty <Data>

//----------------------------------------------------------------------------------------------------------------------

func compare_Data_properties (_ left : EBReadOnlyProperty_Data, _ right : EBReadOnlyProperty_Data) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property Date
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_Date    = EBReadOnlyValueProperty <Date>
typealias EBTransientProperty_Date   = EBTransientValueProperty <Date>
typealias EBReadWriteProperty_Date   = EBReadWriteValueProperty <Date>
typealias EBPropertyProxy_Date       = EBPropertyValueProxy <Date>
typealias EBComputedProperty_Date    = EBComputedValueProperty <Date>
typealias EBStoredProperty_Date      = EBStoredValueProperty <Date>
typealias EBPreferencesProperty_Date = EBPreferencesValueProperty <Date>

//----------------------------------------------------------------------------------------------------------------------

func compare_Date_properties (_ left : EBReadOnlyProperty_Date, _ right : EBReadOnlyProperty_Date) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property BezierPathArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_BezierPathArray    = EBReadOnlyValueProperty <BezierPathArray>
typealias EBTransientProperty_BezierPathArray   = EBTransientValueProperty <BezierPathArray>
typealias EBReadWriteProperty_BezierPathArray   = EBReadWriteValueProperty <BezierPathArray>
typealias EBPropertyProxy_BezierPathArray       = EBPropertyValueProxy <BezierPathArray>
typealias EBComputedProperty_BezierPathArray    = EBComputedValueProperty <BezierPathArray>
typealias EBStoredProperty_BezierPathArray      = EBStoredValueProperty <BezierPathArray>
typealias EBPreferencesProperty_BezierPathArray = EBPreferencesValueProperty <BezierPathArray>

//----------------------------------------------------------------------------------------------------------------------

func compare_BezierPathArray_properties (_ left : EBReadOnlyProperty_BezierPathArray, _ right : EBReadOnlyProperty_BezierPathArray) -> ComparisonResult {
  switch left.selection {
  case .empty :
    switch right.selection {
    case .empty :
      return .orderedSame
    default:
      return .orderedAscending
    }
  case .multiple :
    switch right.selection {
    case .empty :
      return .orderedDescending
    case .multiple :
      return .orderedSame
   case .single (_) :
      return .orderedAscending
   }
 case .single (let currentValue) :
    switch right.selection {
    case .empty, .multiple :
      return .orderedDescending
    case .single (let otherValue) :
      if currentValue < otherValue {
        return .orderedAscending
      }else if currentValue > otherValue {
        return .orderedDescending
      }else{
        return .orderedSame
      }
    }
  }
}

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property CGFloat
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CGFloat    = EBReadOnlyValueProperty <CGFloat>
typealias EBTransientProperty_CGFloat   = EBTransientValueProperty <CGFloat>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class NSImage
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NSImage       = EBReadOnlyValueProperty <NSImage>
typealias EBTransientProperty_NSImage      = EBTransientValueProperty <NSImage>
typealias EBReadOnlyPropertyArray_NSImage  = EBReadOnlyValueProperty <[NSImage]>
typealias EBTransientPropertyArray_NSImage = EBTransientValueProperty <[NSImage]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class EBShape
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_EBShape       = EBReadOnlyValueProperty <EBShape>
typealias EBTransientProperty_EBShape      = EBTransientValueProperty <EBShape>
typealias EBReadOnlyPropertyArray_EBShape  = EBReadOnlyValueProperty <[EBShape]>
typealias EBTransientPropertyArray_EBShape = EBTransientValueProperty <[EBShape]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class CanariMenuItemListClass
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CanariMenuItemListClass       = EBReadOnlyValueProperty <CanariMenuItemListClass>
typealias EBTransientProperty_CanariMenuItemListClass      = EBTransientValueProperty <CanariMenuItemListClass>
typealias EBReadOnlyPropertyArray_CanariMenuItemListClass  = EBReadOnlyValueProperty <[CanariMenuItemListClass]>
typealias EBTransientPropertyArray_CanariMenuItemListClass = EBTransientValueProperty <[CanariMenuItemListClass]>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property CanariRect
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CanariRect    = EBReadOnlyValueProperty <CanariRect>
typealias EBTransientProperty_CanariRect   = EBTransientValueProperty <CanariRect>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property EBBezierPath
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_EBBezierPath    = EBReadOnlyValueProperty <EBBezierPath>
typealias EBTransientProperty_EBBezierPath   = EBTransientValueProperty <EBBezierPath>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property BoardFontDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_BoardFontDescriptor    = EBReadOnlyValueProperty <BoardFontDescriptor>
typealias EBTransientProperty_BoardFontDescriptor   = EBTransientValueProperty <BoardFontDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property BorderCurveDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_BorderCurveDescriptor    = EBReadOnlyValueProperty <BorderCurveDescriptor>
typealias EBTransientProperty_BorderCurveDescriptor   = EBTransientValueProperty <BorderCurveDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property NetInfoPoint
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NetInfoPoint    = EBReadOnlyValueProperty <NetInfoPoint>
typealias EBTransientProperty_NetInfoPoint   = EBTransientValueProperty <NetInfoPoint>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property NetInfoPointArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NetInfoPointArray    = EBReadOnlyValueProperty <NetInfoPointArray>
typealias EBTransientProperty_NetInfoPointArray   = EBTransientValueProperty <NetInfoPointArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property StatusStringArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_StatusStringArray    = EBReadOnlyValueProperty <StatusStringArray>
typealias EBTransientProperty_StatusStringArray   = EBTransientValueProperty <StatusStringArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property NetInfo
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NetInfo    = EBReadOnlyValueProperty <NetInfo>
typealias EBTransientProperty_NetInfo   = EBTransientValueProperty <NetInfo>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SchematicSheetDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SchematicSheetDescriptor    = EBReadOnlyValueProperty <SchematicSheetDescriptor>
typealias EBTransientProperty_SchematicSheetDescriptor   = EBTransientValueProperty <SchematicSheetDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SchematicSheetGeometry
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SchematicSheetGeometry    = EBReadOnlyValueProperty <SchematicSheetGeometry>
typealias EBTransientProperty_SchematicSheetGeometry   = EBTransientValueProperty <SchematicSheetGeometry>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SchematicPointStatus
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SchematicPointStatus    = EBReadOnlyValueProperty <SchematicPointStatus>
typealias EBTransientProperty_SchematicPointStatus   = EBTransientValueProperty <SchematicPointStatus>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property NetInfoArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NetInfoArray    = EBReadOnlyValueProperty <NetInfoArray>
typealias EBTransientProperty_NetInfoArray   = EBTransientValueProperty <NetInfoArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property CanariPoint
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CanariPoint    = EBReadOnlyValueProperty <CanariPoint>
typealias EBTransientProperty_CanariPoint   = EBTransientValueProperty <CanariPoint>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property CanariPointArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CanariPointArray    = EBReadOnlyValueProperty <CanariPointArray>
typealias EBTransientProperty_CanariPointArray   = EBTransientValueProperty <CanariPointArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property ComponentSymbolInfo
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_ComponentSymbolInfo    = EBReadOnlyValueProperty <ComponentSymbolInfo>
typealias EBTransientProperty_ComponentSymbolInfo   = EBTransientValueProperty <ComponentSymbolInfo>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SymbolInProjectIdentifier
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SymbolInProjectIdentifier    = EBReadOnlyValueProperty <SymbolInProjectIdentifier>
typealias EBTransientProperty_SymbolInProjectIdentifier   = EBTransientValueProperty <SymbolInProjectIdentifier>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SymbolInProjectIdentifierArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SymbolInProjectIdentifierArray    = EBReadOnlyValueProperty <SymbolInProjectIdentifierArray>
typealias EBTransientProperty_SymbolInProjectIdentifierArray   = EBTransientValueProperty <SymbolInProjectIdentifierArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property PinInProjectDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_PinInProjectDescriptor    = EBReadOnlyValueProperty <PinInProjectDescriptor>
typealias EBTransientProperty_PinInProjectDescriptor   = EBTransientValueProperty <PinInProjectDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property PinPadAssignmentInProject
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_PinPadAssignmentInProject    = EBReadOnlyValueProperty <PinPadAssignmentInProject>
typealias EBTransientProperty_PinPadAssignmentInProject   = EBTransientValueProperty <PinPadAssignmentInProject>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property SlavePadDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_SlavePadDescriptor    = EBReadOnlyValueProperty <SlavePadDescriptor>
typealias EBTransientProperty_SlavePadDescriptor   = EBTransientValueProperty <SlavePadDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property MasterPadDescriptor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_MasterPadDescriptor    = EBReadOnlyValueProperty <MasterPadDescriptor>
typealias EBTransientProperty_MasterPadDescriptor   = EBTransientValueProperty <MasterPadDescriptor>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property PackageMasterPadDictionary
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_PackageMasterPadDictionary    = EBReadOnlyValueProperty <PackageMasterPadDictionary>
typealias EBTransientProperty_PackageMasterPadDictionary   = EBTransientValueProperty <PackageMasterPadDictionary>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property ComponentPadDescriptorDictionary
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_ComponentPadDescriptorDictionary    = EBReadOnlyValueProperty <ComponentPadDescriptorDictionary>
typealias EBTransientProperty_ComponentPadDescriptorDictionary   = EBTransientValueProperty <ComponentPadDescriptorDictionary>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property RastnetInfoArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_RastnetInfoArray    = EBReadOnlyValueProperty <RastnetInfoArray>
typealias EBTransientProperty_RastnetInfoArray   = EBTransientValueProperty <RastnetInfoArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property DeviceSymbolDictionary
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_DeviceSymbolDictionary    = EBReadOnlyValueProperty <DeviceSymbolDictionary>
typealias EBTransientProperty_DeviceSymbolDictionary   = EBTransientValueProperty <DeviceSymbolDictionary>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property IntArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_IntArray    = EBReadOnlyValueProperty <IntArray>
typealias EBTransientProperty_IntArray   = EBTransientValueProperty <IntArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property StringArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_StringArray    = EBReadOnlyValueProperty <StringArray>
typealias EBTransientProperty_StringArray   = EBTransientValueProperty <StringArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property StringSet
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_StringSet    = EBReadOnlyValueProperty <StringSet>
typealias EBTransientProperty_StringSet   = EBTransientValueProperty <StringSet>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property StringTagArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_StringTagArray    = EBReadOnlyValueProperty <StringTagArray>
typealias EBTransientProperty_StringTagArray   = EBTransientValueProperty <StringTagArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property TwoStrings
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_TwoStrings    = EBReadOnlyValueProperty <TwoStrings>
typealias EBTransientProperty_TwoStrings   = EBTransientValueProperty <TwoStrings>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property ThreeStrings
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_ThreeStrings    = EBReadOnlyValueProperty <ThreeStrings>
typealias EBTransientProperty_ThreeStrings   = EBTransientValueProperty <ThreeStrings>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property TwoStringArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_TwoStringArray    = EBReadOnlyValueProperty <TwoStringArray>
typealias EBTransientProperty_TwoStringArray   = EBTransientValueProperty <TwoStringArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property ThreeStringArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_ThreeStringArray    = EBReadOnlyValueProperty <ThreeStringArray>
typealias EBTransientProperty_ThreeStringArray   = EBTransientValueProperty <ThreeStringArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property PinQualifiedNameStruct
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_PinQualifiedNameStruct    = EBReadOnlyValueProperty <PinQualifiedNameStruct>
typealias EBTransientProperty_PinQualifiedNameStruct   = EBTransientValueProperty <PinQualifiedNameStruct>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class MergerViaShapeArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_MergerViaShapeArray       = EBReadOnlyValueProperty <MergerViaShapeArray>
typealias EBTransientProperty_MergerViaShapeArray      = EBTransientValueProperty <MergerViaShapeArray>
typealias EBReadOnlyPropertyArray_MergerViaShapeArray  = EBReadOnlyValueProperty <[MergerViaShapeArray]>
typealias EBTransientPropertyArray_MergerViaShapeArray = EBTransientValueProperty <[MergerViaShapeArray]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class MergerSegmentArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_MergerSegmentArray       = EBReadOnlyValueProperty <MergerSegmentArray>
typealias EBTransientProperty_MergerSegmentArray      = EBTransientValueProperty <MergerSegmentArray>
typealias EBReadOnlyPropertyArray_MergerSegmentArray  = EBReadOnlyValueProperty <[MergerSegmentArray]>
typealias EBTransientPropertyArray_MergerSegmentArray = EBTransientValueProperty <[MergerSegmentArray]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class MergerBoardLimits
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_MergerBoardLimits       = EBReadOnlyValueProperty <MergerBoardLimits>
typealias EBTransientProperty_MergerBoardLimits      = EBTransientValueProperty <MergerBoardLimits>
typealias EBReadOnlyPropertyArray_MergerBoardLimits  = EBReadOnlyValueProperty <[MergerBoardLimits]>
typealias EBTransientPropertyArray_MergerBoardLimits = EBTransientValueProperty <[MergerBoardLimits]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class MergerPadArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_MergerPadArray       = EBReadOnlyValueProperty <MergerPadArray>
typealias EBTransientProperty_MergerPadArray      = EBTransientValueProperty <MergerPadArray>
typealias EBReadOnlyPropertyArray_MergerPadArray  = EBReadOnlyValueProperty <[MergerPadArray]>
typealias EBTransientPropertyArray_MergerPadArray = EBTransientValueProperty <[MergerPadArray]>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property CanariIssueArray
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CanariIssueArray    = EBReadOnlyValueProperty <CanariIssueArray>
typealias EBTransientProperty_CanariIssueArray   = EBTransientValueProperty <CanariIssueArray>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property NSRect
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NSRect    = EBReadOnlyValueProperty <NSRect>
typealias EBTransientProperty_NSRect   = EBTransientValueProperty <NSRect>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property UnconnectedSymbolPinsInDevice
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_UnconnectedSymbolPinsInDevice    = EBReadOnlyValueProperty <UnconnectedSymbolPinsInDevice>
typealias EBTransientProperty_UnconnectedSymbolPinsInDevice   = EBTransientValueProperty <UnconnectedSymbolPinsInDevice>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property AssignedPadProxiesInDevice
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_AssignedPadProxiesInDevice    = EBReadOnlyValueProperty <AssignedPadProxiesInDevice>
typealias EBTransientProperty_AssignedPadProxiesInDevice   = EBTransientValueProperty <AssignedPadProxiesInDevice>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property DefinedCharactersInDevice
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_DefinedCharactersInDevice    = EBReadOnlyValueProperty <DefinedCharactersInDevice>
typealias EBTransientProperty_DefinedCharactersInDevice   = EBTransientValueProperty <DefinedCharactersInDevice>

//----------------------------------------------------------------------------------------------------------------------
//   Scalar property PadNetDictionary
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_PadNetDictionary    = EBReadOnlyValueProperty <PadNetDictionary>
typealias EBTransientProperty_PadNetDictionary   = EBTransientValueProperty <PadNetDictionary>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class CharacterSegmentListClass
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CharacterSegmentListClass       = EBReadOnlyValueProperty <CharacterSegmentListClass>
typealias EBTransientProperty_CharacterSegmentListClass      = EBTransientValueProperty <CharacterSegmentListClass>
typealias EBReadOnlyPropertyArray_CharacterSegmentListClass  = EBReadOnlyValueProperty <[CharacterSegmentListClass]>
typealias EBTransientPropertyArray_CharacterSegmentListClass = EBTransientValueProperty <[CharacterSegmentListClass]>

//----------------------------------------------------------------------------------------------------------------------
//   Transient property class CharacterGerberCodeClass
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_CharacterGerberCodeClass       = EBReadOnlyValueProperty <CharacterGerberCodeClass>
typealias EBTransientProperty_CharacterGerberCodeClass      = EBTransientValueProperty <CharacterGerberCodeClass>
typealias EBReadOnlyPropertyArray_CharacterGerberCodeClass  = EBReadOnlyValueProperty <[CharacterGerberCodeClass]>
typealias EBTransientPropertyArray_CharacterGerberCodeClass = EBTransientValueProperty <[CharacterGerberCodeClass]>

//----------------------------------------------------------------------------------------------------------------------
//   Property class NSBezierPath
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NSBezierPath       = EBReadOnlyValueProperty <NSBezierPath>
typealias EBTransientProperty_NSBezierPath      = EBTransientValueProperty <NSBezierPath>
typealias EBReadWriteProperty_NSBezierPath   = EBReadWriteValueProperty <NSBezierPath>
typealias EBPropertyProxy_NSBezierPath       = EBPropertyValueProxy <NSBezierPath>
typealias EBComputedProperty_NSBezierPath    = EBComputedValueProperty <NSBezierPath>
typealias EBStoredProperty_NSBezierPath      = EBStoredValueProperty <NSBezierPath>
typealias EBPreferencesProperty_NSBezierPath = EBPreferencesValueProperty <NSBezierPath>

//----------------------------------------------------------------------------------------------------------------------
//   Property class NSFont
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NSFont       = EBReadOnlyValueProperty <NSFont>
typealias EBTransientProperty_NSFont      = EBTransientValueProperty <NSFont>
typealias EBReadWriteProperty_NSFont   = EBReadWriteValueProperty <NSFont>
typealias EBPropertyProxy_NSFont       = EBPropertyValueProxy <NSFont>
typealias EBComputedProperty_NSFont    = EBComputedValueProperty <NSFont>
typealias EBStoredProperty_NSFont      = EBStoredValueProperty <NSFont>
typealias EBPreferencesProperty_NSFont = EBPreferencesValueProperty <NSFont>

//----------------------------------------------------------------------------------------------------------------------
//   Property class NSColor
//----------------------------------------------------------------------------------------------------------------------

typealias EBReadOnlyProperty_NSColor       = EBReadOnlyValueProperty <NSColor>
typealias EBTransientProperty_NSColor      = EBTransientValueProperty <NSColor>
typealias EBReadWriteProperty_NSColor   = EBReadWriteValueProperty <NSColor>
typealias EBPropertyProxy_NSColor       = EBPropertyValueProxy <NSColor>
typealias EBComputedProperty_NSColor    = EBComputedValueProperty <NSColor>
typealias EBStoredProperty_NSColor      = EBStoredValueProperty <NSColor>
typealias EBPreferencesProperty_NSColor = EBPreferencesValueProperty <NSColor>

