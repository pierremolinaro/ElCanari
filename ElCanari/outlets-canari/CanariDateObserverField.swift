//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS GENERATED BY EASY BINDINGS, DO NOT MODIFY IT
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

class CanariDateObserverField : NSTextField, EBUserClassNameProtocol, NSTextFieldDelegate {

  //····················································································································

  required init? (coder: NSCoder) {
    super.init (coder:coder)
    self.delegate = self
    self.isEditable = false
    self.drawsBackground = false
    self.isBordered = false
    noteObjectAllocation (self)
  }

  //····················································································································

  override init (frame:NSRect) {
    super.init (frame:frame)
    self.delegate = self
    self.isEditable = false
    self.drawsBackground = false
    self.isBordered = false
    noteObjectAllocation (self)
  }
  
  //····················································································································

  deinit {
    noteObjectDeallocation (self)
  }

  //····················································································································
  //  valueObserver binding
  //····················································································································

  private func updateOutlet (_ object : EBReadOnlyProperty_Date) {
    switch object.prop {
    case .empty :
      self.enableFromValueBinding (false)
      self.stringValue = "—"
    case .single (let v):
      self.enableFromValueBinding (true)
      self.objectValue = v
    case .multiple :
      self.enableFromValueBinding (false)
      self.stringValue = "—"
    }
  }

  //····················································································································

  private var mValueController : EBSimpleController? = nil

  //····················································································································

  func bind_dateObserver (_ object : EBReadOnlyProperty_Date, file : String, line : Int) {
    self.mValueController = EBSimpleController (
      observedObjects: [object],
      callBack: { self.updateOutlet (object) }
    )
  }

  //····················································································································

  func unbind_dateObserver () {
    self.mValueController?.unregister ()
    self.mValueController = nil
  }

  //····················································································································
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
