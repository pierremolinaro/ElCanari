//--- START OF USER ZONE 1


//--- END OF USER ZONE 1
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension MergerDocument {
  @objc func insertBoardAction (_ sender : NSObject?) {
//--- START OF USER ZONE 2
    if let menuItem = sender as? NSMenuItem, let currentEvent = self.windowForSheet?.currentEvent {
      let mouseLocationInWindow : NSPoint = currentEvent.locationInWindow
      if let mouseLocation = self.mComposedBoardView?.convert (mouseLocationInWindow, from:nil) {
        let x = cocoaToCanariUnit (mouseLocation.x)
        let y = cocoaToCanariUnit (mouseLocation.y)
        if let representedObject = menuItem.representedObject as? InsertBoardMenuRepresentedObject {
          let boardModelName = representedObject.boardModelName
          var possibleBoardModel : BoardModel? = nil
          for boardModel in self.rootObject.boardModels_property.propval {
            if boardModel.name == boardModelName {
              possibleBoardModel = boardModel
              break
            }
          }
          if let boardModel = possibleBoardModel {
            // NSLog ("x \(mouseLocation.x), y \(mouseLocation.y)")
            // NSLog ("self.mInsertedInstanceDefaultOrientation?.selectedTag () \(self.mInsertedInstanceDefaultOrientation?.selectedTag ())")
            let rotation = QuadrantRotation (rawValue: self.mInsertedInstanceDefaultOrientation?.selectedTag () ?? 0)!
            let newBoard = MergerBoardInstance (self.ebUndoManager)
            newBoard.myModel_property.setProp (boardModel)
            newBoard.x = x
            newBoard.y = y
            newBoard.instanceRotation = rotation
            self.rootObject.boardInstances_property.add (newBoard)
            self.mBoardInstanceController.setSelection ([newBoard])
          }else{
            NSLog ("Cannot find '\(boardModelName)' board model")
          }
        }else{ // No represented object, show "insert array of boards" panel
          self.insertArrayOfBoards (atX:x, y:y)
        }
      }
    }else{
      NSLog ("Invalid sender")
    }
//--- END OF USER ZONE 2
  }
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
