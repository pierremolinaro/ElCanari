//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

func transient_MergerBoardInstance_instanceDisplay (
       _ self_x : Int,                              
       _ self_y : Int,                              
       _ self_myModel_modelWidth : Int?,            
       _ self_myModel_modelHeight : Int?,           
       _ self_instanceRotation : QuadrantRotation,  
       _ self_myModel_imageForInstances : EBShape?
) -> EBShape {
//--- START OF USER ZONE 2
  let width  = canariUnitToCocoa (self_myModel_modelWidth!)
  let height = canariUnitToCocoa (self_myModel_modelHeight!)
  let transform = NSAffineTransform ()
  transform.translateX (by: canariUnitToCocoa (self_x), yBy: canariUnitToCocoa (self_y))
  switch self_instanceRotation {
  case .rotation0 :
    break
  case .rotation90 :
    transform.translateX (by: height / 2.0, yBy: width / 2.0)
    transform.rotate (byDegrees: 90.0)
    transform.translateX (by: -width / 2.0, yBy: -height / 2.0)
  case .rotation180 :
    transform.translateX (by: width / 2.0, yBy: height / 2.0)
    transform.rotate (byDegrees: 180.0)
    transform.translateX (by: -width / 2.0, yBy: -height / 2.0)
  case .rotation270 :
    transform.translateX (by: height / 2.0, yBy: width / 2.0)
    transform.rotate (byDegrees: 270.0)
    transform.translateX (by: -width / 2.0, yBy: -height / 2.0)
  }
  return self_myModel_imageForInstances!.transformedBy (transform)
//--- END OF USER ZONE 2
}

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
