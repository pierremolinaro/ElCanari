//--- START OF USER ZONE 1


//--- END OF USER ZONE 1

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————
//  THIS FILE IS REGENERATED BY EASY BINDINGS, ONLY MODIFY IT WITHIN USER ZONES
//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

import Cocoa

//——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

extension PMMergerDocument {
  func insertBoardAction (_ sender : NSObject) {
//--- START OF USER ZONE 2
    if let menuItem = sender as? NSMenuItem {
      if let representedObject = menuItem.representedObject as? InsertBoardMenuRepresentedObject {
        let boardModelName = representedObject.boardModelName
        var possibleBoardModel : BoardModelEntity? = nil
        for boardModel in self.rootObject.boardModels_property.propval {
          if boardModel.name == boardModelName {
            possibleBoardModel = boardModel
            break
          }
        }
        if let boardModel = possibleBoardModel, let currentEvent = self.windowForSheet?.currentEvent {
          let mouseLocationInWindow : NSPoint = currentEvent.locationInWindow
          if let mouseLocation = self.mComposedBoardView?.convert (mouseLocationInWindow, from:nil) {
            // NSLog ("x \(mouseLocation.x), y \(mouseLocation.y)")
            let newBoard = MergerBoardInstanceEntity (managedObjectContext: self.managedObjectContext())
            newBoard.myModel_property.setProp (boardModel)
            newBoard.x = cocoaToCanariUnit (mouseLocation.x)
            newBoard.y = cocoaToCanariUnit (mouseLocation.y)
            self.rootObject.boardInstances_property.add (newBoard)
          }
        }else{
          NSLog ("Cannot find '\(boardModelName)' board model")
        }
      }else{
        NSLog ("Invalid representedObject")
      }
    }else{
      NSLog ("Invalid sender")
    }
//--- END OF USER ZONE 2
  }
}

//—————————————————————————————————————————————————————————————————————————————————————————————————————————————————————*
